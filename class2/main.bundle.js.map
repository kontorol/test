{"version":3,"sources":["C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src async","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/176/rec-icon-disable.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/176/rec-icon.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/18/warn.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/audio-mute.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/audio.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/calendar.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/camera-disable.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/camera.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/combined-shape.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/edit.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/exit.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/filter.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/full-screen.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/home-icon.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/info.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/library.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/login.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/logout.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/minimize.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/plus-copy.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/plus_large.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/recurrence.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/refresh.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/resize-app.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/screen.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/settings.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/32/cancel.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/32/pause.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/32/stop.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/40/camera.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/40/warn.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/arrow-left.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/arrow-right.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/back-light.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/dot.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/logo-pc-full.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/logo.svg","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-info/components/app-info.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-info/components/app-info.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-info/components/app-info.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/app-settings/app-settings.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/app-settings/app-settings.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/app-settings/app-settings.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/general-settings/general-settings.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/general-settings/general-settings.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/general-settings/general-settings.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/guards/general-settings-component-guard.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/services/settings.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.routing.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-details.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-details.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-details.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/services/recording-manager.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/services/scheduling.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/styles/device-container.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/styles/device-settings.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/styles/recording-details.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/main.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/scheduling/components/scheduling.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/scheduling/components/scheduling.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/scheduling/components/scheduling.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/environments/environment.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/personal/app.consts.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/polyfills.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/app-container/app-container.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/app-container/app-container.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/app-container/app-container.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/menagement-confirm-dialog.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/user-login/user-login.component.html","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/user-login/user-login.component.scss","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/user-login/user-login.component.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/auto-resize-textarea.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/dialog-addon.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/dropdown-addon.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/fit-text.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/shared-directives.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/spinner-number.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/tags-autocomplete.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/tags-chips.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/toggled-click-through-addon.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/tooltip-addon.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/duration.pipe.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/safe.pipe.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/shared-pipes.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/time.pipe.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/timer.pipe.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/truncate.pipe.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/audio-device-settings.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/audio-device.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/capture-device.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/capture-device.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/default-settings.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-connection.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-preview.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-recovery.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-resources.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-settings-base.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/video-device-settings.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/video-device.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/accessability.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-config.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-logger.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-notifications.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-persistent-data.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-state.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/authentication.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/infra.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/kaltura-api.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/panels.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/session-state.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/system-data.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/system-health.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/live/live-manager.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/live/live.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/monitoring/app-monitoring-agent-error-data.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/monitoring/app-monitoring-agent.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/monitoring/monitoring.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/mouse-click-indication.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording-details.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording-recovery.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording-utils.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/slides.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/resource-id/resource-id.module.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/resource-id/resource-id.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/utils/ipcWrapper.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/utils/minimize.service.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/utils/utils.ts","C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/~/moment/locale ^\\.\\/.*$"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src async\n// module id = ../../../../../src async recursive\n// module chunks = 0","module.exports = __webpack_public_path__ + \"rec-icon-disable.51c93cb129e8f0de655e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/176/rec-icon-disable.svg\n// module id = ../../../../../src/assets/svg/176/rec-icon-disable.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"rec-icon.e92c608f323390afeb6d.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/176/rec-icon.svg\n// module id = ../../../../../src/assets/svg/176/rec-icon.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"warn.166d9e2617d8c06935d2.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/18/warn.svg\n// module id = ../../../../../src/assets/svg/18/warn.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"audio-mute.eed69d8f1656dc28baaf.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/audio-mute.svg\n// module id = ../../../../../src/assets/svg/20/audio-mute.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"audio.b1f65c6993f6bed8141c.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/audio.svg\n// module id = ../../../../../src/assets/svg/20/audio.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"calendar.6a140b295f23c517c0b5.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/calendar.svg\n// module id = ../../../../../src/assets/svg/20/calendar.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"camera-disable.ebfa2f323a91478a532c.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/camera-disable.svg\n// module id = ../../../../../src/assets/svg/20/camera-disable.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"camera.c12073ec9697de6ed8a6.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/camera.svg\n// module id = ../../../../../src/assets/svg/20/camera.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"combined-shape.4e3024580d0c8d017a15.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/combined-shape.svg\n// module id = ../../../../../src/assets/svg/20/combined-shape.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"edit.bf87acf37887c011739e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/edit.svg\n// module id = ../../../../../src/assets/svg/20/edit.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"exit.7ea812edd9530afb2797.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/exit.svg\n// module id = ../../../../../src/assets/svg/20/exit.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"filter.f2cdc1449a8e405a9324.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/filter.svg\n// module id = ../../../../../src/assets/svg/20/filter.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"full-screen.657553331756a7df91ba.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/full-screen.svg\n// module id = ../../../../../src/assets/svg/20/full-screen.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"home-icon.72c362974ba5789e6b4e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/home-icon.svg\n// module id = ../../../../../src/assets/svg/20/home-icon.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"info.e224dd438702115e8fee.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/info.svg\n// module id = ../../../../../src/assets/svg/20/info.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"library.c12eed7d9ed73f1d2493.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/library.svg\n// module id = ../../../../../src/assets/svg/20/library.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"login.f81c135fe38dc3aa3cce.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/login.svg\n// module id = ../../../../../src/assets/svg/20/login.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"logout.837b4ce88e4e9ff3b2c2.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/logout.svg\n// module id = ../../../../../src/assets/svg/20/logout.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"minimize.eab80b093a9f9036cfcf.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/minimize.svg\n// module id = ../../../../../src/assets/svg/20/minimize.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"plus-copy.b495b4dfe3739734f558.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/plus-copy.svg\n// module id = ../../../../../src/assets/svg/20/plus-copy.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"plus_large.18346b776e8a0ce4d94c.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/plus_large.svg\n// module id = ../../../../../src/assets/svg/20/plus_large.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"recurrence.4dbe4792ff35a52fb589.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/recurrence.svg\n// module id = ../../../../../src/assets/svg/20/recurrence.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"refresh.da5147c880e81522c855.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/refresh.svg\n// module id = ../../../../../src/assets/svg/20/refresh.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"resize-app.3c90dbe5cd10ea0d1e93.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/resize-app.svg\n// module id = ../../../../../src/assets/svg/20/resize-app.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"screen.d8d29ca9a3d79d3e7830.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/screen.svg\n// module id = ../../../../../src/assets/svg/20/screen.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"settings.040cd0b11e6051863f34.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/20/settings.svg\n// module id = ../../../../../src/assets/svg/20/settings.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"cancel.c4f3a8089fe8a86d2f03.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/32/cancel.svg\n// module id = ../../../../../src/assets/svg/32/cancel.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"pause.eb12e7d0c58f2cda62b1.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/32/pause.svg\n// module id = ../../../../../src/assets/svg/32/pause.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"stop.f3224b5f5c847d5bde5e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/32/stop.svg\n// module id = ../../../../../src/assets/svg/32/stop.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"camera.c12073ec9697de6ed8a6.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/40/camera.svg\n// module id = ../../../../../src/assets/svg/40/camera.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"warn.1d39e57c6e53c4e802d2.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/40/warn.svg\n// module id = ../../../../../src/assets/svg/40/warn.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"arrow-left.8e62716bb2587dea9249.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/arrow-left.svg\n// module id = ../../../../../src/assets/svg/common/arrow-left.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"arrow-right.51ceb22db53f60b67475.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/arrow-right.svg\n// module id = ../../../../../src/assets/svg/common/arrow-right.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"back-light.9ae8001e0de377b4f135.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/back-light.svg\n// module id = ../../../../../src/assets/svg/common/back-light.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"dot.622f8924b09abef4067d.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/dot.svg\n// module id = ../../../../../src/assets/svg/common/dot.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"logo-pc-full.001ebd4b8a24e6853582.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/logo-pc-full.svg\n// module id = ../../../../../src/assets/svg/common/logo-pc-full.svg\n// module chunks = 0","module.exports = __webpack_public_path__ + \"logo.3e17886a2eb623a835b7.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/assets/svg/common/logo.svg\n// module id = ../../../../../src/assets/svg/common/logo.svg\n// module chunks = 0","module.exports = \"<div class=\\\"app-info-component\\\">\\r\\n\\r\\n  <div class=\\\"grid app-info-container\\\">\\r\\n\\r\\n    <div class=\\\"app-info-panel\\\">\\r\\n\\r\\n      <div class=\\\"col-12 app-info-header\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-4 no-spaces\\\">\\r\\n            <div class=\\\"app-info-icon-container\\\">\\r\\n              <div class=\\\"app-info-icon info-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"app-info-text\\\">\\r\\n              Information\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-12 app-info-body\\\">\\r\\n        <div class=\\\"info-row info-text-label\\\">Kaltura Classroom</div>\\r\\n        <div class=\\\"info-row\\\">\\r\\n          <span class=\\\"info-text-label\\\">Version:</span>{{_config ? _config.app_version: \\\"N/A\\\"}}</div>\\r\\n        <div class=\\\"info-row\\\">\\r\\n          <button class=\\\"app-link\\\" target=\\\"_blank\\\" (click)=\\\"openOpenSourceLicenses()\\\">Open-Source Libraries</button>\\r\\n        </div>\\r\\n        <div class=\\\"info-row info-text-label\\\">&copy; Copyright 2017 Kaltura</div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-info/components/app-info.component.html\n// module id = ../../../../../src/classroom/app-info/components/app-info.component.html\n// module chunks = 0","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-info-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.app-info-container {\\n  height: 100%;\\n  padding: 3.1% 2.5%;\\n  margin: 0; }\\n\\n.app-info-panel {\\n  width: 100%;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.app-info-text {\\n  line-height: 66px;\\n  opacity: 0.5;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 400;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff; }\\n\\n.app-info-icon-container {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.app-info-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.app-info-body {\\n  line-height: 20px;\\n  position: relative;\\n  font-family: Lato;\\n  font-size: 16px;\\n  color: white;\\n  padding: 11px 0px 0 85px;\\n  margin-right: 26px; }\\n\\n.app-info-body * {\\n  -webkit-user-select: text;\\n     -moz-user-select: text;\\n      -ms-user-select: text;\\n          user-select: text; }\\n\\n.app-info-body-link {\\n  cursor: pointer;\\n  color: cornflowerblue;\\n  text-decoration: underline; }\\n\\n.info-text-label {\\n  font-weight: 400;\\n  letter-spacing: 0.5px;\\n  margin-right: 6px; }\\n\\n.info-row {\\n  margin-top: 12px; }\\n\\n.info-icon {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/info.svg\")) + \") no-repeat top left; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-info/components/app-info.component.scss\n// module id = ../../../../../src/classroom/app-info/components/app-info.component.scss\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport {AppConfigService} from \"../../../shared/services/infra/app-config.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\n\r\n@Component({\r\n    selector: 'app-info',\r\n    templateUrl: './app-info.component.html',\r\n    styleUrls:  ['./app-info.component.scss'],\r\n})\r\nexport class AppInfoComponent {\r\n    _config : any[];\r\n    constructor(private appConfig:AppConfigService) {\r\n        this._config = this.appConfig.getConfigData(\"config.shared\");\r\n    }\r\n\r\n    openOpenSourceLicenses() {\r\n      ipcWrapper.sendIPC(\"open-external-link\",\"https://corp.kaltura.com/content/kaltura-lecture-capture-application-open-source-libraries\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-info/components/app-info.component.ts","module.exports = \"<div class=\\\"app-settings-component\\\">\\r\\n\\r\\n  <div class=\\\"grid app-settings-container\\\">\\r\\n\\r\\n    <div class=\\\"app-settings-panel\\\">\\r\\n\\r\\n      <div class=\\\"col-12 app-settings-header\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-4 no-spaces\\\">\\r\\n\\r\\n            <div class=\\\"app-settings-icon-container\\\">\\r\\n              <div class=\\\"app-settings-icon settings-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"app-settings-text\\\">\\r\\n              {{'SETTINGS.panel_title' | translate}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-12 app-settings-body grid\\\">\\r\\n        <div class=\\\"settings-tab\\\" (click)=\\\"onTabClick('general-settings-tab')\\\"\\r\\n             [ngClass]=\\\"{'tab-selected': selectedTabName === 'general-settings-tab'}\\\">{{'SETTINGS.general_settings_tab' | translate}}</div>\\r\\n\\r\\n        <!--todo remove when network device will be available-->\\r\\n        <!--<div class=\\\"tab-separator\\\"></div>-->\\r\\n\\r\\n        <!--<div class=\\\"settings-tab\\\" (click)=\\\"onTabClick('network-device-settings-tab')\\\"-->\\r\\n             <!--[ngClass]=\\\"{'tab-selected': selectedTabName === 'network-device-settings-tab'}\\\">{{'SETTINGS.network_device_settings_tab' | translate}}</div>-->\\r\\n\\r\\n        <div class=\\\"app-length-sep-line\\\"></div>\\r\\n\\r\\n        <div class=\\\"settings-tab-content col-12 no-padding-left\\\">\\r\\n          <!-- routing here -->\\r\\n          <router-outlet></router-outlet>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"buttons-control\\\">\\r\\n        <button class=\\\"app-settings-cancel-button app-link-button\\\" [disabled]=\\\"isCancelButtonDisabled()\\\" (click)=\\\"onCancelClicked()\\\">{{'COMMON.cancel' | translate}}</button>\\r\\n        <button class=\\\"app-settings-save-button app-oval-button\\\" [disabled]=\\\"isSaveButtonDisabled()\\\" (click)=\\\"onSaveClicked()\\\">{{'COMMON.save' | translate}}</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/app-settings/app-settings.component.html\n// module id = ../../../../../src/classroom/app-settings/components/app-settings/app-settings.component.html\n// module chunks = 0","var escape = require(\"../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-settings-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.app-settings-container {\\n  height: 100%;\\n  padding: 3.1% 2.5%;\\n  margin: 0; }\\n\\n.app-settings-panel {\\n  width: 100%;\\n  position: relative;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.settings-tab-content {\\n  margin-top: 8.1%; }\\n\\n.app-settings-text {\\n  line-height: 66px;\\n  opacity: 0.5;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 400;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff; }\\n\\n.app-settings-icon-container {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.app-settings-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.app-settings-body {\\n  line-height: 1.5;\\n  position: relative;\\n  font-family: Lato;\\n  font-size: 16px;\\n  color: white;\\n  padding: 26px 43px 0 85px;\\n  margin-right: 26px; }\\n\\n.app-settings-body * {\\n  -webkit-user-select: text;\\n     -moz-user-select: text;\\n      -ms-user-select: text;\\n          user-select: text; }\\n\\n.settings-tab {\\n  cursor: pointer;\\n  box-sizing: border-box;\\n  height: 29px;\\n  font-family: Lato;\\n  font-size: 16px;\\n  font-weight: 700;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1.25;\\n  letter-spacing: 0.5px;\\n  color: white; }\\n\\n.tab-selected {\\n  border-bottom: 2px solid white; }\\n\\n.tab-separator {\\n  width: 32px; }\\n\\n.app-settings-confirm-buttons {\\n  position: relative;\\n  padding: 0; }\\n\\n.settings-icon {\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/settings.svg\")) + \") no-repeat top left; }\\n\\n.buttons-control {\\n  position: absolute;\\n  top: 3px;\\n  right: 0; }\\n\\n.app-settings-cancel-button, .app-settings-save-button {\\n  margin-top: 14px;\\n  margin-right: 14px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/app-settings/app-settings.component.scss\n// module id = ../../../../../src/classroom/app-settings/components/app-settings/app-settings.component.scss\n// module chunks = 0","import {Component} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\nimport {SettingsService} from \"../../services/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './app-settings.component.html',\r\n  styleUrls: ['./app-settings.component.scss'],\r\n})\r\nexport class AppSettingsComponent {\r\n\r\n  selectedTabName;\r\n\r\n  constructor(private router: Router,\r\n              private log: AppLoggerService,\r\n              private settingsService: SettingsService)\r\n  {\r\n    this.selectedTabName = 'general-settings-tab';\r\n  }\r\n\r\n  onTabClick(tabName)\r\n  {\r\n    this.selectedTabName = tabName;\r\n    this.routeToSettings();\r\n  }\r\n\r\n  public onCancelClicked()\r\n  {\r\n    this.settingsService.onCancel();\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  public onSaveClicked()\r\n  {\r\n    this.settingsService.onSave()\r\n      .then(() => {\r\n        this.router.navigate(['']);\r\n      })\r\n      .catch(err => {\r\n        //stay in page...\r\n      });\r\n  }\r\n\r\n  public isCancelButtonDisabled()\r\n  {\r\n    return this.settingsService.isInProgress();\r\n  }\r\n\r\n  public isSaveButtonDisabled()\r\n  {\r\n    return this.settingsService.isInProgress();\r\n  }\r\n\r\n  private routeToSettings()\r\n  {\r\n    switch (this.selectedTabName) {\r\n      case 'general-settings-tab':\r\n        this.router.navigate(['/settings/general-settings']);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/app-settings/app-settings.component.ts","module.exports = \"<div class=\\\"general-settings-component grid col-12 no-padding-left\\\">\\r\\n\\r\\n  <div class=\\\"general-settings-container col-12 no-padding-left\\\">\\r\\n\\r\\n    <div class=\\\"resource-name-column col-12 no-padding-left\\\">\\r\\n      <div class=\\\"detail-field-title no-padding-left\\\">{{'SETTINGS.ClientName' | translate}}</div>\\r\\n      <div class=\\\"details-input-field-wrapper no-padding-left\\\">\\r\\n        <input  type=\\\"text\\\" autofocus #firstInput\\r\\n                [attr.aria-label]=\\\"'SETTINGS.ClientName' | translate\\\"\\r\\n                [(ngModel)]=\\\"resourceName\\\"\\r\\n                (keyup)=\\\"onKey($event)\\\"\\r\\n                class=\\\"details-input-field no-padding-left\\\" >\\r\\n      </div>\\r\\n      <div class=\\\"non-valid-field no-padding-left\\\" [hidden]=\\\"!getLastResourceNameError()\\\">{{getLastResourceNameError() | translate}}</div>\\r\\n      <div class=\\\"details-input-field-underline no-padding col-12\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"resource-id-column col-12 disabled no-padding-left\\\">\\r\\n      <div class=\\\"detail-field-title disabled no-padding-left\\\">{{'SETTINGS.ResourceID' | translate}}</div>\\r\\n      <div class=\\\"details-input-field-wrapper no-padding-left\\\">\\r\\n        <input  type=\\\"text\\\"\\r\\n                [attr.aria-label]=\\\"'SETTINGS.ResourceID' | translate\\\"\\r\\n                [ngModel]=\\\"resourceId\\\"\\r\\n                class=\\\"details-input-field no-padding-left\\\"\\r\\n                disabled>\\r\\n      </div>\\r\\n      <div class=\\\"details-input-field-underline no-padding col-12 disabled\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"isAdmin\\\" class=\\\"col-12 app-settings-body grid no-padding-left general-settings-action\\\">\\r\\n      <div [attr.aria-label]=\\\"'SETTINGS.max_number_of_inputs' | translate\\\" class=\\\"detail-field-title general-settings-action-title-container no-padding-left\\\">\\r\\n        <div class=\\\"general-settings-action-title\\\">{{'SETTINGS.max_number_of_inputs' | translate}}</div>\\r\\n      </div>\\r\\n      <div class=\\\"general-settings-action-button-container\\\">\\r\\n        <p-dropdown inputId=\\\"maxNumberOfSessions_dp\\\" dropdown-addon autoWidth=\\\"false\\\" class=\\\"max-inputs-dropdown\\\"\\r\\n                    (onCustomChange)=\\\"onMaxInputsChange()\\\" [options]=\\\"numOfInputsChoices\\\" [(ngModel)]=\\\"maxNumOfSessions\\\"></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"isAdmin\\\" class=\\\"col-12 app-settings-body grid no-padding-left general-settings-action\\\">\\r\\n      <div [attr.aria-label]=\\\"'SETTINGS.save_admin_defaults' | translate\\\" class=\\\"general-settings-action-title-container detail-field-title no-padding-left\\\">\\r\\n        <div class=\\\"general-settings-action-title\\\">{{'SETTINGS.save_admin_defaults' | translate}}</div>\\r\\n      </div>\\r\\n      <div class=\\\"general-settings-action-button-container\\\">\\r\\n        <button [attr.aria-label]=\\\"'SETTINGS.save_admin_defaults' | translate\\\"\\r\\n                class=\\\"no-drag focus-once small-oval-button general-settings-oval-button\\\"\\r\\n                (click)=\\\"onSaveDefaults()\\\">\\r\\n          {{'SETTINGS.save_admin_defaults_button_label' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- Log collector -->\\r\\n  <log-collector *ngIf=\\\"!userPrivacyEnabled\\\" [componentSize]=\\\"'small'\\\" class=\\\"grid col-12 general-settings-log-collector no-padding-left\\\"></log-collector>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/general-settings/general-settings.component.html\n// module id = ../../../../../src/classroom/app-settings/components/general-settings/general-settings.component.html\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".general-settings-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.details-input-field-wrapper {\\n  display: -ms-flexbox;\\n  display: flex; }\\n\\n.no-padding {\\n  padding: 0; }\\n\\n.general-settings-oval-button {\\n  width: 115px;\\n  height: 24px;\\n  border-radius: 100px;\\n  border: solid 1px white;\\n  background-color: rgba(255, 255, 255, 0);\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: 700;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: white; }\\n\\n.save-as-defaults {\\n  padding-top: 25px; }\\n\\n:host /deep/ .max-inputs-dropdown .ui-dropdown {\\n  width: 115px !important;\\n  height: 34px !important; }\\n\\n:host /deep/ .max-inputs-dropdown .ui-dropdown-panel {\\n  width: 115px !important;\\n  min-height: 34px !important; }\\n\\n.general-settings-action {\\n  padding-bottom: 50px; }\\n\\n.general-settings-action-title-container {\\n  width: 210px; }\\n\\n.general-settings-action-title {\\n  width: 190px; }\\n\\n.general-settings-action-button-container {\\n  width: 115px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/general-settings/general-settings.component.scss\n// module id = ../../../../../src/classroom/app-settings/components/general-settings/general-settings.component.scss\n// module chunks = 0","import {Component, ViewChild, ElementRef} from \"@angular/core\";\r\nimport {Router, NavigationEnd} from \"@angular/router\";\r\nimport {SelectItem} from \"primeng/components/common/api\";\r\nimport {SettingsService} from \"../../services/settings.service\";\r\n\r\n@Component({\r\n  selector: 'general-settings',\r\n  templateUrl: './general-settings.component.html',\r\n  styleUrls: ['./general-settings.component.scss']\r\n})\r\nexport class GeneralSettingsComponent {\r\n\r\n  @ViewChild('firstInput')\r\n  private firstInput: ElementRef;\r\n\r\n  private numOfInputsChoices: SelectItem[] = [];\r\n  private maxNumOfSessions = 2;\r\n\r\n  resourceName: string;\r\n  resourceId: string;\r\n  isAdmin: boolean = false;\r\n  userPrivacyEnabled: boolean = true;\r\n\r\n  constructor(private router: Router,\r\n              private settingsService: SettingsService)\r\n  {\r\n    Promise.all([this.settingsService.hasAdminRights(), this.settingsService.getUserPrivacyStatus()])\r\n      .then(([isAdmin, userPrivacyStatus]) => {\r\n        this.isAdmin = <boolean>isAdmin;\r\n        this.userPrivacyEnabled = (userPrivacyStatus === 1);\r\n      });\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.setMaxNumOfInputsData();\r\n    this.setResourceDetails();\r\n  }\r\n\r\n  public onSaveDefaults()\r\n  {\r\n    this.settingsService.saveCurrentSettingsAsDefault();\r\n  }\r\n\r\n  public onOpenLogsDirClick()\r\n  {\r\n    this.settingsService.openLogsDir();\r\n  }\r\n\r\n  public askBeforeLeave()\r\n  {\r\n    return this.settingsService.askBeforeLeave()\r\n      .then((canLeave) => {\r\n        this.setMaxNumOfInputsData(); //reset to default\r\n        return Promise.resolve(canLeave);\r\n      });\r\n  }\r\n\r\n  public onKey()\r\n  {\r\n    this.settingsService.setLastResourceNameError(\"\");\r\n    this.settingsService.setResourceNameLocally(this.resourceName);\r\n  }\r\n\r\n  public onMaxInputsChange()\r\n  {\r\n    this.settingsService.setMaxNumOfInputs(this.maxNumOfSessions);\r\n  }\r\n\r\n  public getLastResourceNameError()\r\n  {\r\n    return this.settingsService.getLastResourceNameError();\r\n  }\r\n\r\n  private setResourceDetails()\r\n  {\r\n    this.resourceName = this.settingsService.getResourceName();\r\n    this.resourceId = this.settingsService.getResourceId();\r\n    this.router.events.subscribe((event) => {\r\n      // when entering the page\r\n      if (event instanceof NavigationEnd) {\r\n        if (this.router.url === '/settings/general-settings') {\r\n          //we do this twice since refreshResourceNameFromServer take times, and since most of the time the server side doesn't change it we rather display something fast\r\n          this.resourceName = this.settingsService.getResourceName();\r\n          this.resourceId = this.settingsService.getResourceId();\r\n\r\n          this.settingsService.setLastResourceNameError(\"\");\r\n          this.setFocusOnFirstInput();\r\n\r\n          this.settingsService.refreshResourceName()\r\n            .then(() => {\r\n              //just to update  the resourceName\r\n              this.resourceName = this.settingsService.getResourceName();\r\n              this.resourceId = this.settingsService.getResourceId();\r\n            })\r\n            .catch(() => {\r\n              //not API response, we don't really care\r\n              return Promise.resolve(true);\r\n            });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private setFocusOnFirstInput()\r\n  {\r\n    this.firstInput.nativeElement.focus();\r\n  }\r\n\r\n  private setMaxNumOfInputsData()\r\n  {\r\n    this.maxNumOfSessions = this.settingsService.getMaxNumOfInputs();\r\n    this.numOfInputsChoices = [\r\n      {label: \"1\", value: 1}, {label: \"2\", value: 2}, {label: \"3\", value: 3}, {label: \"4\", value: 4}\r\n    ];\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/components/general-settings/general-settings.component.ts","import { CanDeactivate } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { GeneralSettingsComponent } from \"../components/general-settings/general-settings.component\";\r\n\r\n@Injectable()\r\nexport class GeneralSettingsComponentGuard implements CanDeactivate<GeneralSettingsComponent> {\r\n\r\n  canDeactivate(generalSettingsComponent: GeneralSettingsComponent) {\r\n    if (generalSettingsComponent) {\r\n      return generalSettingsComponent.askBeforeLeave();\r\n    }\r\n    else {\r\n      return Promise.resolve(true);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/guards/general-settings-component-guard.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppLoggerService} from \"../../../shared/services/infra/app-logger.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport * as _ from \"lodash\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {ResourceIdService} from \"../../../shared/services/resource-id/resource-id.service\";\r\nimport {AppPersistentDataService} from \"../../../shared/services/infra/app-persistent-data.service\";\r\nimport {AppConfigService} from \"../../../shared/services/infra/app-config.service\";\r\nimport {LogCollectorService} from \"../../../shared/components/log-collector/log-collector.service\";\r\nimport {AppStateService} from \"../../../shared/services/infra/app-state.service\";\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n\r\n  private resourceName: string;\r\n  private maxNumOfInputs: number;\r\n  private lastResourceNameError = \"\";\r\n\r\n  constructor( private log: AppLoggerService,\r\n               private appState: AppStateService,\r\n               private appConfig: AppConfigService,\r\n               private resourceIdService: ResourceIdService,\r\n               private logCollectorService: LogCollectorService,\r\n               private appPersistency: AppPersistentDataService\r\n  ) {}\r\n\r\n  public onSave()\r\n  {\r\n    this.appConfig.setConfigData('config.captureApp.maxNumberOfInputs', this.maxNumOfInputs);\r\n    return this.renameResourceName(this.resourceName)\r\n      .then(() => {\r\n        this.lastResourceNameError = \"\";\r\n      })\r\n      .catch(err => {\r\n        this.lastResourceNameError = utils.getAPIErrorMessage(err)\r\n      });\r\n  }\r\n\r\n  public onCancel()\r\n  {\r\n    this.getMaxNumOfInputs(); //reset number of max inputs value\r\n  }\r\n\r\n  public getMaxNumOfInputs()\r\n  {\r\n    this.maxNumOfInputs = this.appConfig.getConfigData('config.captureApp.maxNumberOfInputs');\r\n    return this.maxNumOfInputs;\r\n  }\r\n\r\n  public setMaxNumOfInputs(numOfInputs)\r\n  {\r\n    this.maxNumOfInputs = numOfInputs;\r\n  }\r\n\r\n  public isInProgress()\r\n  {\r\n    return this.isUploadingLogs();\r\n  }\r\n\r\n  public hasAdminRights()\r\n  {\r\n    return ipcWrapper.sendIPC('hasAdminRights');\r\n  }\r\n\r\n  public getUserPrivacyStatus()\r\n  {\r\n    return ipcWrapper.sendIPC('getPartnerUserPrivacyStatus');\r\n  }\r\n\r\n  public getResourceName()\r\n  {\r\n    this.resourceName = this.resourceIdService.resourceName;\r\n    return this.resourceName;\r\n  }\r\n\r\n  public getResourceId()\r\n  {\r\n    return this.resourceIdService.resourceId;\r\n  }\r\n\r\n  public refreshResourceName()\r\n  {\r\n    return this.resourceIdService.refreshResourceNameFromServer();\r\n  }\r\n\r\n  public renameResourceName(resourceName)\r\n  {\r\n    return this.resourceIdService.renameResourceName(resourceName);\r\n  }\r\n\r\n  public saveCurrentSettingsAsDefault()\r\n  {\r\n    return this.appPersistency.get('')\r\n      .then(persistentData => {\r\n        let defaultSettings = {};\r\n        let sessionNames = _.concat(this.appState.getSessionsNames(true), this.appState.getSessionsNames(false));\r\n        _.forEach(sessionNames, (sessionName) => {\r\n          defaultSettings[sessionName] = persistentData[sessionName] ? persistentData[sessionName] : {preview: 'disabled'};\r\n        });\r\n        return this.appPersistency.set('defaultSettings', defaultSettings);\r\n      })\r\n      .catch((e) => {\r\n        this.log.error('Failed to save default settings. ' + utils.stringifyMsg(e));\r\n      })\r\n  }\r\n\r\n  public openLogsDir()\r\n  {\r\n    return ipcWrapper.sendIPC('openDirectory', this.appConfig.getConfigData('config.shared.logsDir'))\r\n      .then(success => {\r\n        if(!success) this.log.error('Failed to open logs folder');\r\n      });\r\n  }\r\n\r\n  public askBeforeLeave()\r\n  {\r\n    return this.logCollectorService.askBeforeLeave();\r\n  }\r\n\r\n  public isUploadingLogs()\r\n  {\r\n    return this.logCollectorService.isUploadingLogs();\r\n  }\r\n\r\n  public setResourceNameLocally(resourceName)\r\n  {\r\n    this.resourceName = resourceName;\r\n  }\r\n\r\n  public getLastResourceNameError()\r\n  {\r\n    return this.lastResourceNameError;\r\n  }\r\n\r\n  public setLastResourceNameError(lastResourceNameError)\r\n  {\r\n    this.lastResourceNameError = lastResourceNameError;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app-settings/services/settings.service.ts","module.exports = \"<app-container [containerProperties]=\\\"containerProperties\\\"></app-container>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.component.html\n// module id = ../../../../../src/classroom/app.component.html\n// module chunks = 0","import {Component, HostListener, OnInit} from '@angular/core';\r\nimport {TranslateService} from 'ng2-translate';\r\nimport {ipcWrapper} from \"../utils/ipcWrapper\";\r\nimport {AppStateService} from \"../shared/services/infra/app-state.service\";\r\nimport {AppNotificationsService} from \"../shared/services/infra/app-notifications.service\";\r\nimport {AppLoggerService} from \"../shared/services/infra/app-logger.service\";\r\nimport {utils} from \"../utils/utils\";\r\nimport {SystemHealthService} from \"../shared/services/infra/system-health.service\";\r\nimport {AppMonitoringAgentService} from \"../shared/services/monitoring/app-monitoring-agent.service\";\r\nimport {SchedulingService} from \"./classroom-capture/services/scheduling.service\";\r\nimport {SystemDataService} from \"../shared/services/infra/system-data.service\";\r\nimport {MinimizeService} from \"../utils/minimize.service\";\r\nimport {AppContainerProperties} from \"../shared/components/app-container/app-container.component\"\r\nimport {AccessibilityService} from \"../shared/services/infra/accessability.service\";\r\nimport {DefaultSettingsService} from \"../shared/services/capture-device/default-settings.service\";\r\nimport {AppConfigService} from \"../shared/services/infra/app-config.service\";\r\nimport {AuthenticationService} from \"../shared/services/infra/authentication.service\";\r\nimport {AppService} from \"./app.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  providers: [AppService]\r\n})\r\nexport class AppComponent {\r\n\r\n  private containerProperties: AppContainerProperties;\r\n\r\n  constructor(\r\n              private log: AppLoggerService,\r\n              private appService: AppService,\r\n              private appNotificationsService: AppNotificationsService,\r\n              private schedulingService: SchedulingService,\r\n              private systemData: SystemDataService,\r\n              private sysNotificationService: SystemHealthService,\r\n              private appMonitoring: AppMonitoringAgentService,\r\n              private accessibilityService: AccessibilityService)\r\n  {\r\n    this.log.info(\"in AppComponent::constructor\");\r\n    this.appService.initLocale();\r\n    this.sysNotificationService.start();\r\n    this.appMonitoring.start();\r\n    this.appService.registerForWindowNotifications();\r\n    this.containerProperties = this.getContainerProperties();\r\n    this.loadApplication();\r\n  }\r\n\r\n  private loadApplication()\r\n  {\r\n    this.appService.initCaptureSessions()\r\n      .then(() => {\r\n        this.appService.loadApp(); //need to wait for window to be ready after splash screen\r\n      })\r\n      .then(() => {\r\n        this.appService.handleDefaultSettingsInit();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The Main reason why doing it in a method way is to add outline focus square\r\n   * on tab focus ONLY and not on click focus\r\n   * @param KeyboardEvent\r\n   */\r\n  @HostListener('document:keyup', ['$event'])\r\n  onKeyUp(event:KeyboardEvent) {\r\n    return this.accessibilityService.markNavigation(event);\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(){\r\n    this.appService.onDocumentClickHandler();\r\n  }\r\n\r\n  getContainerProperties() : AppContainerProperties{\r\n    let properties: AppContainerProperties = {\r\n      header: {\r\n        logoIcon: 'logo-icon',\r\n        buttons: ['minimize_to_tray', 'maximize', 'minimize', 'debug']\r\n      },\r\n      navbar: {\r\n        links: [{\r\n            linkClass: 'home-nav',\r\n            label: 'MENU.home',\r\n            routerLink: '/'\r\n          },\r\n          {\r\n            linkContainer: 'calendar-item',\r\n            linkClass: 'calendar-nav',\r\n            label: 'SCHEDULING.scheduling',\r\n            routerLink: '/scheduling',\r\n            shouldRender: () => { return this.schedulingService.isSchedulingEnabled; }\r\n          },\r\n          {\r\n            linkClass: 'info-nav',\r\n            label: 'APP_INFO.title',\r\n            routerLink: '/info',\r\n            shouldDisableWhenNotStable: true\r\n          },\r\n          {\r\n            linkContainer: '',\r\n            linkClass: 'settings-nav',\r\n            label: 'SETTINGS.panel_title',\r\n            routerLink: '/settings/general-settings',\r\n            shouldDisableWhenNotStable: true\r\n          }\r\n        ]\r\n      },\r\n      showBackLight: true\r\n    };\r\n    return properties;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.component.ts","import {NgModule} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {HttpModule} from '@angular/http';\r\nimport {TranslateModule} from 'ng2-translate';\r\n\r\n//shared modules\r\nimport {SharedPipes} from \"../shared/pipes/shared-pipes.module\";\r\nimport {SharedDirectives} from \"../shared/directives/shared-directives.module\";\r\nimport {InfraModule} from \"../shared/services/infra/infra.module\";\r\nimport {MonitoringModule} from \"../shared/services/monitoring/monitoring.module\";\r\nimport {ResourceIdModule} from \"../shared/services/resource-id/resource-id.module\";\r\nimport {CaptureDeviceModule} from \"../shared/services/capture-device/capture-device.module\";\r\nimport {RecordingModule} from \"../shared/services/recording/recording.module\";\r\nimport {LogCollectorModule} from \"../shared/components/log-collector/log-collector.module\";\r\nimport {LiveModule} from \"../shared/services/live/live.module\";\r\n\r\n//main application components\r\nimport {AppComponent} from \"./app.component\";\r\nimport { AppInfoComponent } from \"./app-info/components/app-info.component\";\r\nimport { ClassroomCaptureComponent }  from './classroom-capture/components/default-app-view/cc.component';\r\nimport {SchedulingComponent} from \"./scheduling/components/scheduling.component\";\r\n\r\n//app routing\r\nimport { routing }  from './app.routing';\r\n\r\n//components\r\nimport {RecordingDetailsComponent} from \"./classroom-capture/components/default-app-view/recording-details.component\";\r\nimport {RecordingFinalizeComponent} from \"./classroom-capture/components/default-app-view/recording-finalize.component\";\r\nimport {AppSettingsComponent} from \"./app-settings/components/app-settings/app-settings.component\";\r\nimport {RecordingNotificationsComponent} from \"./classroom-capture/components/recording-notifications/recording-notifications.component\";\r\n\r\n//services\r\nimport {MinimizeService} from \"../utils/minimize.service\";\r\nimport {RecordingManagerService} from \"./classroom-capture/services/recording-manager.service\";\r\nimport {SchedulingService} from \"./classroom-capture/services/scheduling.service\";\r\nimport {SettingsService} from \"./app-settings/services/settings.service\";\r\n\r\n//UI components\r\nimport {CheckboxModule, DropdownModule, DialogModule, ChipsModule, ConfirmDialogModule, AutoCompleteModule,SpinnerModule} from 'primeng/primeng';\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {TooltipModule} from \"primeng/components/tooltip/tooltip\";\r\nimport {AppContainerComponent} from \"../shared/components/app-container/app-container.component\";\r\nimport {UserLoginComponent} from \"../shared/components/user-login/user-login.component\";\r\nimport {GeneralSettingsComponent} from \"./app-settings/components/general-settings/general-settings.component\";\r\nimport {ProgressBarModule} from \"primeng/components/progressbar/progressbar\";\r\nimport {ConfirmationService} from \"primeng/components/common/confirmationservice\";\r\nimport {GeneralSettingsComponentGuard} from \"./app-settings/guards/general-settings-component-guard\";\r\nimport {InputsManagementsComponent} from \"./classroom-capture/components/inputs-management/inputs-management.component\";\r\nimport {InputsManagementService} from \"./classroom-capture/components/inputs-management/inputs-management.service\";\r\nimport {AddVisualInputComponent} from \"./classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component\";\r\nimport {AudioInputComponent} from \"./classroom-capture/components/inputs-management/audio-input/audio-input.component\";\r\nimport {VisualInputsContainerComponent} from \"./classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component\";\r\nimport {VisualInputComponent} from \"./classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component\";\r\nimport {VisualInputSettingsComponent} from \"./classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component\";\r\nimport {VisualInputControllersComponent} from \"./classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component\";\r\nimport {AudioSettingsComponent} from \"./classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component\";\r\n\r\n@NgModule({\r\n  imports:\r\n    [\r\n      SharedPipes,\r\n      SharedDirectives,\r\n      InfraModule,\r\n      ResourceIdModule,\r\n      MonitoringModule,\r\n      CaptureDeviceModule,\r\n      RecordingModule,\r\n      BrowserModule,\r\n      HttpModule,\r\n      TranslateModule.forRoot(),\r\n      routing,\r\n      FormsModule,\r\n      CheckboxModule,\r\n      DropdownModule,\r\n      DialogModule,\r\n      ChipsModule,\r\n      ConfirmDialogModule,\r\n      BrowserAnimationsModule,\r\n      AutoCompleteModule,\r\n      TooltipModule,\r\n      SpinnerModule,\r\n      ProgressBarModule,\r\n      LogCollectorModule,\r\n      LiveModule\r\n    ],\r\n  declarations:\r\n    [\r\n      AppComponent,\r\n      AppContainerComponent,\r\n      AppInfoComponent,\r\n      AppSettingsComponent,\r\n      GeneralSettingsComponent,\r\n      SchedulingComponent,\r\n      ClassroomCaptureComponent,\r\n      RecordingDetailsComponent,\r\n      RecordingFinalizeComponent,\r\n      RecordingNotificationsComponent,\r\n      UserLoginComponent,\r\n\r\n      InputsManagementsComponent,\r\n      AddVisualInputComponent,\r\n      AudioInputComponent,\r\n      VisualInputsContainerComponent,\r\n      VisualInputComponent,\r\n      VisualInputControllersComponent,\r\n      VisualInputSettingsComponent,\r\n      AudioSettingsComponent\r\n    ],\r\n  providers:\r\n    [\r\n      MinimizeService,\r\n      RecordingManagerService,\r\n      SchedulingService,\r\n      SettingsService,\r\n      ConfirmationService,\r\n      InputsManagementService,\r\n      GeneralSettingsComponentGuard\r\n    ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.module.ts","import {ModuleWithProviders}  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ClassroomCaptureComponent } from './classroom-capture/components/default-app-view/cc.component';\r\n\r\nimport { AppInfoComponent } from './app-info/components/app-info.component'\r\nimport { AppSettingsComponent } from './app-settings/components/app-settings/app-settings.component'\r\nimport {SchedulingComponent} from \"./scheduling/components/scheduling.component\";\r\nimport {GeneralSettingsComponent} from \"./app-settings/components/general-settings/general-settings.component\";\r\nimport {GeneralSettingsComponentGuard} from \"./app-settings/guards/general-settings-component-guard\";\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'info', component: AppInfoComponent },\r\n    { path: 'scheduling', component: SchedulingComponent },\r\n  { path: 'settings', component: AppSettingsComponent, children: [\r\n    { path: '', redirectTo: 'general-settings', pathMatch: 'full'},\r\n    { path: 'general-settings', component: GeneralSettingsComponent, canDeactivate: [GeneralSettingsComponentGuard]}\r\n  ]},\r\n  { path: '', component: ClassroomCaptureComponent, pathMatch: 'full'} // redirect to home page on load\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.routing.ts","import {Injectable} from \"@angular/core\";\r\nimport {TranslateService} from 'ng2-translate';\r\nimport {AppLoggerService} from \"../shared/services/infra/app-logger.service\";\r\nimport {ipcWrapper} from \"../utils/ipcWrapper\";\r\nimport {utils, promiseState} from \"../utils/utils\";\r\nimport * as _ from \"lodash\";\r\nimport {MinimizeService} from \"../utils/minimize.service\";\r\nimport {AuthenticationService} from \"../shared/services/infra/authentication.service\";\r\nimport {AppConfigService} from \"../shared/services/infra/app-config.service\";\r\nimport {DefaultSettingsService} from \"../shared/services/capture-device/default-settings.service\";\r\nimport {AppStateService} from \"../shared/services/infra/app-state.service\";\r\nimport {VideoDeviceService} from \"../shared/services/capture-device/video-device.service\";\r\nimport {AudioDeviceService} from \"../shared/services/capture-device/audio-device.service\";\r\nimport {SessionStateService} from \"../shared/services/infra/session-state.service\";\r\nimport {InputsManagementService} from \"./classroom-capture/components/inputs-management/inputs-management.service\";\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n  private isDefaultSettingsEnabled = false;\r\n\r\n  constructor(\r\n    private log: AppLoggerService,\r\n    private appState: AppStateService,\r\n    private appConfig: AppConfigService,\r\n    private translate: TranslateService,\r\n    private minimizeService: MinimizeService,\r\n    private videoService: VideoDeviceService,\r\n    private audioService: AudioDeviceService,\r\n    private authService: AuthenticationService,\r\n    private defaultSettings: DefaultSettingsService,\r\n    private sessionStateService: SessionStateService,\r\n    private inputsManagementService: InputsManagementService)\r\n  {\r\n    this.registerToInitSessionsEvent();\r\n  }\r\n\r\n  initLocale()\r\n  {\r\n    // this language will be used as a fallback when a translation isn't found in the current language\r\n    this.translate.setDefaultLang('en');\r\n    //get os locale and load translation\r\n    ipcWrapper.sendIPC('getOsLocale')\r\n      .then((locale: string) => {\r\n        this.translate.use(this.manipulateLocaleCode(locale));\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n        this.translate.use('en');\r\n      });\r\n  }\r\n\r\n  private registerToInitSessionsEvent()\r\n  {\r\n    this.appState.notifyDeviceComponentInit$.subscribe(() => {\r\n      this.log.info('Application sessions are being re-init after recording ended');\r\n      this.initCaptureSessions()\r\n        .catch((err) => {\r\n          this.log.error('AppService: Failed to init capture sessions after' +\r\n            ' notifyDeviceComponentInit. ' + utils.stringifyMsg(err) );\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  registerForWindowNotifications()\r\n  {\r\n    ipcWrapper.registerForNotification('on-window-maximize', () => {\r\n      this.minimizeService.cancelTrayMinimizationSubscription();\r\n    });\r\n    ipcWrapper.registerForNotification('on-window-move', () => {\r\n      this.minimizeService.cancelTrayMinimizationSubscription();\r\n    });\r\n  }\r\n\r\n  onDocumentClickHandler()\r\n  {\r\n    this.minimizeService.cancelTrayMinimizationSubscription();\r\n    this.authService.restartLoginIdleInterval();\r\n    if(this.isDefaultSettingsEnabled) this.defaultSettings.restartInterval();\r\n  }\r\n\r\n  handleDefaultSettingsInit()\r\n  {\r\n    if(this.appConfig.getConfigData('config.captureApp.restoreDefaultSettings.enable')) {\r\n      this.isDefaultSettingsEnabled = true;\r\n      this.defaultSettings.start(() => {\r\n        this.inputsManagementService.fireRefreshInputsEvent();\r\n      });\r\n    }\r\n  }\r\n\r\n  initCaptureSessions()\r\n  {\r\n    this.log.info('AppService: initCaptureSessions');\r\n    let captureSessionsToInitPromises = [];\r\n    return this.appState.getVisualSessionsNamesAndDefaultTypesForInit()\r\n      .then(sessions => {\r\n        _.forEach(sessions, (defaultType: string, sessionName) => {\r\n          captureSessionsToInitPromises.push(this.initVideoCaptureDevice(sessionName, defaultType));\r\n        });\r\n        //adding audio session\r\n        captureSessionsToInitPromises.push(this.initAudioCaptureDevice());\r\n        //init all\r\n        return utils.promiseAllSettled(captureSessionsToInitPromises);\r\n      })\r\n      .then((results: promiseState[]) => {\r\n        //no need to do anything, notifications for the user will be sent during device load\r\n        //and app will handle device failures. Just logging errors...\r\n        const failedPromises = results.filter(ps => ps.status !== 'fulfilled');\r\n        const errMsgsReducer = (concatErrMsgs, failedPromise) => concatErrMsgs += (utils.stringifyMsg(failedPromise.reason) + '\\n');\r\n        if(!_.isEmpty(failedPromises))\r\n          this.log.error('AppService: Error while init capture sessions ' + failedPromises.reduce(errMsgsReducer, ''));\r\n\r\n        this.log.info('appService sending sessionsInit event');\r\n        this.sessionStateService.sessionsInit.next();\r\n      });\r\n  }\r\n\r\n  loadApp()\r\n  {\r\n    this.log.info('Loading Kaltura Classroom app.');\r\n    return this.appState.sessionsAreReadyPromise\r\n      .then(() => {\r\n        this.log.info('classroom-app-load done loading');\r\n        return ipcWrapper.sendIPC(\"capture-app-load\");\r\n      });\r\n  }\r\n\r\n  private initVideoCaptureDevice(sessionName: string, defaultCaptureType: string)\r\n  {\r\n    return this.videoService.initDevice(sessionName, defaultCaptureType)\r\n      .then(() => {\r\n        return this.videoService.startDevice(sessionName, {left: 0, top: 0, width: 0, height: 0}); //we don't want to preview the video\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(sessionName + ' init Error ' + ' - ' + utils.stringifyMsg(err));\r\n        this.videoService.handleDeviceInitError(sessionName, err, {left: 0, top: 0, width: 0, height: 0}); //we don't want to preview the video\r\n      });\r\n  }\r\n\r\n  private initAudioCaptureDevice()\r\n  {\r\n    return this.audioService.initAudioDevice();\r\n  }\r\n\r\n  /**\r\n   * according to product - all en-XXXX should be mapped to en locale\r\n   * @param locale\r\n   * @returns {any}\r\n   */\r\n  private manipulateLocaleCode(locale)\r\n  {\r\n    if (!locale){\r\n      return 'en';\r\n    }\r\n    return locale.substr(0, 2);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/app.service.ts","module.exports = \"<div class=\\\"classroom-capture\\\">\\r\\n\\r\\n  <p-confirmDialog class=\\\"cc-confirmation\\\" message=\\\"{{this.confirmationText | translate}}\\\" appendTo=\\\"body\\\" #rcd dialog-addon role=\\\"dialog\\\" aria-modal=\\\"true\\\">\\r\\n    <p-footer class=\\\"confirm-dialog-footer\\\">\\r\\n      <button class=\\\"app-oval-button\\\" pButton label=\\\"{{'COMMON.no' | translate}}\\\" (click)=\\\"rcd.reject()\\\"></button>\\r\\n      <button class=\\\"confirm-button app-link-button cc-button\\\" pButton label=\\\"{{'COMMON.yes' | translate}}\\\" (click)=\\\"rcd.accept()\\\"></button>\\r\\n    </p-footer>\\r\\n  </p-confirmDialog>\\r\\n\\r\\n  <div class=\\\"grid-noGutter no-spaces classroom-capture-grid\\\">\\r\\n\\r\\n    <div *ngIf=\\\"isAuthEnabled\\\" class=\\\"user-login-section\\\">\\r\\n      <button class=\\\"user-login-container\\\" (click)=\\\"onLoginClick()\\\" [disabled]=\\\"isUserLoginDisabled()\\\" [attr.aria-label]=\\\"getLogInActionText() | translate\\\" >\\r\\n        <div class=\\\"user-login-name\\\">{{getLoggedInUserName() | translate}}</div>\\r\\n        <div class=\\\"user-login-button-style\\\">\\r\\n          <div class=\\\"user-login-icon-style\\\" [ngClass]=\\\"{'user-login-button-icon' : !isUserLoggedIn(), 'user-logout-button-icon' : isUserLoggedIn()}\\\"></div>\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"recording-title\\\">{{getRecordingTitle() | translate | truncate : 20 }}\\r\\n      <button class=\\\"edit-recording-button cc-button focus-once\\\"\\r\\n              role=\\\"button\\\"\\r\\n              [attr.aria-label]=\\\"'RECORD_DETAILS.panel_title' | translate\\\"\\r\\n              (click)=\\\"onShowRecordingDetailsPanel('recording-details-edit')\\\"\\r\\n              [ngClass]=\\\"{'active-edit-recording-button' : isRecordingDetailsVisible()}\\\"\\r\\n              [disabled]=\\\"isRecordingDetailsDisabled()\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"cc-recording-notifications-container\\\" [hidden]=\\\"hasActivePanel()\\\">\\r\\n      <recording-notifications></recording-notifications>\\r\\n    </div>\\r\\n\\r\\n    <recording-finalize class=\\\"recording-finalize-container\\\" *ngIf=\\\"showRecordingFinalDetails\\\"></recording-finalize>\\r\\n\\r\\n    <div class=\\\"col-12 controls-panel\\\" [hidden]=\\\"showRecordingFinalDetails\\\">\\r\\n\\r\\n      <div class=\\\"recording-container\\\" [hidden]=\\\"hasActivePanel() || displayAuthentication\\\">\\r\\n\\r\\n        <div class=\\\"grid-center no-spaces\\\">\\r\\n          <div class=\\\"grid-column no-spaces recording-controllers\\\">\\r\\n            <div class=\\\"col-12 recording-button-col\\\">\\r\\n              <div class=\\\"grid-center no-margins\\\">\\r\\n                <!--Stop button-->\\r\\n                <div class=\\\"col-1 recording-button-col\\\">\\r\\n                  <div class=\\\"grid-middle recording-button-grid\\\">\\r\\n                    <div class=\\\"col-12 recording-button-col\\\">\\r\\n                      <button [attr.aria-label]=\\\"getRecordingText() | translate\\\"  class=\\\"recording-buttons recording-button-stop focus-once\\\" *ngIf=\\\"showRecordControllers()\\\"\\r\\n                           (click)=\\\"onRecordingActionClick('stop')\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!--Start and Pause button-->\\r\\n                <div class=\\\"col-3 no-spaces\\\">\\r\\n                  <!--Start button-->\\r\\n                  <button [attr.aria-label]=\\\"getRecordingText() | translate\\\"  class=\\\"recording-button-start\\\"\\r\\n                          (click)=\\\"onRecordingActionClick('start')\\\" [disabled]=\\\"!isRecButtonsEnabled()\\\">\\r\\n                    <!--Pause button-->\\r\\n                    <span class=\\\"recording-buttons recording-button-pause\\\" *ngIf=\\\"showPauseButton()\\\"></span>\\r\\n                  </button>\\r\\n                </div>\\r\\n                <!--Cancel button-->\\r\\n                <div class=\\\"col-1 recording-button-col\\\">\\r\\n                  <div class=\\\"grid-middle recording-button-grid\\\">\\r\\n                    <div class=\\\"col-12 recording-button-col\\\">\\r\\n                      <button [attr.aria-label]=\\\"getRecordingText() | translate\\\"  class=\\\"recording-buttons recording-button-cancel focus-once\\\" *ngIf=\\\"showRecordControllers()\\\"\\r\\n                           (click)=\\\"onRecordingActionClick('cancel')\\\" #cancelButton>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"grid-center\\\">\\r\\n                <div class=\\\"recording-timer\\\" [ngClass]=\\\"{'recording-timer-disabled' : disableRecordingTime()}\\\" *ngIf=\\\"showRecordingTime()\\\">\\r\\n                  <div [hidden]=\\\"!isRecordingScheduledEvent()\\\" class=\\\"scheduling-icon\\\"></div>\\r\\n                  {{ getRecordingTime() | timer }}\\r\\n                  <button [hidden]=\\\"!shouldEnableEventExtension()\\\" onmouseup=\\\"this.blur()\\\" (click)=\\\"onExtendEventClick()\\\" class=\\\"extend-event-container\\\">\\r\\n                    <div class=\\\"extend-event-icon\\\"></div>\\r\\n                    <div class=\\\"extend-event-text\\\">{{extendEventText}}</div>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"grid-center\\\">\\r\\n                <div class=\\\"recording-text loading-inputs-text\\\" *ngIf=\\\"showLoadingInputsText()\\\">{{ 'RECORD.loading_inputs' | translate }}</div>\\r\\n                <div class=\\\"rec-loader\\\" *ngIf=\\\"showRecLoader()\\\"></div>\\r\\n                <div class=\\\"col-3 recording-text\\\" [ngClass]=\\\"{'recording-text-paused' : isRecPaused()}\\\" *ngIf=\\\"!showRecLoader()\\\">\\r\\n                  {{ getRecordingText() | translate }}\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"settings-container\\\" [hidden]=\\\"!hasActivePanel() && !displayAuthentication\\\">\\r\\n\\r\\n        <recording-details *ngIf=\\\"showRecordingDetails\\\"></recording-details>\\r\\n        <audio-settings [hidden]=\\\"!showAudioComponentSettings\\\"></audio-settings>\\r\\n        <user-login-dialog *ngIf=\\\"displayAuthentication\\\" (onSuccessfulSubmit)=\\\"onSuccessfulLogin()\\\"\\r\\n                           (onCancelClick)=\\\"onCancelLogin()\\\"></user-login-dialog>\\r\\n\\r\\n        <!--setting panels for all active visual inputs-->\\r\\n        <visual-input-settings *ngFor=\\\"let sessionName of getActiveVisualInputsSessions()\\\"\\r\\n                      id=\\\"sessionName\\\"\\r\\n                      [sessionName]=\\\"sessionName\\\"\\r\\n                      [deviceType]=\\\"activeVisualInputs[sessionName]\\\"\\r\\n                      [hidden]=\\\"!visualInputsPanelsDisplayState[sessionName]\\\">\\r\\n        </visual-input-settings>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12 devices-panel\\\" [hidden]=\\\"showRecordingFinalDetails\\\">\\r\\n\\r\\n      <inputs-management></inputs-management>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/default-app-view/cc.component.html\n// module chunks = 0","var escape = require(\"../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".classroom-capture {\\n  position: relative;\\n  height: 100%; }\\n\\n.recording-title {\\n  position: absolute;\\n  cursor: default;\\n  top: -54px;\\n  left: calc(50% - 80px);\\n  width: 160px;\\n  margin: auto;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 2.14;\\n  text-align: center;\\n  color: #ffffff; }\\n\\n.edit-recording-button {\\n  -webkit-app-region: no-drag;\\n  position: absolute;\\n  cursor: pointer;\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px;\\n  margin-left: 9px;\\n  opacity: 0.5;\\n  margin-top: 2px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/edit.svg\")) + \") no-repeat top left; }\\n\\n.edit-recording-button:hover {\\n  opacity: 1; }\\n\\n.active-edit-recording-button {\\n  opacity: 1; }\\n\\n.controls-panel {\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n  height: 50%; }\\n\\n.settings-container {\\n  height: 100%; }\\n\\n.devices-panel {\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n  min-height: 40.55%;\\n  height: 50%; }\\n\\n.recording-container {\\n  position: relative;\\n  top: 10%;\\n  width: 100%; }\\n\\n.recording-container-grid {\\n  padding-top: 12.4%; }\\n\\n.recording-controllers {\\n  width: 100%; }\\n\\n.recording-buttons {\\n  display: block;\\n  text-decoration: none;\\n  height: 32px;\\n  width: 32px;\\n  text-indent: -9999px;\\n  background-size: 32px 32px;\\n  margin: auto;\\n  cursor: pointer;\\n  border: none; }\\n\\n.recording-button-grid {\\n  height: 100%; }\\n\\n.recording-button-col {\\n  margin: 0;\\n  padding: 0; }\\n\\n.recording-button-start {\\n  position: relative;\\n  display: block;\\n  text-decoration: none;\\n  height: 186px;\\n  width: 186px;\\n  text-indent: -9999px;\\n  background-size: 186px 186px;\\n  margin: auto;\\n  cursor: pointer;\\n  border: none;\\n  transition: 0.5s;\\n  transform: scale(1);\\n  background: url(\" + escape(require(\"../../../../assets/svg/176/rec-icon.svg\")) + \") no-repeat top left; }\\n\\n.recording-button-start:focus {\\n  outline: none;\\n  transform: scale(1.1); }\\n\\n.recording-button-start:hover {\\n  outline: none;\\n  transform: scale(1.1); }\\n\\n.recording-button-start:disabled {\\n  background: url(\" + escape(require(\"../../../../assets/svg/176/rec-icon-disable.svg\")) + \") no-repeat top left; }\\n\\n.recording-button-stop {\\n  background: url(\" + escape(require(\"../../../../assets/svg/32/stop.svg\")) + \") no-repeat top left;\\n  opacity: 0.5; }\\n\\n.recording-button-stop:hover {\\n  opacity: 1; }\\n\\n.recording-button-stop:focus {\\n  opacity: 1;\\n  outline: none; }\\n\\n.recording-button-cancel {\\n  background: url(\" + escape(require(\"../../../../assets/svg/32/cancel.svg\")) + \") no-repeat top left;\\n  opacity: 0.5; }\\n\\n.recording-button-cancel:hover {\\n  opacity: 1; }\\n\\n.recording-button-cancel:focus {\\n  opacity: 1;\\n  outline: none; }\\n\\n.recording-button-pause {\\n  position: absolute;\\n  top: 50%;\\n  margin-top: -16px;\\n  left: 50%;\\n  margin-left: -16px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/32/pause.svg\")) + \") no-repeat top left; }\\n\\n.recording-text {\\n  opacity: 0.8;\\n  font-family: Lato;\\n  font-size: 18px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff;\\n  text-align: center; }\\n\\n.recording-text-paused {\\n  width: 173px;\\n  height: 27px;\\n  font-family: Lato;\\n  font-size: 22px;\\n  font-weight: 300;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #ffffff; }\\n\\n.recording-timer {\\n  position: relative;\\n  width: 143px;\\n  height: 44px;\\n  font-family: Lato;\\n  font-size: 36px;\\n  font-weight: 300;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #ffffff;\\n  text-align: center; }\\n\\n.recording-timer-disabled {\\n  opacity: 0.5; }\\n\\n.capture-devices-grid {\\n  margin: 0;\\n  padding: 0;\\n  height: 100%; }\\n\\n.device-container-col {\\n  margin: 0;\\n  padding: 0;\\n  height: 100%; }\\n\\n.audio-device-container-col {\\n  padding-left: 1.1%;\\n  padding-right: 1.1%; }\\n\\n.video-capture-device-container {\\n  width: 44.68%; }\\n\\n.audio-capture-device-container {\\n  width: 8.44%; }\\n\\n.cc-confirmation .ui-confirmdialog {\\n  width: 545px;\\n  height: 242px;\\n  background-color: #333333;\\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.25);\\n  border: solid 2px #ffffff;\\n  left: calc(50% - 242.5px) !important;\\n  top: 19.2% !important; }\\n\\n.cc-confirmation .ui-dialog-content {\\n  font-family: Lato;\\n  font-size: 20px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #ffffff;\\n  margin-top: 67px;\\n  margin-bottom: 45px;\\n  padding: 0 !important; }\\n\\n.cc-confirmation .ui-dialog-titlebar {\\n  display: none; }\\n\\n.cc-confirmation .confirm-dialog-footer {\\n  position: absolute;\\n  width: 200px;\\n  left: calc(50% - 100px);\\n  bottom: 12px; }\\n\\n.cc-confirmation .confirm-button {\\n  padding-top: 5px; }\\n\\n.cc-recording-notifications-container {\\n  position: absolute;\\n  pointer-events: none;\\n  top: 89px;\\n  left: -66px;\\n  z-index: 1; }\\n\\n.recording-finalize-container {\\n  width: 100%;\\n  height: 100%; }\\n\\n.scheduling-icon {\\n  position: absolute;\\n  left: -31px;\\n  top: 13px;\\n  width: 20px;\\n  height: 20px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/calendar.svg\")) + \") no-repeat top left; }\\n\\n.extend-event-container {\\n  position: absolute;\\n  width: 115px;\\n  height: 24px;\\n  left: 156px;\\n  top: 10.5px;\\n  border-radius: 100px;\\n  background-color: rgba(0, 0, 0, 0);\\n  border: solid 1px transparent;\\n  color: transparent;\\n  opacity: 0.5;\\n  outline: none; }\\n\\n.extend-event-container:hover, .extend-event-container:focus {\\n  border: solid 1px #ffffff;\\n  color: #ffffff;\\n  opacity: 1;\\n  cursor: pointer;\\n  outline: none; }\\n\\n.extend-event-container:active {\\n  box-shadow: inset 0 3px 3px 0 rgba(0, 0, 0, 0.5);\\n  outline: none; }\\n\\n.extend-event-icon {\\n  position: absolute;\\n  top: 7.5px;\\n  left: 9px;\\n  width: 10px;\\n  height: 10px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/plus-copy.svg\")) + \") no-repeat top left; }\\n\\n.extend-event-text {\\n  position: absolute;\\n  top: 6px;\\n  left: 20px;\\n  width: 83px;\\n  height: 15px;\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: 600;\\n  text-align: center; }\\n\\n.user-login-section {\\n  text-align: right;\\n  -webkit-app-region: no-drag;\\n  position: absolute;\\n  top: -45px;\\n  right: 0px;\\n  width: 160px;\\n  height: 30px; }\\n\\n.user-login-container {\\n  opacity: 0.7;\\n  cursor: pointer;\\n  position: relative;\\n  height: 30px;\\n  background: transparent;\\n  border: none;\\n  outline: none; }\\n\\n.user-login-container:hover {\\n  opacity: 1; }\\n\\n.user-login-container:disabled,\\n.user-login-container[disabled] {\\n  cursor: default;\\n  opacity: 0.7; }\\n\\n.user-login-name {\\n  position: relative;\\n  float: left;\\n  right: 10px;\\n  top: 9px;\\n  min-width: 50px;\\n  max-width: 115px;\\n  height: 30px;\\n  font-family: \\\"Lato\\\";\\n  font-size: 12px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1;\\n  letter-spacing: normal;\\n  text-align: right;\\n  color: #ffffff;\\n  text-overflow: ellipsis;\\n  overflow: hidden; }\\n\\n.user-login-button-style {\\n  position: relative;\\n  float: right;\\n  display: inline-block;\\n  border-radius: 50%;\\n  width: 26px;\\n  height: 26px;\\n  border: solid 2px #06a885; }\\n\\n.user-login-icon-style {\\n  position: absolute;\\n  top: 3px;\\n  right: 3px;\\n  width: 20px;\\n  height: 20px;\\n  border: none; }\\n\\n.user-login-button-icon {\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/login.svg\")) + \") no-repeat; }\\n\\n.user-logout-button-icon {\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/logout.svg\")) + \") no-repeat; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/default-app-view/cc.component.scss\n// module chunks = 0","import {Component, ViewEncapsulation, NgZone, ViewChild, ElementRef} from '@angular/core';\r\nimport {AppStateService} from \"../../../../shared/services/infra/app-state.service\";\r\nimport {PanelsService} from \"../../../../shared/services/infra/panels.service\";\r\nimport {ConfirmationService} from 'primeng/primeng';\r\nimport * as _ from 'lodash';\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\nimport {RecordingManagerService} from \"../../services/recording-manager.service\";\r\nimport {utils} from \"../../../../utils/utils\";\r\nimport {DeviceConnectionService} from \"../../../../shared/services/capture-device/device-connection.service\";\r\nimport {ipcWrapper} from \"../../../../utils/ipcWrapper\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {AccessibilityService} from \"../../../../shared/services/infra/accessability.service\";\r\nimport {AuthenticationService} from \"../../../../shared/services/infra/authentication.service\";\r\nimport {ClassroomCaptureService} from \"./cc.service\";\r\nimport {InputsManagementService} from \"../inputs-management/inputs-management.service\";\r\nimport {NavigationEnd, NavigationStart, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'classroom-capture',\r\n  templateUrl: './cc.component.html',\r\n  styleUrls:  ['./cc.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ConfirmationService, ClassroomCaptureService]\r\n})\r\nexport class ClassroomCaptureComponent\r\n{\r\n  isAuthEnabled = false;\r\n  userAuthStateChangeSub = null;\r\n\r\n  showRecordingDetails = false;\r\n  showRecordingFinalDetails = false;\r\n  displayAuthentication = false;\r\n  //inputs settings panels display status\r\n  showAudioComponentSettings = false;\r\n  visualInputsPanelsDisplayState: any = [];\r\n\r\n  confirmationText = '';\r\n  extendEventText = '';\r\n\r\n  private pendingRecodingAction = null;\r\n\r\n  private activeVisualInputs: any = [];\r\n\r\n  @ViewChild('cancelButton') private cancelButton: ElementRef;\r\n\r\n  constructor(private appState: AppStateService,\r\n              private ccService: ClassroomCaptureService,\r\n              private zone: NgZone, private panelsService: PanelsService,\r\n              private confirmationService: ConfirmationService,\r\n              private recordingManagerService: RecordingManagerService,\r\n              private log: AppLoggerService,\r\n              private deviceManagerService: DeviceConnectionService,\r\n              private translate: TranslateService,\r\n              private authService: AuthenticationService,\r\n              private inputsManagementService: InputsManagementService,\r\n              private accessibilityService: AccessibilityService,\r\n              private router: Router)\r\n  {\r\n    this.setInitialInputsPanelsAndTheirDisplayState();\r\n    this.registerToVisualInputsRefresh();\r\n    this.registerOnRouteEvents();\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.isAuthEnabled = AuthenticationService.isAuthenticationEnabled;\r\n    this.panelsObservables();\r\n    this.registerKeyboardShortcuts();\r\n    this.setExtendEventText();\r\n    this.onUserAuthStateChange();\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    if(this.userAuthStateChangeSub)\r\n      this.userAuthStateChangeSub.unsubscribe();\r\n  }\r\n\r\n  //stop / start device preview when navigating out/in home page and remove all open dialogs\r\n  private registerOnRouteEvents()\r\n  {\r\n    this.router.events.subscribe((event) => {\r\n      if(event instanceof NavigationStart) {\r\n        //leaving the page\r\n        if(this.router.url === '/' || this.router.url === '/home') {\r\n          this.ccService.handleRouteNavigationStart();\r\n          this.closeAllPanels();\r\n        }\r\n      } else if(event instanceof NavigationEnd) {\r\n        if(this.router.url === '/' || this.router.url === '/home') {\r\n          this.ccService.handleRouteNavigationEnd();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private registerToVisualInputsRefresh()\r\n  {\r\n    this.inputsManagementService.refreshInputs$.subscribe(() => {\r\n      this.log.info('ClassroomCaptureComponent: refresh inputs was fired');\r\n      this.setInitialInputsPanelsAndTheirDisplayState();\r\n    });\r\n  }\r\n\r\n  private setInitialInputsPanelsAndTheirDisplayState()\r\n  {\r\n    //remove all current active visual inputs\r\n    _.forEach(_.keys(this.activeVisualInputs), (key) => {\r\n      delete this.activeVisualInputs[key];\r\n    });\r\n    this.activeVisualInputs = [];\r\n    //remove all current display state\r\n    _.forEach(_.keys(this.visualInputsPanelsDisplayState), (key) => {\r\n      delete this.visualInputsPanelsDisplayState[key];\r\n    });\r\n    this.visualInputsPanelsDisplayState = [];\r\n    //set all inputs display state to false (hidden)\r\n    this.appState.getVisualSessionsNamesAndDefaultTypesForInit()\r\n      .then((sessions) => {\r\n        _.forEach(_.keys(sessions), (sessionName) => {\r\n          this.activeVisualInputs[sessionName] = sessions[sessionName];\r\n          this.visualInputsPanelsDisplayState[sessionName] = false;\r\n        })\r\n      });\r\n  }\r\n\r\n  getActiveVisualInputsSessions()\r\n  {\r\n    return _.keys(this.activeVisualInputs);\r\n  }\r\n\r\n  onSuccessfulLogin()\r\n  {\r\n    this.closeLoginPanel();\r\n  }\r\n\r\n  onUserAuthStateChange()\r\n  {\r\n    this.userAuthStateChangeSub = this.authService.userAuthUpdate$\r\n      .subscribe((authenticated) => {\r\n        if(authenticated) {\r\n          this.ccService.handleAuthenticatedUserChange()\r\n            .then((userChanged) => {\r\n              //if user wasn't changed - call requested action\r\n              if(!userChanged) {\r\n                this.onRecordingActionClick(this.pendingRecodingAction);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancelLogin()\r\n  {\r\n    this.closeLoginPanel();\r\n  }\r\n\r\n  private panelsObservables()\r\n  {\r\n    this.panelsService.currentPanel$.subscribe(\r\n      panel => {\r\n        switch (panel['type']) {\r\n          case 'recording-details-edit':\r\n            this.showRecordingDetails = panel['active'];\r\n            break;\r\n          case 'recording-details-finalize':\r\n            this.handleRecordingFinalizeChange(panel);\r\n            break;\r\n          case 'audio-device-settings':\r\n            this.showAudioComponentSettings = panel['active'];\r\n            break;\r\n        }\r\n\r\n        _.forEach(_.keys(this.visualInputsPanelsDisplayState), sessionName => {\r\n          if(panel['type'] === sessionName + '-device-settings') {\r\n            this.visualInputsPanelsDisplayState[sessionName] = panel['active'];\r\n          }\r\n        });\r\n      });\r\n\r\n    this.deviceManagerService.deviceConnectionState$.subscribe(\r\n      event => {\r\n        if(!_.isEmpty(event)){\r\n          this.closeAllSettingsPanels();\r\n        }\r\n      }\r\n    );\r\n    //closes all panels on scheduled event start / terminate rec notifications\r\n    this.recordingManagerService.focusOnRecording$.subscribe(\r\n      data => {\r\n        this.closeAllPanels();\r\n      },\r\n      err => this.log.error('scheduling notifications panels removal error. ' + utils.stringifyMsg(err))\r\n    );\r\n  }\r\n\r\n  private setExtendEventText()\r\n  {\r\n    this.ccService.getEventTimeInMinutes()\r\n      .then((minutes) => {\r\n        if(!minutes) this.extendEventText = '';\r\n        else {\r\n          this.translate.get('SCHEDULING.extend_event', {value: minutes}).subscribe((res: string) => {\r\n            this.extendEventText = res;\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  private closeAllPanels()\r\n  {\r\n    if(this.showRecordingDetails)\r\n      this.panelsService.updateCurrentPanel({type: 'recording-details-edit', active: false});\r\n    if(this.showRecordingFinalDetails)\r\n      this.panelsService.updateCurrentPanel({type: 'recording-details-finalize', active: false, closeOnly: true});\r\n    //close auth login panel if needed\r\n    this.onCancelLogin();\r\n    this.closeAllSettingsPanels();\r\n  }\r\n\r\n  private closeAllSettingsPanels()\r\n  {\r\n    //go over all visual inputs settings panels\r\n    _.forEach(_.keys(this.visualInputsPanelsDisplayState), sessionName => {\r\n      if(this.visualInputsPanelsDisplayState[sessionName]) {\r\n        this.panelsService.updateCurrentPanel({type: sessionName + '-device-settings', active: false});\r\n        this.visualInputsPanelsDisplayState[sessionName] = false;\r\n      }\r\n    });\r\n    if(this.showAudioComponentSettings)\r\n      this.panelsService.updateCurrentPanel({type: 'audio-device-settings', active: false});\r\n  }\r\n\r\n  /**\r\n   * panelType - 'recording-details-edit' / 'recording-details-finalize'\r\n   */\r\n  onShowRecordingDetailsPanel(panelType)\r\n  {\r\n    let active = !this.panelsService.isPanelActive('recording-details-edit');\r\n    this.panelsService.updateCurrentPanel({ type: panelType , active: active});\r\n  }\r\n\r\n  private showLoginPanel()\r\n  {\r\n    this.closeAllPanels();\r\n    this.displayAuthentication = true;\r\n    this.panelsService.updateCurrentPanel({type : 'user-login-panel', active : true});\r\n  }\r\n\r\n  private closeLoginPanel()\r\n  {\r\n    this.displayAuthentication = false;\r\n    this.panelsService.updateCurrentPanel({type : 'user-login-panel', active : this.displayAuthentication});\r\n  }\r\n\r\n  handleRecordingFinalizeChange(panel)\r\n  {\r\n    this.showRecordingFinalDetails = panel['active'];\r\n    if(_.isEmpty(panel['closeOnly'])) {\r\n      //waiting for next ui cycle in order to get element position on page (engine is the one who paint the capture)\r\n      setTimeout(() => {\r\n        if(!this.showRecordingFinalDetails) {\r\n          this.ccService.startDevicesPreview();\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  /**** UI manipulations ****/\r\n\r\n  isRecordEnabled()\r\n  {\r\n    return this.ccService.isRecordEnabled();\r\n  }\r\n\r\n  isRecButtonsEnabled()\r\n  {\r\n    return this.isRecordEnabled() &&\r\n      (this.appState.isAppStable() || this.appState.isAppRecording());\r\n  }\r\n\r\n  hasActivePanel()\r\n  {\r\n    return !_.isEmpty(this.panelsService.getCurrentPanel()) ? this.panelsService.getCurrentPanel()['active'] : false;\r\n  }\r\n\r\n  isRecordingDetailsVisible()\r\n  {\r\n    return this.panelsService.isPanelActive('recording-details-edit');\r\n  }\r\n\r\n  isRecordingDetailsDisabled()\r\n  {\r\n    return !this.isRecordingDetailsVisible() &&\r\n      !_.isEmpty(this.panelsService.getCurrentPanel()) &&\r\n      this.panelsService.getCurrentPanel()['active'];\r\n  }\r\n\r\n  isUserLoginDisabled()\r\n  {\r\n    return (this.authService.isUserLoggedIn() && this.appState.isAppRecording()) ||\r\n      !_.isEmpty(this.panelsService.getCurrentPanel()) &&\r\n      this.panelsService.getCurrentPanel()['active'];\r\n  }\r\n\r\n  showRecordControllers()\r\n  {\r\n    return this.ccService.showRecordControllers();\r\n  }\r\n\r\n  showPauseButton()\r\n  {\r\n    return this.ccService.showPauseButton();\r\n  }\r\n\r\n  showRecordingTime()\r\n  {\r\n    return this.ccService.showRecordingTime();\r\n  }\r\n\r\n  disableRecordingTime()\r\n  {\r\n    return this.isRecPaused();\r\n  }\r\n\r\n  isRecPaused()\r\n  {\r\n    return this.ccService.isRecPaused();\r\n  }\r\n\r\n  getRecordingTime()\r\n  {\r\n    //can't move it to service due to UI update issues\r\n    this.zone.run(() => this.recordingManagerService.getRecordingTime());\r\n    return this.recordingManagerService.getRecordingTime();\r\n  }\r\n\r\n  getRecordingTitle()\r\n  {\r\n    return this.ccService.getRecordingTitle();\r\n  }\r\n\r\n  isRecordingScheduledEvent()\r\n  {\r\n    return this.ccService.isRecordingScheduledEvent();\r\n  }\r\n\r\n  shouldEnableEventExtension()\r\n  {\r\n    return this.ccService.shouldEnableEventExtension();\r\n  }\r\n\r\n  getRecordingText()\r\n  {\r\n    return this.ccService.getRecordingText();\r\n  }\r\n\r\n  showRecLoader()\r\n  {\r\n    //can't move it to service due to UI update issues\r\n    this.zone.run(() => this.recordingManagerService.recordingIsLoading);\r\n    return this.recordingManagerService.recordingIsLoading ||\r\n      (!this.appState.isAppStable() && !this.appState.isAppRecording());\r\n  }\r\n\r\n  showLoadingInputsText()\r\n  {\r\n    return !this.recordingManagerService.recordingIsLoading &&\r\n      (!this.appState.isAppStable() && !this.appState.isAppRecording());\r\n  }\r\n\r\n  /**** Recording UI interactions ****/\r\n\r\n  onRecordingActionClick(action)\r\n  {\r\n    //if need to log in - save user action and display login page\r\n    if(AuthenticationService.isAuthenticationEnabled && !this.authService.isUserLoggedIn()) {\r\n      this.pendingRecodingAction = action;\r\n      this.showLoginPanel();\r\n    } else {\r\n      this.pendingRecodingAction = null;\r\n      switch (action) {\r\n        case 'start':\r\n          this.onRecordClick();\r\n          break;\r\n        case 'stop':\r\n          this.onStopRecordClick();\r\n          break;\r\n        case 'cancel':\r\n          this.onCancelRecordClick();\r\n          break;\r\n        case 'none':\r\n          this.log.info('User logged in with no pending action');\r\n          break;\r\n        default:\r\n          this.log.error('Invalid recording action: ' + action);\r\n      }\r\n    }\r\n  }\r\n\r\n  private onRecordClick()\r\n  {\r\n    if(this.isRecordEnabled()) {\r\n      if(this.ccService.shouldPauseRecording()) {\r\n        this.ccService.pauseRecording();\r\n      } else if(this.ccService.shouldResumeRecording()) {\r\n        this.ccService.resumeRecording();\r\n      } else {\r\n        this.shouldStartRecording();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onStopRecordClick()\r\n  {\r\n    this.ccService.stopRecording()\r\n      .then((succeeded) => {\r\n        if(succeeded){\r\n          this.log.info('showing record final screen');\r\n          this.onShowRecordingDetailsPanel('recording-details-finalize');\r\n        }\r\n      });\r\n  }\r\n\r\n  private onCancelRecordClick()\r\n  {\r\n    let currentRecState = this.appState.recordingPhase;\r\n    this.confirmationText = 'RECORD.cancel_confirm';\r\n    if(!this.recordingManagerService.actionInProgress) {\r\n      this.ccService.pauseRecording()\r\n        .then(() => {\r\n          this.confirmationService.confirm({\r\n            message: '',\r\n            accept: () => {\r\n              this.ccService.cancelRecording();\r\n            },\r\n            reject: () => {\r\n              if (this.appState.recordingPhase !== 'initial') { \r\n                  if(currentRecState === 'recording') {\r\n                    this.recordingManagerService.callRecordingNextAction('resume');\r\n                  } else {\r\n                    this.recordingManagerService.callRecordingNextAction('pause');\r\n                  }\r\n              }\r\n            }\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  onExtendEventClick()\r\n  {\r\n    this.recordingManagerService.extendScheduledEvent();\r\n  }\r\n\r\n  isUserLoggedIn()\r\n  {\r\n    return this.authService.isUserLoggedIn();\r\n  }\r\n\r\n  getLoggedInUserName()\r\n  {\r\n    return this.isUserLoggedIn() ? this.authService.getLoggedInUserId() : 'COMMON.sign_in';\r\n  }\r\n\r\n  //user for accessibility\r\n  getLogInActionText()\r\n  {\r\n    return this.isUserLoggedIn() ? 'COMMON.sign_out' : 'COMMON.sign_in';\r\n  }\r\n\r\n  onLoginClick()\r\n  {\r\n    if(this.isUserLoggedIn()) {\r\n      this.authService.logOut();\r\n    } else {\r\n      this.pendingRecodingAction = 'none';\r\n      this.showLoginPanel();\r\n    }\r\n  }\r\n\r\n  private shouldStartRecording()\r\n  {\r\n    //if audio is disabled / there are no audio devices - show confirmation to user\r\n    if(_.isEmpty(this.appState.getActiveAudioSession())) {\r\n      this.confirmationText = 'RECORD.start_no_audio_confirm';\r\n      this.confirmationService.confirm({\r\n        message: '',\r\n        accept: () => {\r\n          this.ccService.startRecording();\r\n        }\r\n      });\r\n    } else {\r\n      this.ccService.startRecording();\r\n    }\r\n  }\r\n\r\n  private registerKeyboardShortcuts()\r\n  {\r\n    ipcWrapper.registerShortcut(\"CommandOrControl+Shift+R\", ()=>{\r\n      this.log.info('recording button shortcut...');\r\n      this.onRecordingActionClick('start');\r\n    });\r\n    ipcWrapper.registerShortcut(\"CommandOrControl+Shift+S\", ()=>{\r\n      this.log.info('stop recording button shortcut...');\r\n      ipcWrapper.sendIPC('setFocusOnMainWindow').catch(() => {});\r\n      if (this.appState.isAppRecording()) {\r\n        this.onRecordingActionClick('stop');\r\n      }\r\n    });\r\n    ipcWrapper.registerShortcut(\"CommandOrControl+Shift+C\", ()=>{\r\n      this.log.info('cancel recording recording shortcut...');\r\n      ipcWrapper.sendIPC('setFocusOnMainWindow').catch(() => {});\r\n      if (this.appState.isAppRecording()) {\r\n        this.onRecordingActionClick('cancel');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.component.ts","import {Injectable} from \"@angular/core\";\r\nimport * as _ from 'lodash';\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\nimport {DevicePreviewService} from \"../../../../shared/services/capture-device/device-preview.service\";\r\nimport {RecordingManagerService} from \"../../services/recording-manager.service\";\r\nimport {AppNotificationsService} from \"../../../../shared/services/infra/app-notifications.service\";\r\nimport {AppStateService} from \"../../../../shared/services/infra/app-state.service\";\r\nimport {RecordingDetailsService} from \"../../../../shared/services/recording/recording-details.service\";\r\nimport {AuthenticationService} from \"../../../../shared/services/infra/authentication.service\";\r\nimport {AppConfigService} from \"../../../../shared/services/infra/app-config.service\";\r\nimport {AppPersistentDataService} from \"../../../../shared/services/infra/app-persistent-data.service\";\r\n\r\n@Injectable()\r\nexport class ClassroomCaptureService {\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private appState: AppStateService,\r\n              private appConfig: AppConfigService,\r\n              private authService: AuthenticationService,\r\n              private devicePreviewService: DevicePreviewService,\r\n              private notificationService: AppNotificationsService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private recordingManagerService: RecordingManagerService,\r\n              private recordingDetailsService: RecordingDetailsService)\r\n  {\r\n  }\r\n\r\n  isRecordEnabled()\r\n  {\r\n    return this.recordingManagerService.isRecordEnabled();\r\n  }\r\n\r\n  pauseRecording()\r\n  {\r\n    return this.recordingManagerService.callRecordingNextAction('pause')\r\n      .catch((err) => {\r\n        this.handleRecordingActionRejection(err, 'NOTIFICATIONS.error_pauseRecording', 'error');\r\n      });\r\n  }\r\n\r\n  resumeRecording()\r\n  {\r\n    this.recordingManagerService.callRecordingNextAction('resume')\r\n      .catch((err) => {\r\n        this.handleRecordingActionRejection(err, 'NOTIFICATIONS.error_resumeRecording', 'error');\r\n      });\r\n  }\r\n\r\n  cancelRecording()\r\n  {\r\n    this.recordingManagerService.callRecordingNextAction('cancel')\r\n      .catch((err) =>{\r\n        this.handleRecordingActionRejection(err, 'NOTIFICATIONS.error_cancel', 'error');\r\n      });\r\n  }\r\n\r\n  startRecording()\r\n  {\r\n    this.recordingManagerService.callRecordingNextAction('start')\r\n      .catch((err) => {\r\n        this.handleRecordingActionRejection(err, 'NOTIFICATIONS.error_startRecording', 'error');\r\n      });\r\n  }\r\n\r\n  stopRecording()\r\n  {\r\n    return this.recordingManagerService.callRecordingNextAction('stop')\r\n      .then(() => { return true; })\r\n      .catch((err) => {\r\n        this.handleRecordingActionRejection(err, 'NOTIFICATIONS.error_stopRecording', 'error');\r\n        return false;\r\n      });\r\n  }\r\n\r\n  shouldResumeRecording()\r\n  {\r\n    return this.recordingManagerService.getRecordingPhase() === 'paused';\r\n  }\r\n\r\n  shouldPauseRecording()\r\n  {\r\n    return this.recordingManagerService.getRecordingPhase() === 'recording';\r\n  }\r\n\r\n  startDevicesPreview()\r\n  {\r\n    return this.devicePreviewService.startPreviewSome(Object.keys(this.appState.getActiveVisualSessions()));\r\n  }\r\n\r\n  getEventTimeInMinutes()\r\n  {\r\n    return this.recordingManagerService.getExtendEventTimeInMinutes()\r\n      .then((minutes) => {\r\n        return minutes;\r\n      })\r\n      .catch((err) => {\r\n        this.log.warn('Failed to load event extend time configuration');\r\n        return '';\r\n      });\r\n  }\r\n\r\n  showRecordControllers()\r\n  {\r\n    return this.recordingManagerService.getRecordingPhase() !== 'initial';\r\n  }\r\n\r\n  showPauseButton()\r\n  {\r\n    return this.recordingManagerService.getRecordingPhase() === 'recording';\r\n  }\r\n\r\n  showRecordingTime()\r\n  {\r\n    return this.recordingManagerService.getRecordingPhase() !== 'initial';\r\n  }\r\n\r\n  isRecPaused()\r\n  {\r\n    return this.recordingManagerService.getRecordingPhase() === 'paused';\r\n  }\r\n\r\n  getRecordingTitle()\r\n  {\r\n    let details = this.recordingDetailsService.getRecordingDetails();\r\n    return details && details['title'] ? details['title'] : 'RECORD.new_title';\r\n  }\r\n\r\n  isRecordingScheduledEvent()\r\n  {\r\n    return this.recordingManagerService.isRecordingScheduledEvent();\r\n  }\r\n\r\n  shouldEnableEventExtension()\r\n  {\r\n    return this.recordingManagerService.shouldEnableEventExtension;\r\n  }\r\n\r\n  getRecordingText()\r\n  {\r\n    let recText = '';\r\n    if(this.isRecordEnabled() || this.recordingManagerService.isRecordDisconnected()) {\r\n      switch (this.recordingManagerService.getRecordingPhase()) {\r\n        case 'initial':\r\n          recText = 'RECORD.start';\r\n          break;\r\n        case 'paused':\r\n          recText = 'RECORD.paused';\r\n          break;\r\n      }\r\n    } else if (this.recordingManagerService.isRecIsLoading()) {\r\n      recText = 'RECORD.loading_sources';\r\n    } else {\r\n      recText = 'RECORD.choose_source';\r\n    }\r\n    return recText;\r\n  }\r\n\r\n  /**\r\n   * if app is in the middle of other user's recording. close it automatically\r\n   * will return true is user was changed\r\n   */\r\n  handleAuthenticatedUserChange() : Promise<boolean>\r\n  {\r\n    if(!AuthenticationService.isAuthenticationEnabled) return Promise.resolve(false);\r\n\r\n    return this.persistencyService.get('recording.details')\r\n      .then((recDetails) => {\r\n        let configAppToken = this.appConfig.getConfigData('config.shared.externalSettings.appToken');\r\n        let configUserId = this.appConfig.getConfigData('config.shared.externalSettings.userId');\r\n        //if there is a mismatch between current logged in user and recording's owner (if exists)\r\n        if(recDetails && recDetails['userName'] && recDetails['appToken'] && configAppToken && configUserId &&\r\n          (recDetails['userName'] !== configUserId || recDetails['appToken'] !== configAppToken)) {\r\n          return this.recordingManagerService.finalizeCurrentRecording(true)\r\n            .then(() => {\r\n              return true;\r\n            });\r\n        } else {\r\n          return Promise.resolve(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleRouteNavigationStart()\r\n  {\r\n    this.log.info('routing out - hiding all devices preview');\r\n    this.devicePreviewService.hideAll()\r\n      .then(() => {\r\n        this.log.info('routing out - hiding all devices preview');\r\n      });\r\n  }\r\n\r\n  handleRouteNavigationEnd()\r\n  {\r\n    if(this.isRecordEnabled()) {\r\n      this.log.info('routing in - showing all devices preview');\r\n      this.devicePreviewService.repositionActiveSessionsPreview();\r\n    }\r\n  }\r\n\r\n  private handleRecordingActionRejection(err, notification, severity)\r\n  {\r\n    if(_.isObject(err) && !_.isEmpty(err.code) &&\r\n      (err.code === 'ACTION_IN_PROGRESS' || err.code === 'STATE_TRANSITION_INVALID')) {\r\n      this.log.warn('Recording action is in progress or Requested transition is invalid: ' + err.msg);\r\n    } else if (_.isObject(err) && !_.isEmpty(err[0]) && !_.isEmpty(err[0].code) && !this.inEngineErrorsBlackList(err[0].code)) {\r\n      this.notificationService.sendNotification('NOTIFICATIONS.' + err[0].code, severity);\r\n    } else {\r\n      this.notificationService.sendNotification(notification, severity);\r\n    }\r\n  }\r\n\r\n  private inEngineErrorsBlackList(errCode)\r\n  {\r\n    if(errCode === 'EngineError_UnspecifiedError') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/cc.service.ts","module.exports = \"<div class=\\\"recording-details-component\\\">\\r\\n\\r\\n  <div class=\\\"grid recording-details-container\\\">\\r\\n\\r\\n    <div class=\\\"recording-details-panel\\\">\\r\\n\\r\\n      <div class=\\\"col-12 recording-details-header\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-4 no-spaces\\\">\\r\\n            <div class=\\\"recording-details-image\\\">\\r\\n              <div class=\\\"edit-details-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"edit-details-text\\\">\\r\\n              {{'RECORD_DETAILS.panel_title' | translate}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-12 recording-details-body\\\">\\r\\n        <div class=\\\"grid-2\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.title' | translate}}</div>\\r\\n            <input type=\\\"text\\\" autofocus #firstInput\\r\\n                   [attr.aria-label]=\\\"'RECORD_DETAILS.title' | translate\\\"\\r\\n                   [(ngModel)]=\\\"tempRecordingDetails.title\\\"\\r\\n                   class=\\\"details-input-field\\\"\\r\\n                   [disabled]=\\\"isReadOnly()\\\">\\r\\n            <div class=\\\"details-input-field-underline\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.user_name' | translate}}</div>\\r\\n            <p-autoComplete inputStyleClass =\\\"details-input-field\\\" [(ngModel)]=\\\"selectedUser\\\" [suggestions]=\\\"getUserList()\\\"\\r\\n                            (completeMethod)=\\\"filterUserList($event)\\\" field=\\\"id\\\" [size]=\\\"40\\\" (ngModelChange)=\\\"onUserChange($event)\\\"\\r\\n                            [attr.aria-label]=\\\"'RECORD_DETAILS.user_name' | translate\\\"\\r\\n                            [minLength]=\\\"3\\\" [disabled]=\\\"isUserNameDisabled()\\\" (onFocus)=\\\"onUserNameFieldClick()\\\">\\r\\n              <template let-selectedUser pTemplate=\\\"item\\\">\\r\\n                {{selectedUser.fullName}} ({{selectedUser.id}})\\r\\n              </template>\\r\\n            </p-autoComplete>\\r\\n            <div class=\\\"non-valid-field\\\" [hidden]=\\\"isUserNameValid()\\\">{{'RECORD_DETAILS.invalid_user_name' | translate}}</div>\\r\\n            <div class=\\\"offline-field\\\" [hidden]=\\\"!isUserListOffline()\\\">{{'RECORD_DETAILS.offline_userList' | translate}}</div>\\r\\n            <div class=\\\"details-input-field-underline\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.description' | translate}}</div>\\r\\n            <textarea auto-resize [(ngModel)]=\\\"tempRecordingDetails.description\\\" [maxRows]=\\\"3\\\"\\r\\n                      [attr.aria-label]=\\\"'RECORD_DETAILS.description' | translate\\\"\\r\\n                      [rowHeight]=\\\"20\\\" rows=\\\"1\\\" type=\\\"text\\\" class=\\\"details-input-field\\\" [disabled]=\\\"isReadOnly()\\\"></textarea>\\r\\n            <div class=\\\"details-input-field-underline\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.tags' | translate}}</div>\\r\\n            <div class=\\\"details-input-tags\\\">\\r\\n              <p-chips tags-chips\\r\\n                       [attr.aria-label]=\\\"'RECORD_DETAILS.tags' | translate\\\"\\r\\n                       [(ngModel)]=\\\"tempRecordingDetails.tags\\\"\\r\\n                       [disabled]=\\\"isReadOnly()\\\"></p-chips>\\r\\n            </div>\\r\\n            <div class=\\\"details-input-field-underline\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <span class=\\\"buttons-control\\\">\\r\\n          <button *ngIf=\\\"isReadOnly()\\\" class=\\\"recording-details-back app-oval-button\\\" (click)=\\\"onCancelDetailsClick()\\\">\\r\\n            {{'COMMON.back' | translate}}\\r\\n          </button>\\r\\n          <button *ngIf=\\\"!isReadOnly()\\\"\\r\\n                  class=\\\"recording-details-cancel app-link-button\\\" (click)=\\\"onCancelDetailsClick()\\\">\\r\\n            {{'COMMON.cancel' | translate}}\\r\\n          </button>\\r\\n          <button *ngIf=\\\"!isReadOnly()\\\" class=\\\"recording-details-save app-oval-button\\\" (click)=\\\"onSaveDetailsClick()\\\">\\r\\n            {{'COMMON.save' | translate}}\\r\\n          </button>\\r\\n      </span>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-details.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/default-app-view/recording-details.component.html\n// module chunks = 0","var escape = require(\"../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".recording-details-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.recording-details-container {\\n  height: 100%;\\n  padding: 3.1% 2.5%;\\n  margin: 0; }\\n\\n.recording-details-panel {\\n  width: 100%;\\n  position: relative;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.recording-details-header {\\n  height: 66px; }\\n\\n.recording-details-image {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.edit-details-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/edit.svg\")) + \") no-repeat top left; }\\n\\n.buttons-control {\\n  position: absolute;\\n  top: 14px;\\n  right: 13px; }\\n\\n.recording-details-back, .recording-details-cancel {\\n  margin-right: 14px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-details.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/default-app-view/recording-details.component.scss\n// module chunks = 0","import {Component, ElementRef, ViewChild} from '@angular/core';\r\nimport {RecordingDetailsService} from \"../../../../shared/services/recording/recording-details.service\";\r\nimport * as _ from 'lodash';\r\nimport {PanelsService} from \"../../../../shared/services/infra/panels.service\";\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'recording-details',\r\n  templateUrl: './recording-details.component.html',\r\n  styleUrls:  ['./recording-details.component.scss', './../../styles/recording-details.scss'],\r\n})\r\nexport class RecordingDetailsComponent\r\n{\r\n  private mySubscription = null;\r\n  private validSave = true;\r\n  tempRecordingDetails = {};\r\n  selectedUser = null;\r\n\r\n  @ViewChild('firstInput')\r\n  private firstInput: ElementRef;\r\n\r\n  constructor(private recordingDetailsService: RecordingDetailsService,\r\n              private panelsService: PanelsService, private log: AppLoggerService) {\r\n    this.mySubscription = this.panelsService.currentPanel$\r\n      .subscribe(\r\n      panel => { this.onPanelUpdate(panel);}\r\n      );\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.validSave = true;\r\n    let panelObj = this.panelsService.getCurrentPanel();\r\n    if(panelObj['type'] === 'recording-details-edit' && panelObj['active'] === true) {\r\n      this.tempRecordingDetails = _.cloneDeep(this.recordingDetailsService.getRecordingDetails());\r\n    }\r\n    this.setFocusOnFirstInput();\r\n  }\r\n\r\n  filterUserList(event)\r\n  {\r\n    this.recordingDetailsService.filterUserList(event.query);\r\n  }\r\n\r\n  getUserList()\r\n  {\r\n    return this.recordingDetailsService.userList;\r\n  }\r\n\r\n  onSaveDetailsClick()\r\n  {\r\n    if(this.recordingDetailsService.isUserNameValidForSave(this.selectedUser)) {\r\n      this.tempRecordingDetails['userName'] = _.isObject(this.selectedUser) ? this.selectedUser['id'] : this.selectedUser;\r\n      this.recordingDetailsService.setRecordingDetails(this.tempRecordingDetails);\r\n      this.onCancelDetailsClick();\r\n    } else {\r\n      this.validSave = false;\r\n    }\r\n  }\r\n\r\n  onCancelDetailsClick()\r\n  {\r\n    this.panelsService.updateCurrentPanel({type: 'recording-details-edit', active: false});\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    this.mySubscription.unsubscribe();\r\n  }\r\n\r\n  isReadOnly()\r\n  {\r\n    return this.recordingDetailsService.isReadOnly();\r\n  }\r\n\r\n  isUserNameDisabled()\r\n  {\r\n    return this.recordingDetailsService.isUserNameDisabled();\r\n  }\r\n\r\n  onUserChange(text){\r\n    this.recordingDetailsService.onAutoCompleteUserChange(text);\r\n  }\r\n\r\n  private isUserNameValid()\r\n  {\r\n    return this.recordingDetailsService.isUserNameValid(this.selectedUser) && this.validSave;\r\n  }\r\n\r\n  private isUserListOffline()\r\n  {\r\n    return this.recordingDetailsService.isUserListOffline();\r\n  }\r\n\r\n  private onUserNameFieldClick()\r\n  {\r\n    this.validSave = true;\r\n  }\r\n\r\n  /* Accessibility */\r\n  private setFocusOnFirstInput() {\r\n    setTimeout(()=>{\r\n      this.firstInput.nativeElement.focus();\r\n    });\r\n  }\r\n\r\n  private onPanelUpdate(panel)\r\n  {\r\n    if (panel['type'] === 'recording-details-edit' && panel['active'] === true) {\r\n      this.tempRecordingDetails = _.cloneDeep(this.recordingDetailsService.getRecordingDetails());\r\n      if(!_.isEmpty(this.recordingDetailsService.getAuthenticatedUserName()))\r\n        this.tempRecordingDetails['userName'] = this.recordingDetailsService.getAuthenticatedUserName();\r\n      this.selectedUser = { id: this.tempRecordingDetails['userName'] };\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-details.component.ts","module.exports = \"<div class=\\\"recording-final-details-component\\\">\\r\\n\\r\\n  <div class=\\\"grid recording-final-details-container\\\">\\r\\n\\r\\n    <div class=\\\"recording-final-details-panel\\\">\\r\\n\\r\\n      <div class=\\\"col-12 recording-final-details-header\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-4 no-spaces\\\">\\r\\n            <div class=\\\"recording-final-details-image\\\">\\r\\n              <div class=\\\"final-details-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"edit-details-text\\\">\\r\\n              {{'RECORD_DETAILS.panel_title_complete' | translate}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-12 recording-details-body\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"recording-details-alert-container\\\" *ngIf=\\\"shouldDisplayAnAlert()\\\">\\r\\n              <div class=\\\"recording-details-alert-icon\\\"></div>\\r\\n              <div class=\\\"recording-details-alert-text\\\">\\r\\n                {{alertMsg}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.title' | translate}}</div>\\r\\n            <input type=\\\"text\\\" autofocus #firstInput\\r\\n                   [(ngModel)]=\\\"tempRecordingDetails.title\\\"\\r\\n                   [attr.aria-label]=\\\"'RECORD_DETAILS.title' | translate\\\"\\r\\n                   class=\\\"details-input-field\\\" [disabled]=\\\"isReadOnly()\\\">\\r\\n            <div class=\\\"details-input-field-underline\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.user_name' | translate}}</div>\\r\\n            <p-autoComplete inputStyleClass =\\\"details-input-field\\\" [(ngModel)]=\\\"selectedUser\\\" [suggestions]=\\\"getUserList()\\\"\\r\\n                            (completeMethod)=\\\"filterUserList($event)\\\" field=\\\"id\\\" [size]=\\\"40\\\" (ngModelChange)=\\\"onUserChange($event)\\\"\\r\\n                            [attr.aria-label]=\\\"'RECORD_DETAILS.user_name' | translate\\\"\\r\\n                            [minLength]=\\\"3\\\" [disabled]=\\\"isUserNameDisabled()\\\" (onFocus)=\\\"onUserNameFieldClick()\\\">\\r\\n              <template let-selectedUser pTemplate=\\\"item\\\">\\r\\n                {{selectedUser.fullName}} ({{selectedUser.id}})\\r\\n              </template>\\r\\n            </p-autoComplete>\\r\\n            <div class=\\\"non-valid-field\\\" [hidden]=\\\"isUserNameValid()\\\">{{'RECORD_DETAILS.invalid_user_name' | translate}}</div>\\r\\n            <div class=\\\"offline-field\\\" [hidden]=\\\"!isUserListOffline()\\\">{{'RECORD_DETAILS.offline_userList' | translate}}</div>\\r\\n            <div class=\\\"details-input-field-underline\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.description' | translate}}</div>\\r\\n            <textarea auto-resize [(ngModel)]=\\\"tempRecordingDetails.description\\\" [maxRows]=\\\"3\\\"\\r\\n                      [attr.aria-label]=\\\"'RECORD_DETAILS.description' | translate\\\"\\r\\n                      [rowHeight]=\\\"20\\\" rows=\\\"1\\\" type=\\\"text\\\" class=\\\"details-input-field\\\" [disabled]=\\\"isReadOnly()\\\"></textarea>\\r\\n            <div class=\\\"details-input-field-underline\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"detail-field-title\\\">{{'RECORD_DETAILS.tags' | translate}}</div>\\r\\n            <div class=\\\"details-input-tags\\\">\\r\\n              <p-chips\\r\\n                 tags-chips [(ngModel)]=\\\"tempRecordingDetails.tags\\\" [disabled]=\\\"isReadOnly()\\\"></p-chips>\\r\\n            </div>\\r\\n            <div class=\\\"details-input-field-underline\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"buttons-control\\\">\\r\\n        <button class=\\\"finalize-cancel-button app-link-button\\\" (click)=\\\"onCancelDetailsClick()\\\">{{'COMMON.cancel' | translate}}</button>\\r\\n        <button class=\\\"finalize-save-button app-oval-button\\\" (click)=\\\"onSaveDetailsClick()\\\">{{'COMMON.save' | translate}}</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.html\n// module chunks = 0","var escape = require(\"../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".recording-final-details-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.recording-final-details-container {\\n  height: 100%;\\n  padding: 3.1% 2.5%;\\n  margin: 0; }\\n\\n.recording-final-details-panel {\\n  width: 100%;\\n  position: relative;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.recording-final-details-header {\\n  height: 66px; }\\n\\n.recording-final-details-image {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.final-details-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/20/combined-shape.svg\")) + \") no-repeat top left; }\\n\\n.recording-details-alert-container {\\n  position: relative;\\n  width: 622px;\\n  height: 60px;\\n  background-color: rgba(255, 255, 255, 0.05);\\n  border: solid 1px rgba(255, 255, 255, 0.5); }\\n\\n.recording-details-alert-icon {\\n  position: absolute;\\n  top: 14px;\\n  left: 14px;\\n  height: 20px;\\n  width: 20px;\\n  background: url(\" + escape(require(\"../../../../assets/svg/18/warn.svg\")) + \") no-repeat top left; }\\n\\n.recording-details-alert-text {\\n  width: 564px;\\n  height: 52px;\\n  position: absolute;\\n  font-family: Lato;\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 1.55;\\n  color: #ffffff;\\n  top: 50%;\\n  left: calc(50% + 18px);\\n  transform: translate(-50%, -50%) !important; }\\n\\n.finalize-save-button, .finalize-cancel-button {\\n  margin-top: 14px;\\n  margin-right: 14px; }\\n\\n.buttons-control {\\n  position: absolute;\\n  top: 0;\\n  right: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.scss\n// module chunks = 0","import {Component, ViewEncapsulation, ViewChild, ElementRef, HostListener} from '@angular/core';\r\nimport {RecordingDetailsService} from \"../../../../shared/services/recording/recording-details.service\";\r\nimport * as _ from \"lodash\";\r\nimport {PanelsService} from \"../../../../shared/services/infra/panels.service\";\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\nimport {AppNotificationsService} from \"../../../../shared/services/infra/app-notifications.service\";\r\nimport {utils} from \"../../../../utils/utils\";\r\nimport {RecordingManagerService} from \"../../services/recording-manager.service\";\r\nimport {SchedulingService} from \"../../services/scheduling.service\";\r\nimport {TranslateService} from \"ng2-translate\";\r\n\r\n@Component({\r\n  selector: 'recording-finalize',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './recording-finalize.component.html',\r\n  styleUrls:  ['./recording-finalize.component.scss', './../../styles/recording-details.scss'],\r\n})\r\nexport class RecordingFinalizeComponent\r\n{\r\n\r\n  private mySubscription = null;\r\n  tempRecordingDetails = {};\r\n  private validSave = true;\r\n  isSaveClicked = false;\r\n  selectedUser = null;\r\n  alertMsg = '';\r\n\r\n  @ViewChild('firstInput')\r\n  private firstInput: ElementRef;\r\n\r\n  constructor(private recordingDetailsService: RecordingDetailsService, private recordingManagerService: RecordingManagerService,\r\n              private panelsService: PanelsService, private log: AppLoggerService, private notificationService: AppNotificationsService,\r\n              private schedulingService: SchedulingService, private translate: TranslateService)\r\n  {\r\n    this.mySubscription = this.panelsService.currentPanel$.subscribe(\r\n      panel => {\r\n        if(panel['type'] === 'recording-details-finalize' && panel['active'] === true) {\r\n          this.tempRecordingDetails = _.cloneDeep(this.recordingDetailsService.getRecordingDetails());\r\n          this.selectedUser = { id: this.tempRecordingDetails['userName'] };\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.validSave = true;\r\n    if(this.shouldDisplayAnAlert()) {\r\n      this.setRelevantAlert();\r\n    }\r\n    this.setFocusOnFirstInput();\r\n  }\r\n\r\n  /* Accessibility */\r\n  private setFocusOnFirstInput() {\r\n    this.firstInput.nativeElement.focus();\r\n  }\r\n\r\n  filterUserList(event)\r\n  {\r\n    this.recordingDetailsService.filterUserList(event.query);\r\n  }\r\n\r\n  getUserList()\r\n  {\r\n    return this.recordingDetailsService.userList;\r\n  }\r\n\r\n  onSaveDetailsClick()\r\n  {\r\n    this.isSaveClicked = true;\r\n    if(this.recordingDetailsService.isUserNameValidForSave(this.selectedUser)) {\r\n      this.log.info('Save current recording was clicked by the user.');\r\n      this.tempRecordingDetails['userName'] = _.isObject(this.selectedUser) ? this.selectedUser['id'] : this.selectedUser;\r\n      this.recordingDetailsService.setRecordingDetails(this.tempRecordingDetails);\r\n      return this.recordingManagerService.finalizeCurrentRecording(true)\r\n        .catch(() => {}) //there is nothing to do here, all is being taken case of in recording manager\r\n        .then(() => {\r\n          this.panelsService.updateCurrentPanel({type: 'recording-details-finalize', active: false});\r\n        });\r\n    } else {\r\n      this.validSave = false;\r\n    }\r\n  }\r\n\r\n  onCancelDetailsClick()\r\n  {\r\n    this.panelsService.updateCurrentPanel({type: 'recording-details-finalize', active: false});\r\n  }\r\n\r\n  private isUserNameValid()\r\n  {\r\n    return this.recordingDetailsService.isUserNameValid(this.selectedUser) && this.validSave;\r\n  }\r\n\r\n  private isUserListOffline()\r\n  {\r\n    return this.recordingDetailsService.isUserListOffline();\r\n  }\r\n\r\n  private setRelevantAlert()\r\n  {\r\n    let alertMsg = '';\r\n    let params = {};\r\n    //if it is a scheduled event alert\r\n    if(!_.isEmpty(this.schedulingService.getCurrentEvent())) {\r\n      let remainingTime = this.schedulingService.getCurrentEventRemainingInMin();\r\n      if(remainingTime)\r\n        alertMsg = remainingTime === 1 ?\r\n          'SCHEDULING.save_before_end_notification_minute' : 'SCHEDULING.save_before_end_notification_minutes';\r\n      params['value'] = remainingTime;\r\n    }\r\n\r\n    this.translate.get(alertMsg, params).subscribe((res: string) => {\r\n      this.alertMsg = res;\r\n    });\r\n  }\r\n\r\n  private onUserNameFieldClick()\r\n  {\r\n    this.validSave = true;\r\n  }\r\n\r\n  isReadOnly()\r\n  {\r\n    return this.recordingDetailsService.isReadOnly();\r\n  }\r\n\r\n  isUserNameDisabled()\r\n  {\r\n    return this.recordingDetailsService.isUserNameDisabled();\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    this.mySubscription.unsubscribe();\r\n  }\r\n\r\n  shouldDisplayAnAlert()\r\n  {\r\n    return !_.isEmpty(this.schedulingService.getCurrentEvent());\r\n  }\r\n\r\n  onUserChange(text){\r\n    this.recordingDetailsService.onAutoCompleteUserChange(text);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/default-app-view/recording-finalize.component.ts","module.exports = \"<div class=\\\"add-visual-input\\\">\\r\\n  <button class=\\\"add-visual-input-button\\\" (click)=\\\"onAddInputClick()\\\" [disabled]=\\\"isAddButtonDisable()\\\"\\r\\n          [pTooltip]=\\\" 'CAPTURE_DEVICE.add_input' | translate \\\" tooltipPosition=\\\"bottom\\\" tooltip-addon>\\r\\n    <button class=\\\"add-visual-input-icon\\\" [disabled]=\\\"isAddButtonDisable()\\\"></button>\\r\\n  </button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.html\n// module chunks = 0","var escape = require(\"../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".add-visual-input {\\n  height: 100%;\\n  width: 100%;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.add-visual-input-button {\\n  cursor: pointer;\\n  opacity: 0.8;\\n  height: 38px;\\n  width: 38px;\\n  position: absolute;\\n  top: calc(50% - 19px);\\n  left: calc(50% - 19px);\\n  border: none;\\n  border-radius: 50%;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);\\n  background-color: rgba(153, 153, 153, 0.6); }\\n\\n.add-visual-input-button:disabled {\\n  opacity: 0.5;\\n  cursor: default;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);\\n  background-color: rgba(153, 153, 153, 0.3); }\\n\\n.add-visual-input-button:hover:enabled,\\n.add-visual-input-button:active:enabled,\\n.add-visual-input-button:focus:enabled {\\n  opacity: 1;\\n  background-color: rgba(153, 153, 153, 0.8); }\\n\\n.add-visual-input-icon {\\n  cursor: pointer;\\n  outline: none;\\n  border: none;\\n  position: absolute;\\n  opacity: 1;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  width: 20px;\\n  height: 20px;\\n  background: url(\" + escape(require(\"../../../../../assets/svg/20/plus_large.svg\")) + \") no-repeat center; }\\n\\n.add-visual-input-icon:disabled {\\n  cursor: default;\\n  opacity: 0.5; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.scss\n// module chunks = 0","import {Component, Input, Output, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'add-visual-input',\r\n  templateUrl: './add-visual-input.component.html',\r\n  styleUrls:  ['./add-visual-input.component.scss'],\r\n  providers: []\r\n})\r\nexport class AddVisualInputComponent {\r\n\r\n  @Input() shouldDisable: boolean = true;\r\n  @Output() inputAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  private disableButton = false;\r\n\r\n  onAddInputClick()\r\n  {\r\n    if(!this.disableButton) { //prevent double click\r\n      this.disableButton = true;\r\n      this.inputAdded.emit();\r\n      setTimeout(() => {\r\n        this.disableButton = false;\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  isAddButtonDisable()\r\n  {\r\n    return this.shouldDisable || this.disableButton;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/add-visual-input/add-visual-input.component.ts","module.exports = \"<div class=\\\"device-settings-component\\\">\\r\\n\\r\\n  <div class=\\\"grid device-settings-container\\\">\\r\\n\\r\\n    <div class=\\\"device-settings-panel\\\">\\r\\n\\r\\n      <div class=\\\"col-12 device-settings-header\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-4 no-spaces\\\">\\r\\n            <div class=\\\"device-settings-icon-container\\\">\\r\\n              <div class=\\\"device-settings-icon video-settings-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"device-settings-text\\\">\\r\\n              {{'CAPTURE_DEVICE.audio_panel_title' | translate}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-12 device-settings-body\\\">\\r\\n\\r\\n        <div class=\\\"grid\\\">\\r\\n\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\">\\r\\n              <label  for=\\\"audioDevicesDropDown\\\">{{'CAPTURE_DEVICE.input_source' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"audioDevicesDropDown\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"audioDevices\\\" [(ngModel)]=\\\"selectedAudioDevice\\\"\\r\\n                        (onCustomChange)=\\\"onAudioDeviceChange()\\\" [disabled]=\\\"isProcessing()\\\" #firstInput></p-dropdown>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\">\\r\\n              <label for=\\\"audioInputDropDown\\\">{{'CAPTURE_DEVICE.input_type' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"audioInputDropDown\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"audioInputTypes\\\" [(ngModel)]=\\\"selectedAudioInputType\\\"\\r\\n                        (onCustomChange)=\\\"onAudioInputTypeChange()\\\" [disabled]=\\\"isProcessing()\\\"></p-dropdown>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\">\\r\\n              <label for=\\\"captureSystemAudio\\\">{{'CAPTURE_DEVICE.capture_system_audio' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureSystemAudio\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"captureSystemAudioStates\\\" [(ngModel)]=\\\"isCaptureSystemAudioOn\\\"\\r\\n                        (onCustomChange)=\\\"onCaptureSystemAudioChange()\\\" [disabled]=\\\"isProcessing()\\\"></p-dropdown>\\r\\n          </div>\\r\\n\\r\\n            <div class=\\\"col device-settings-col\\\" style=\\\"display: none\\\">\\r\\n                <div class=\\\"settings-field-title\\\">\\r\\n                    <label for=\\\"selectedAudioDeviceDelay\\\">{{'CAPTURE_DEVICE.capture_audio_delay' | translate}}</label>\\r\\n                </div>\\r\\n              <p-spinner spinner-number inputId=\\\"selectedAudioDeviceDelay\\\"\\r\\n                           [(ngModel)]=\\\"selectedAudioDeviceDelay\\\"\\r\\n                           max=\\\"{{audioDeviceDelayMaxValue}}\\\"\\r\\n                           min=\\\"{{audioDeviceDelayMinValue}}\\\"\\r\\n                          class=\\\"settings-field-dropdown\\\"\\r\\n                         [disabled]=\\\"isProcessing()\\\"></p-spinner>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"buttons-control\\\">\\r\\n        <button class=\\\"device-settings-back-button app-oval-button\\\" (click)=\\\"onBackClick()\\\">{{'COMMON.back' | translate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.html\n// module chunks = 0","var escape = require(\"../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".video-settings-icon {\\n  background: url(\" + escape(require(\"../../../../../assets/svg/20/audio.svg\")) + \") no-repeat top left; }\\n\\n.buttons-control {\\n  position: absolute;\\n  top: 0;\\n  right: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.scss\n// module chunks = 0","import {Component, ViewChild, ElementRef} from '@angular/core';\r\nimport {SelectItem} from \"primeng/components/common/api\";\r\nimport {AudioDeviceService} from \"../../../../../shared/services/capture-device/audio-device.service\";\r\nimport {PanelsService} from \"../../../../../shared/services/infra/panels.service\";\r\nimport * as _ from \"lodash\";\r\nimport {AudioDeviceSettingsService} from \"../../../../../shared/services/capture-device/audio-device-settings.service\";\r\nimport {AppLoggerService} from \"../../../../../shared/services/infra/app-logger.service\";\r\nimport {utils} from  \"../../../../../utils/utils\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {Dropdown} from \"primeng/components/dropdown/dropdown\";\r\nimport {AccessibilityService} from \"../../../../../shared/services/infra/accessability.service\";\r\nimport {AppStateService} from \"../../../../../shared/services/infra/app-state.service\";\r\n\r\n@Component({\r\n  selector: 'audio-settings',\r\n  templateUrl: './audio-settings.component.html',\r\n  styleUrls:  ['./audio-settings.component.scss', './../../../styles/device-settings.scss'],\r\n})\r\nexport class AudioSettingsComponent {\r\n\r\n  private configurationLoading = false;\r\n\r\n  audioDevices: SelectItem[] = [];\r\n  audioInputTypes: SelectItem[] = [];\r\n  selectedAudioDevice: string;\r\n  selectedAudioInputType: string;\r\n  captureSystemAudioStates: SelectItem[] = [];\r\n  isCaptureSystemAudioOn: boolean;\r\n  selectedAudioDeviceDelay: number;\r\n  audioDeviceDelayMaxValue: number;\r\n  audioDeviceDelayMinValue: number;\r\n\r\n  @ViewChild('firstInput')\r\n  private firstInput: Dropdown;\r\n\r\n  constructor(private audioDeviceService: AudioDeviceService,\r\n              private audioDeviceSettingsService: AudioDeviceSettingsService,\r\n              private panelsService: PanelsService,\r\n              private log: AppLoggerService,\r\n              private translate: TranslateService,\r\n              private myElement: ElementRef,\r\n              private accessibilityService: AccessibilityService,\r\n              private appState: AppStateService)\r\n  {\r\n    this.panelsService.currentPanel$.subscribe(\r\n      panel => {\r\n        if(panel['type'] === 'audio-device-settings' && panel['active'] === true) {\r\n          this.loadAudioSettings()\r\n            .then(()=>{\r\n              this.setFocusOnFirstInput();\r\n            })\r\n        }\r\n        else if (panel['type'] === 'audio-device-settings') {\r\n          this.accessibilityService.clearFocusAndScrollUp(this.myElement, '.device-settings-body');\r\n        }\r\n      });\r\n  }\r\n\r\n  loadAudioSettings()\r\n  {\r\n    return this.audioDeviceSettingsService.loadAudioDeviceList()\r\n      .then((devices) => {\r\n        this.log.info('loading audio device list');\r\n        let selectedAudio = this.audioDeviceSettingsService.selectedAudioDevice;\r\n        this.setAudioDeviceList(devices, selectedAudio);\r\n        this.setAudioInputTypeList();\r\n        this.setCaptureSystemAudioOptions();\r\n        this.loadAudioDelay();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('ERROR loading audio settings ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /* Accessibility */\r\n  private setFocusOnFirstInput() {\r\n    this.firstInput.applyFocus();\r\n  }\r\n\r\n  private setAudioDeviceList(devices, selectedAudioDevice)\r\n  {\r\n    this.audioDevices.length = 0;\r\n    for (let i in devices) {\r\n      this.audioDevices.push({ label: devices[i].friendly_name, value: devices[i].device_id});\r\n    }\r\n    this.selectedAudioDevice = selectedAudioDevice;\r\n  }\r\n\r\n  private setAudioInputTypeList()\r\n  {\r\n    this.audioInputTypes.length = 0;\r\n    _.forEach(this.getInputTypes(), (inputType) => {\r\n      this.audioInputTypes.push({label: this.getAudioInputTypeLabel(inputType), value: inputType['description']});\r\n    });\r\n    this.selectedAudioInputType = this.audioDeviceSettingsService.selectedInputType;\r\n  }\r\n\r\n  private setCaptureSystemAudioOptions(){\r\n\r\n    this.translate.get(['COMMON.On', 'COMMON.Off'])\r\n      .subscribe((res) => {\r\n      this.captureSystemAudioStates = [{label: res['COMMON.On'], value: true}, {label: res['COMMON.Off'], value: false}];\r\n    });\r\n    this.isCaptureSystemAudioOn = this.audioDeviceSettingsService.isCaptureSystemAudioOn;\r\n  }\r\n\r\n  private loadAudioDelay() {\r\n      this.selectedAudioDeviceDelay = this.audioDeviceSettingsService.selectedAudioDeviceDelay;\r\n      this.audioDeviceDelayMaxValue = this.audioDeviceSettingsService.sinkStartTimeout;\r\n      this.audioDeviceDelayMinValue = -this.audioDeviceDelayMaxValue;\r\n      this.log.info(\"loadAudioDelay \" + this.selectedAudioDeviceDelay\r\n          + \"(\" + this.audioDeviceDelayMinValue + \" \" + this.audioDeviceDelayMaxValue + \")\");\r\n  }\r\n\r\n  private onAudioDeviceChange()\r\n  {\r\n      let device = _.find(this.audioDevices, (d) => d.value === this.selectedAudioDevice);\r\n      this.audioDeviceSettingsService.onAudioDeviceChange(device)\r\n        .then(() => {\r\n          this.loadAudioDelay();\r\n          this.setAudioInputTypeList();\r\n        })\r\n        .catch((err) => {}) //do nothing\r\n  }\r\n\r\n  onBackClick()\r\n  {\r\n    this.onAudioDeviceDelayChange();\r\n    this.panelsService.updateCurrentPanel({type : 'audio-device-settings', active : false});\r\n  }\r\n\r\n  isProcessing()\r\n  {\r\n    return this.audioDeviceService.isProcessing() || this.configurationLoading;\r\n  }\r\n\r\n  private getAudioInputTypeLabel(inputType)\r\n  {\r\n    return inputType['samplesPerSec'] + ' Hz ' + ', ' + inputType['bitsPerSample'] + ' bit, ' + inputType['channels'];\r\n  }\r\n\r\n  private onAudioInputTypeChange()\r\n  {\r\n    return this.audioDeviceSettingsService.onAudioInputTypeChange(this.selectedAudioInputType)\r\n      .catch((err) => {}); //do nothing\r\n  }\r\n\r\n  private onCaptureSystemAudioChange()\r\n  {\r\n    this.configurationLoading = true;\r\n    this.audioDeviceSettingsService.setCaptureSystemAudioState(this.isCaptureSystemAudioOn)\r\n      .catch((err) => {}) //do nothing\r\n      .then(() => {\r\n        return this.appState.areSessionsReadyForRecording('audio-settings')\r\n      })\r\n      .then(() => {\r\n        this.configurationLoading = false;\r\n      });\r\n  }\r\n\r\n  private onAudioDeviceDelayChange() {\r\n    this.audioDeviceSettingsService.setSelectedAudioDeviceDelay(this.selectedAudioDeviceDelay)\r\n      .catch((err) => {}); //do nothing\r\n  }\r\n\r\n  getInputTypes() {\r\n    return this.audioDeviceSettingsService.audioInputTypes;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input-settings/audio-settings.component.ts","module.exports = \"<div class=\\\"audio-input\\\">\\r\\n\\r\\n  <div class=\\\"device-container\\\">\\r\\n    <div class=\\\"audio-settings-bar\\\">\\r\\n      <div class=\\\"grid no-spaces\\\">\\r\\n        <button class=\\\"device-preview-button cc-button audio-preview-button\\\"\\r\\n                [attr.aria-label]=\\\"devicePreviewAriaText() | translate\\\"\\r\\n                [ngClass]=\\\"devicePreviewStyleClass()\\\"\\r\\n                (click)=\\\"onAudioPreviewClick()\\\"\\r\\n                [disabled]=\\\"disableAudioPreviewButton()\\\">\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\" device-settings-button cc-button audio-settings-button focus-once\\\"\\r\\n                [attr.aria-label]=\\\"'CAPTURE_DEVICE.audio_panel_title' | translate\\\"\\r\\n                [ngClass]=\\\"{'device-icon-button-active' : isAudioSettingsPanelActive()}\\\"\\r\\n                (click)=\\\"onAudioSettingsClick()\\\"\\r\\n                [hidden]=\\\"isAppRecording()\\\"\\r\\n                [disabled]=\\\"disabledAudioSettingsButton()\\\">\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"audio-device\\\">\\r\\n      <div class=\\\"audio-device-volume-bar volume-bar-left\\\">\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 93.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 88 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 82.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 77 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 71.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 66 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 60.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 55 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 49.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 44 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 38.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 33 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 27.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 22 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 16.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 11 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 5.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel0 > 0 }\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"audio-device-volume-bar volume-bar-right\\\">\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 93.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 88 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 82.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 77 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 71.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 66 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 60.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 55 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 49.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 44 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 38.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 33 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 27.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 22 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 16.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 11 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 5.5 }\\\"></div>\\r\\n        <div class=\\\"audio-bar-level\\\" [ngClass]=\\\"{'audio-bar-level-colored' : audioLevel1 > 0 }\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.html\n// module chunks = 0","var escape = require(\"../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".audio-input {\\n  height: 100%;\\n  width: 100%;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);\\n  background-color: rgba(153, 153, 153, 0.1); }\\n\\n.audio-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.audio-settings-bar {\\n  position: relative;\\n  height: 13.6%;\\n  width: 100%; }\\n\\n.audio-device {\\n  position: relative;\\n  box-sizing: border-box;\\n  height: 86.4%;\\n  max-width: 78px;\\n  margin: auto; }\\n\\n.audio-device-volume-bar {\\n  position: absolute;\\n  bottom: 12.1%;\\n  height: 75%;\\n  width: 16px; }\\n\\n.volume-bar-left {\\n  left: 20.5%; }\\n\\n.volume-bar-right {\\n  right: 20.5%; }\\n\\n.audio-bar-level {\\n  width: 16px;\\n  height: 4px;\\n  border-radius: 100px;\\n  background-color: #cccccc;\\n  margin-bottom: 0.85vh; }\\n\\n.audio-bar-level-colored {\\n  background-color: #04af8e; }\\n\\n.audio-preview-button {\\n  margin-left: 7.5px; }\\n\\n.audio-settings-button {\\n  position: absolute !important;\\n  right: 8px !important;\\n  margin: 0 !important;\\n  padding: 0 !important;\\n  top: calc(50% - 10px) !important; }\\n\\n.audio-disabled-button {\\n  background: url(\" + escape(require(\"../../../../../assets/svg/20/audio-mute.svg\")) + \") no-repeat top left; }\\n\\n.audio-enabled-button {\\n  background: url(\" + escape(require(\"../../../../../assets/svg/20/audio.svg\")) + \") no-repeat top left; }\\n\\n.audio-device-preview {\\n  position: relative;\\n  box-sizing: border-box;\\n  opacity: 0.98;\\n  height: 86.4%;\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.scss\n// module chunks = 0","import {Component, NgZone} from '@angular/core';\r\nimport {AppStateService} from \"../../../../../shared/services/infra/app-state.service\";\r\nimport {AppLoggerService} from \"../../../../../shared/services/infra/app-logger.service\";\r\nimport {DevicePreviewService} from \"../../../../../shared/services/capture-device/device-preview.service\";\r\nimport {AudioDeviceService} from \"../../../../../shared/services/capture-device/audio-device.service\";\r\nimport {AppConfigService} from \"../../../../../shared/services/infra/app-config.service\";\r\nimport {PanelsService} from \"../../../../../shared/services/infra/panels.service\";\r\nimport {utils} from \"../../../../../utils/utils\";\r\n\r\n@Component({\r\n  selector: 'audio-input',\r\n  templateUrl: './audio-input.component.html',\r\n  styleUrls:  ['./audio-input.component.scss', './../../../styles/device-container.scss'],\r\n  providers: []\r\n})\r\nexport class AudioInputComponent {\r\n\r\n  readonly SETTINGS_PANEL = 'audio-device-settings';\r\n\r\n  private deviceNotificationSub = null;\r\n  private audioLevelSub = null;\r\n\r\n  audioLevel0 = 0;\r\n  audioLevel1 = 0;\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n    private log: AppLoggerService,\r\n    private appState: AppStateService,\r\n    private appConfig: AppConfigService,\r\n    private panelsService: PanelsService,\r\n    private audioDeviceService: AudioDeviceService,\r\n    private devicePreviewService : DevicePreviewService)\r\n  {\r\n  }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.addListeners();\r\n  }\r\n\r\n  ngOnDestroy(): void\r\n  {\r\n    this.removeListeners();\r\n  }\r\n\r\n  isAppRecording()\r\n  {\r\n    return this.audioDeviceService.isAppRecording();\r\n  }\r\n\r\n  onAudioPreviewClick()\r\n  {\r\n    this.getAudioPreviewAction(!this.isAudioEnabled())\r\n      .catch((err) => {\r\n        this.log.error('Audio-Input: failed to change audio device preview state to ' +\r\n          !this.isAudioEnabled() + ' :' + utils.stringifyMsg(err))\r\n      });\r\n  }\r\n\r\n  onAudioSettingsClick()\r\n  {\r\n    this.panelsService.updateCurrentPanel({\r\n      type : this.SETTINGS_PANEL,\r\n      active : !this.panelsService.isPanelActive(this.SETTINGS_PANEL)});\r\n  }\r\n\r\n  isAudioSettingsPanelActive()\r\n  {\r\n    return this.panelsService.isPanelActive(this.SETTINGS_PANEL);\r\n  }\r\n\r\n  disabledAudioSettingsButton() : boolean\r\n  {\r\n    return  this.audioDeviceService.isAudioSettingsDisabled() ||\r\n      (this.panelsService.isCurrentPanelActive() && //there is an active panel\r\n      !this.panelsService.isPanelActive(this.SETTINGS_PANEL)); //the active panel is not audio settings\r\n  }\r\n\r\n  disableAudioPreviewButton()\r\n  {\r\n    return this.audioDeviceService.shouldDisableAudioButton() || this.panelsService.isCurrentPanelActive();\r\n  }\r\n\r\n  isAudioEnabled()\r\n  {\r\n    return this.audioDeviceService.isAudioEnabled(\r\n      this.appConfig.getConfigData('config.captureApp.audioOnlyRecording'));\r\n  }\r\n\r\n  devicePreviewStyleClass()\r\n  {\r\n    return this.isAudioEnabled() ?\r\n      'audio-enabled-button device-preview-in-progress' :\r\n      'audio-disabled-button device-preview-stopped';\r\n  }\r\n\r\n  devicePreviewAriaText()\r\n  {\r\n    return this.isAudioEnabled ?\r\n      'CAPTURE_DEVICE.disableAudio' :\r\n      'CAPTURE_DEVICE.enableAudio';\r\n  }\r\n\r\n  private getAudioPreviewAction(enable)\r\n  {\r\n    return enable ?\r\n      this.audioDeviceService.enableAudioDevice() :\r\n      this.audioDeviceService.disableAudioDevice();\r\n  }\r\n\r\n  private addListeners()\r\n  {\r\n    this.audioLevelSub =\r\n      this.devicePreviewService.audioLeverSubject$.subscribe(\r\n      audioLevel => {\r\n        this.zone.run(() => this.audioLevel0 = audioLevel['Channel0']);\r\n        this.zone.run(() => this.audioLevel1 = audioLevel['Channel1']);\r\n      }\r\n    );\r\n  }\r\n\r\n  private removeListeners()\r\n  {\r\n    if(this.deviceNotificationSub) this.deviceNotificationSub.unsubscribe();\r\n    if(this.audioLevelSub) this.audioLevelSub.unsubscribe();\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/audio-input/audio-input.component.ts","module.exports = \"<div class=\\\"inputs-management\\\">\\r\\n\\r\\n  <div class=\\\"add-visual-input-wrapper\\\">\\r\\n    <add-visual-input (inputAdded)=\\\"onInputAddedEvent()\\\" [shouldDisable]=\\\"!allowAddInput()\\\"></add-visual-input>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"grid co-12 inputs-grid\\\">\\r\\n    <div class=\\\"visual-inputs-container-wrapper inputs-grid\\\">\\r\\n      <visual-inputs-container class=\\\"grid col-12 inputs-grid\\\" [activeInputs]=\\\"getActiveInputs()\\\"></visual-inputs-container>\\r\\n    </div>\\r\\n    <div class=\\\"inputs-divider\\\"></div>\\r\\n    <div class=\\\"audio-input-wrapper inputs-grid\\\">\\r\\n      <audio-input></audio-input>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/inputs-management.component.html\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".inputs-management {\\n  height: 100%;\\n  width: 100%; }\\n\\n.add-visual-input-wrapper {\\n  position: absolute;\\n  left: -64px;\\n  bottom: 0;\\n  width: 64px;\\n  height: 100%; }\\n\\n.inputs-grid {\\n  height: 100%;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0; }\\n\\n.inputs-divider {\\n  height: 100%;\\n  width: 1px;\\n  box-shadow: 2px 0 0 0 rgba(255, 255, 255, 0.06); }\\n\\n.visual-inputs-container-wrapper {\\n  width: calc(100% - 84px);\\n  height: 100%; }\\n\\n.audio-input-wrapper {\\n  position: absolute;\\n  width: 78px;\\n  height: 100%;\\n  padding: 0;\\n  margin: 0;\\n  right: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/inputs-management.component.scss\n// module chunks = 0","import {Component} from '@angular/core';\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\nimport {InputsManagementService} from \"./inputs-management.service\";\r\nimport {utils} from \"../../../../utils/utils\";\r\nimport {AppConfigService} from \"../../../../shared/services/infra/app-config.service\";\r\nimport {PanelsService} from \"../../../../shared/services/infra/panels.service\";\r\n\r\n@Component({\r\n  selector: 'inputs-management',\r\n  templateUrl: './inputs-management.component.html',\r\n  styleUrls:  ['./inputs-management.component.scss'],\r\n  providers: []\r\n})\r\nexport class InputsManagementsComponent {\r\n\r\n  constructor(\r\n    private log: AppLoggerService,\r\n    private appConfig: AppConfigService,\r\n    private panelsService: PanelsService,\r\n    private inputsManagementService: InputsManagementService)\r\n  {\r\n\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    //for first component load to avoid racing\r\n    this.inputsManagementService.setActiveInputs();\r\n    this.inputsManagementService.subscribeToSessionsInitEvent();\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    this.inputsManagementService.unSubscribeFromSessionsInitEvent();\r\n  }\r\n\r\n  onInputAddedEvent()\r\n  {\r\n    this.inputsManagementService.addNewSession()\r\n      .catch((err) => {\r\n        this.log.error('InputsManagementsComponent Failed to add new session: ' + utils.stringifyMsg(err));\r\n        //todo [SA] show the user notification\r\n      })\r\n  }\r\n\r\n  allowAddInput()\r\n  {\r\n    let maxNumOfInputs = this.appConfig.getConfigData('config.captureApp.maxNumberOfInputs');\r\n    return this.inputsManagementService.isAppStable() &&\r\n      this.inputsManagementService.getActiveVisualInputsCount() < maxNumOfInputs &&\r\n      !this.panelsService.isCurrentPanelActive();\r\n  }\r\n\r\n  getActiveInputs()\r\n  {\r\n    return this.inputsManagementService.activeVisualInputs;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.component.ts","import {Injectable} from \"@angular/core\";\r\nimport * as _ from \"lodash\";\r\nimport {AppLoggerService} from \"../../../../shared/services/infra/app-logger.service\";\r\nimport {AppStateService} from \"../../../../shared/services/infra/app-state.service\";\r\nimport {AppNotificationsService} from \"../../../../shared/services/infra/app-notifications.service\";\r\nimport {AppPersistentDataService} from \"../../../../shared/services/infra/app-persistent-data.service\";\r\nimport {DevicePreviewService} from \"../../../../shared/services/capture-device/device-preview.service\";\r\nimport {VideoDeviceSettingsService} from \"../../../../shared/services/capture-device/video-device-settings.service\";\r\nimport {DeviceRecoveryService} from \"../../../../shared/services/capture-device/device-recovery.service\";\r\nimport {utils} from \"../../../../utils/utils\";\r\nimport {Subject} from \"rxjs\";\r\nimport {SessionStateService} from \"../../../../shared/services/infra/session-state.service\";\r\n\r\n@Injectable()\r\nexport class InputsManagementService {\r\n\r\n  readonly PRIMARY_SESSION_NAME = 'session0';\r\n\r\n  private sessionsInitSub = null;\r\n\r\n  activeVisualInputs: any = [];\r\n\r\n  private refreshInputs = new Subject<void>();\r\n  refreshInputs$ = this.refreshInputs.asObservable();\r\n\r\n  constructor(\r\n    private log: AppLoggerService,\r\n    private appState: AppStateService,\r\n    private recoveryService: DeviceRecoveryService,\r\n    private sessionStateService: SessionStateService,\r\n    private appPersistency : AppPersistentDataService,\r\n    private devicePreviewService: DevicePreviewService,\r\n    private videoDeviceSettingsService: VideoDeviceSettingsService,\r\n    private notificationService: AppNotificationsService)\r\n  {\r\n  }\r\n\r\n  fireRefreshInputsEvent()\r\n  {\r\n    this.appState.areSessionsReadyForRecording('fireRefreshInputsEvent')\r\n      .then(() => {\r\n        this.refreshInputs.next();\r\n      });\r\n  }\r\n\r\n  subscribeToSessionsInitEvent()\r\n  {\r\n    this.sessionsInitSub =\r\n      this.sessionStateService.sessionsInit$.subscribe(\r\n        () => {\r\n          this.log.info('InputsManagementService: re-setting active inputs after sessions init.');\r\n          this.setActiveInputs();\r\n        });\r\n  }\r\n\r\n  unSubscribeFromSessionsInitEvent()\r\n  {\r\n    if(this.sessionsInitSub)\r\n      this.sessionsInitSub.unsubscribe();\r\n  }\r\n\r\n  setActiveInputs()\r\n  {\r\n    this.getActiveVisualSessions()\r\n      .then((sessions) => {\r\n        this.activeVisualInputs = sessions;\r\n      });\r\n  }\r\n\r\n  getActiveVisualSessions(): any\r\n  {\r\n    this.log.info('InputsManagementService getActiveVisualSessions');\r\n    return this.appState.getVisualSessionsNamesAndDefaultTypesForInit();\r\n  }\r\n\r\n  isAppStable()\r\n  {\r\n    return this.appState.isAppStable();\r\n  }\r\n\r\n  addNewSession()\r\n  {\r\n    let newSessionName = '';\r\n    //add session with default type to persistent data\r\n    return this.appState.getVisualSessionsFromPersistentData()\r\n      .then((sessions) => {\r\n        let lastSessionNumber = parseInt(_.keys(sessions).sort().pop().split('session')[1]);\r\n        newSessionName = 'session' + (++lastSessionNumber);\r\n        return this.appPersistency.set(newSessionName, {'preview': 'enabled'});\r\n      })\r\n      .then(() => {\r\n        this.activeVisualInputs[newSessionName] = this.appState.DEFAULT_CAPTURE_TYPE; //for fast visual update\r\n        return this.shutDownAndReInitSessions();\r\n      });\r\n  }\r\n\r\n  removeSession(sessionName)\r\n  {\r\n    if (this.appState.isAppRecording()) {\r\n      return this.notificationService.sendNotification(\"NOTIFICATIONS.error_removeInputDuringRecording\", \"error\");\r\n    }\r\n    return this.appPersistency.get('')\r\n      .then((persistentData) => {\r\n        delete persistentData[sessionName];\r\n        persistentData = this.rearrangeSessions(\r\n            parseInt(sessionName.split('session')[1]), //get removed session index\r\n            persistentData); //persistent data without removed session\r\n        return this.appPersistency.set('all', persistentData);\r\n      })\r\n      .then(() => {\r\n        delete this.activeVisualInputs[sessionName]; //for fast visual update\r\n        return this.shutDownAndReInitSessions();\r\n      })\r\n      .then(() => {\r\n        this.fireRefreshInputsEvent();\r\n      });\r\n  }\r\n\r\n  switchToPrimarySession(sessionName)\r\n  {\r\n    return this.appPersistency.get('')\r\n      .then((persistentData) => {\r\n        //save current primary obj.\r\n        let currentPrimarySession = persistentData[this.PRIMARY_SESSION_NAME];\r\n        //move provided session to be the new primary session\r\n        persistentData[this.PRIMARY_SESSION_NAME] = persistentData[sessionName];\r\n        //move prev primary session to privided session old location\r\n        persistentData[sessionName] = currentPrimarySession;\r\n        return this.appPersistency.set('all', persistentData);\r\n      })\r\n      .then(() => {\r\n        return this.shutDownAndReInitSessions();\r\n      })\r\n      .then(() => {\r\n        this.fireRefreshInputsEvent();\r\n      });\r\n  }\r\n\r\n  getActiveVisualInputsCount()\r\n  {\r\n    return _.keys(this.activeVisualInputs).length;\r\n  }\r\n\r\n  getActiveSessionDisplayName(sessionName)\r\n  {\r\n    if(sessionName === this.PRIMARY_SESSION_NAME) {\r\n      return 'Primary Input';\r\n    } else {\r\n      let sessionIndex = parseInt(sessionName.split('session')[1]);\r\n      return 'Input ' + ++sessionIndex;\r\n    }\r\n  }\r\n\r\n  hideAllActiveSessionsPreview()\r\n  {\r\n    return this.devicePreviewService.hideAll();\r\n  }\r\n\r\n  private shutDownAndReInitSessions()\r\n  {\r\n    return this.appState.areSessionsReadyForRecording('InputsManagementService')\r\n      .catch(() => { }) //shut down sessions any way...\r\n      .then(() => {\r\n        return this.devicePreviewService.unregisterFromAudioNotification();\r\n      })\r\n      .then(() => {\r\n        this.recoveryService.resetRecoverySessions();\r\n        return this.appState.shutDownSessions()\r\n          .then(() => {\r\n            return this.videoDeviceSettingsService.clearSessions();\r\n          })\r\n          .then(() => {\r\n            this.appState.sendInitNotification();\r\n          })\r\n          .catch((err) => {\r\n            this.log.error('InputsManagementService: failed to shutdown active sessions. ' + utils.stringifyMsg(err));\r\n            return Promise.reject(err);\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * rearranges all sessions indexes in app persistent data object after removal of a session\r\n   * @param removedSessionIndex\r\n   * @param persistentDataObject\r\n   * @returns {any}\r\n   */\r\n  private rearrangeSessions(removedSessionIndex: number, persistentDataObject: any)\r\n  {\r\n    //next session object in persistent data (if exists)\r\n    let currentSessionKey = 'session' + removedSessionIndex;\r\n    let nextSessionKey = 'session' + ++removedSessionIndex;\r\n    while(!_.isEmpty(persistentDataObject[nextSessionKey])) {\r\n      let migratedObj = persistentDataObject[nextSessionKey];\r\n      persistentDataObject[currentSessionKey] = migratedObj;\r\n      delete persistentDataObject[nextSessionKey];\r\n      currentSessionKey = nextSessionKey;\r\n      nextSessionKey = 'session' + ++removedSessionIndex;\r\n    }\r\n    return persistentDataObject;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/inputs-management.service.ts","module.exports = \"<div class=\\\"visual-input-controllers\\\">\\r\\n\\r\\n  <div class=\\\"grid-spaceBetween device-settings-bar\\\">\\r\\n\\r\\n    <div class=\\\"grid col-8 no-spaces device-preview-section\\\">\\r\\n      <div class=\\\"device-preview-text\\\">\\r\\n        {{ this.getInputName() | translate }}\\r\\n      </div>\\r\\n      <button class=\\\"device-preview-button cc-button\\\"\\r\\n              [attr.aria-label]=\\\"getInputAriaLabel() | translate\\\"\\r\\n              [ngClass]=\\\"getPreviewButtonClass()\\\"\\r\\n              (click)=\\\"onPreviewStateChange()\\\"\\r\\n              [disabled]=\\\"disablePreviewButton()\\\">\\r\\n\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"isLiveConfigured()\\\" class=\\\"On-Air\\\" [ngClass]=\\\"{live: isLive()}\\\">ON AIR</div>\\r\\n\\r\\n    <div *ngIf=\\\"!isAppRecording()\\\" class=\\\"grid-noGutter no-spaces device-settings-section\\\">\\r\\n      <button class=\\\"device-settings-button cc-button focus-once\\\"\\r\\n              (click)=\\\"onSettingsButtonClick()\\\"\\r\\n              [attr.aria-label]=\\\"getDevicePanelTitleText() | translate\\\"\\r\\n              [ngClass]=\\\"{'device-icon-button-active' : isSettingsPanelVisible()}\\\"\\r\\n              [disabled]=\\\"disableSettingsButton()\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.html\n// module chunks = 0","var escape = require(\"../../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".video-preview-stopped {\\n  background: url(\" + escape(require(\"../../../../../../assets/svg/20/camera-disable.svg\")) + \") no-repeat top left; }\\n\\n.video-preview-in-progress {\\n  background: url(\" + escape(require(\"../../../../../../assets/svg/20/camera.svg\")) + \") no-repeat top left; }\\n\\n.visual-input-controllers {\\n  height: 100%; }\\n\\n.On-Air {\\n  height: 14px;\\n  width: 52px;\\n  padding: 3px 4px 3px 4px;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n  border-radius: 4px;\\n  background-color: #808080;\\n  color: #222222;\\n  opacity: 0.9;\\n  font-family: Lato;\\n  font-size: 13px;\\n  font-weight: 600;\\n  text-align: center;\\n  letter-spacing: 0; }\\n\\n.live {\\n  background-color: #db1f26; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.scss\n// module chunks = 0","import {Component, Input, Output, EventEmitter} from \"@angular/core\"\r\nimport {VideoDeviceService} from \"../../../../../../shared/services/capture-device/video-device.service\";\r\nimport {PanelsService} from \"../../../../../../shared/services/infra/panels.service\";\r\nimport {AppStateService} from \"../../../../../../shared/services/infra/app-state.service\";\r\nimport {AppConfigService} from \"../../../../../../shared/services/infra/app-config.service\";\r\nimport {LiveManagerService} from \"../../../../../../shared/services/live/live-manager.service\";\r\n\r\n@Component({\r\n  selector: 'visual-input-controllers',\r\n  templateUrl: './visual-input-controllers.component.html',\r\n  styleUrls:  ['./visual-input-controllers.component.scss',  './../../../../styles/device-container.scss'],\r\n  providers: []\r\n})\r\nexport class VisualInputControllersComponent {\r\n\r\n  /**\r\n   * inputSession\r\n   * @type {{name: sessionName, type: sessionType}}\r\n   */\r\n  @Input() inputSession: any = {sessionName: '', type: '', displayName: ''};\r\n  /**\r\n   * emit event when input's preview button is clicked\r\n   * @type {EventEmitter<void>}\r\n   */\r\n  @Output() previewStateChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output() inputSettingsClick: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private appState: AppStateService,\r\n    private appConfig: AppConfigService,\r\n    private panelsService: PanelsService,\r\n    private videoService: VideoDeviceService,\r\n    private liveManagerService: LiveManagerService)\r\n  {\r\n  }\r\n\r\n  getInputName()\r\n  {\r\n    return this.inputSession.displayName;\r\n  }\r\n\r\n  getInputAriaLabel()\r\n  {\r\n    return this.isInputPreviewing() ?\r\n      'CAPTURE_DEVICE.disableCamera' :\r\n      'CAPTURE_DEVICE.enableCamera';\r\n  }\r\n\r\n  getPreviewButtonClass()\r\n  {\r\n    return this.isInputPreviewing() ?\r\n      'video-preview-in-progress device-preview-in-progress' :\r\n      'video-preview-stopped device-preview-stopped';\r\n  }\r\n\r\n  onPreviewStateChange()\r\n  {\r\n    this.previewStateChange.emit();\r\n  }\r\n\r\n  disablePreviewButton()\r\n  {\r\n    return this.videoService.shouldDisableDeviceConfiguration(this.inputSession.sessionName) ||\r\n      this.panelsService.isCurrentPanelActive();\r\n  }\r\n\r\n  //if in process or if other panel is opened\r\n  disableSettingsButton()\r\n  {\r\n    return !this.videoService.isDeviceStable(this.inputSession.sessionName) ||\r\n            !this.appState.isAppStable() ||\r\n            (this.panelsService.isCurrentPanelActive() &&\r\n            !this.panelsService.isPanelActive(this.inputSession.sessionName + '-device-settings'));\r\n  }\r\n\r\n  isSettingsPanelVisible()\r\n  {\r\n    return this.panelsService.isPanelActive(this.inputSession.sessionName + '-device-settings');\r\n  }\r\n\r\n  getDevicePanelTitleText()\r\n  {\r\n    return this.inputSession.type === 'video' ?\r\n      'CAPTURE_DEVICE.camera_panel_title' :\r\n      'CAPTURE_DEVICE.screen_panel_title';\r\n  }\r\n\r\n  onSettingsButtonClick()\r\n  {\r\n    this.inputSettingsClick.emit(this.inputSession.sessionName);\r\n  }\r\n\r\n  isAppRecording()\r\n  {\r\n    return this.appState.isAppRecording();\r\n  }\r\n\r\n  private isInputPreviewing()\r\n  {\r\n    return this.videoService.isDevicePreviewing(this.inputSession.sessionName);\r\n  }\r\n\r\n  isLive() {\r\n    return this.appState.isAppStreaming();\r\n  }\r\n\r\n  isLiveConfigured() {\r\n    return this.liveManagerService.isInputLiveConfigured(this.inputSession.sessionName);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-controllers/visual-input-controllers.component.ts","module.exports = \"<div class=\\\"device-settings-component\\\">\\r\\n\\r\\n  <div class=\\\"grid device-settings-container\\\">\\r\\n\\r\\n    <p-confirmDialog class=\\\"cc-confirmation\\\"\\r\\n                     message=\\\"{{'CONFIRMATIONS.remove_input' | translate:{ input_name: getInputDisplayName() } }}\\\"\\r\\n                     appendTo=\\\"body\\\" #cri [key]=\\\"getInputDisplayName()\\\" dialog-addon role=\\\"dialog\\\" aria-modal=\\\"true\\\">\\r\\n      <p-footer class=\\\"confirm-dialog-footer\\\">\\r\\n        <button class=\\\"app-oval-button\\\" pButton label=\\\"{{'COMMON.no' | translate}}\\\" (click)=\\\"cri.reject()\\\"></button>\\r\\n        <button class=\\\"confirm-button app-link-button cc-button\\\" pButton label=\\\"{{'COMMON.yes' | translate}}\\\" (click)=\\\"cri.accept()\\\"></button>\\r\\n      </p-footer>\\r\\n    </p-confirmDialog>\\r\\n\\r\\n    <div class=\\\"device-settings-panel\\\">\\r\\n\\r\\n      <div class=\\\"col-12 device-settings-header\\\">\\r\\n        <div class=\\\"grid\\\">\\r\\n          <div class=\\\"col-4 no-spaces\\\">\\r\\n            <div class=\\\"device-settings-icon-container\\\">\\r\\n              <div class=\\\"device-settings-icon video-settings-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"device-settings-text\\\">\\r\\n              {{ 'CAPTURE_DEVICE.input_settings_title' | translate: {input_name: getInputDisplayName()} }}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-12 device-settings-body\\\">\\r\\n        <!-- Capture Device -->\\r\\n        <div class=\\\"grid-3\\\">\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"captureDevicesDropDown\\\">{{ this.getDeviceInputText() | translate }}</label>\\r\\n              <a *ngIf=\\\"showDeviceIndication()\\\" class=\\\"app-link device-indication-link\\\" target=\\\"_blank\\\" (click)=\\\"identifyDevice()\\\">({{'CAPTURE_DEVICE.screen_indication' | translate}})</a>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureDevicesDropDown\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"devices\\\" [(ngModel)]=\\\"selectedDevice\\\"\\r\\n                        (onCustomChange)=\\\"onDeviceChange(true)\\\" [disabled]=\\\"disableSettingsDropDown(devices)\\\"\\r\\n                        [placeholder]=\\\"getEmptyDataText() | translate\\\" #firstInput></p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"captureResolutionsDropDown\\\">{{'CAPTURE_DEVICE.resolution' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureResolutionsDropDown\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"resolutions\\\" [(ngModel)]=\\\"selectedResolution\\\"\\r\\n                        (onCustomChange)=\\\"onResolutionChange(true)\\\" [disabled]=\\\"disableSettingsDropDown(devices)\\\" [placeholder]=\\\"getEmptyDataText() | translate\\\" ></p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"captureFpsDropDown\\\">{{'CAPTURE_DEVICE.fps' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureFpsDropDown\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"fps\\\" [(ngModel)]=\\\"selectedFps\\\"\\r\\n                        (onCustomChange)=\\\"onFpsChange(true)\\\" [disabled]=\\\"disableSettingsDropDown(devices)\\\" [placeholder]=\\\"getEmptyDataText() | translate\\\" ></p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"captureCSDropDown\\\">{{'CAPTURE_DEVICE.colorspace' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureCSDropDown\\\" dropdown-addon [styleClass]=\\\"settings-field-dropdown\\\" [options]=\\\"CS\\\" [(ngModel)]=\\\"selectedCS\\\"\\r\\n                        (onCustomChange)=\\\"onCsChange(true)\\\" [disabled]=\\\"disableSettingsDropDown(devices)\\\" [placeholder]=\\\"getEmptyDataText() | translate\\\"\\r\\n                        (onFocus)=\\\"autoScrollDown()\\\"></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"sep-line\\\"></div>\\r\\n        <!-- Encoder -->\\r\\n        <div class=\\\"grid-3\\\">\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"captureEncoderDropDown\\\">{{'CAPTURE_DEVICE.encoder' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureEncoderDropDown\\\" dropdown-addon [dropdown-addon-autoscroll]=\\\"true\\\" [styleClass]=\\\"settings-field-dropdown\\\"\\r\\n                        [options]=\\\"encoder\\\" [(ngModel)]=\\\"selectedEncoder\\\" (onCustomChange)=\\\"onEncoderChange(true)\\\"\\r\\n                        [disabled]=\\\"disableSettingsDropDown(devices)\\\" [placeholder]=\\\"getEmptyDataText() | translate\\\" ></p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"captureBitratesDropDown\\\">{{'CAPTURE_DEVICE.bit_rate' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"captureBitratesDropDown\\\" dropdown-addon [dropdown-addon-autoscroll]=\\\"true\\\" [styleClass]=\\\"settings-field-dropdown\\\"\\r\\n                        [options]=\\\"bitrates\\\" [(ngModel)]=\\\"selectedBitrate\\\" (onCustomChange)=\\\"onBitrateChange()\\\" [disabled]=\\\"disableSettingsDropDown(devices)\\\"\\r\\n                        [placeholder]=\\\"getEmptyDataText() | translate\\\" ></p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"col device-settings-col\\\">\\r\\n            <div class=\\\"settings-field-title\\\" [ngClass]=\\\"{'settings-field-title-disabled': disableSettingsDropDown(devices)}\\\">\\r\\n              <label for=\\\"encoderProfilesDropDown\\\">{{'CAPTURE_DEVICE.encoder_profile' | translate}}</label>\\r\\n            </div>\\r\\n            <p-dropdown inputId=\\\"encoderProfilesDropDown\\\" dropdown-addon [dropdown-addon-autoscroll]=\\\"true\\\" [styleClass]=\\\"settings-field-dropdown\\\"\\r\\n                        [options]=\\\"encoderProfiles\\\" [(ngModel)]=\\\"selectedEncoderProfile\\\" (onCustomChange)=\\\"onEncoderProfileChange()\\\"\\r\\n                        [disabled]=\\\"disableSettingsDropDown(devices)\\\" [placeholder]=\\\"getEmptyDataText() | translate\\\" ></p-dropdown>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- switch to primary input -->\\r\\n        <div *ngIf=\\\"!isPrimaryInput()\\\" class=\\\"sep-line\\\"></div>\\r\\n        <div class=\\\"set-as-primary-container\\\">\\r\\n          <button *ngIf=\\\"!isPrimaryInput()\\\" class=\\\"app-oval-button input-switch-to-primary-button focus-once\\\" [disabled]=\\\"disableSettingsDropDown(devices)\\\"\\r\\n                  (click)=\\\"onSwitchToPrimaryClick()\\\" [attr.aria-label]=\\\"'CAPTURE_DEVICE.set_as_primary' | translate\\\">\\r\\n            {{ 'CAPTURE_DEVICE.set_as_primary' | translate }}\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"buttons-control\\\">\\r\\n        <button *ngIf=\\\"enableRemoveInput()\\\" class=\\\"large-non-oval-button focus-once remove-input-button\\\" (click)=\\\"onRemoveInputClick()\\\"\\r\\n                [attr.aria-label]=\\\"'CAPTURE_DEVICE.remove_input' | translate\\\">{{'CAPTURE_DEVICE.remove_input' | translate}}</button>\\r\\n        <button class=\\\"capture-settings-back-button app-oval-button\\\" (click)=\\\"onBackClick()\\\">{{'COMMON.back' | translate}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.html\n// module chunks = 0","var escape = require(\"../../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".video-settings-icon {\\n  background: url(\" + escape(require(\"../../../../../../assets/svg/20/camera.svg\")) + \") no-repeat top left; }\\n\\n.screen-settings-icon {\\n  background: url(\" + escape(require(\"../../../../../../assets/svg/20/screen.svg\")) + \") no-repeat top left; }\\n\\n.device-indication-link {\\n  padding-left: 5px;\\n  font-size: 12px;\\n  font-family: 'Lato'; }\\n\\n.capture-settings-back-button {\\n  margin-top: 14px;\\n  margin-right: 14px; }\\n\\n.buttons-control {\\n  position: absolute;\\n  top: 0;\\n  right: 0; }\\n\\n.remove-input-button {\\n  margin-right: 20px; }\\n\\n.set-as-primary-container {\\n  height: 30px; }\\n\\n.settings-field-title-disabled {\\n  color: #999999 !important; }\\n\\n.input-switch-to-primary-button {\\n  width: 115px;\\n  height: 24px;\\n  font-size: 12px;\\n  line-height: normal; }\\n\\n.input-switch-to-primary-button:disabled {\\n  cursor: default;\\n  opacity: 0.3; }\\n\\n:host /deep/ .ui-state-disabled {\\n  color: #666666;\\n  opacity: 0.7; }\\n\\n:host /deep/ .ui-state-disabled .ui-dropdown-trigger {\\n  color: #666666;\\n  opacity: 0.3; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.scss\n// module chunks = 0","import {Component, ElementRef, Input, ViewChild} from '@angular/core';\r\nimport {SelectItem} from \"primeng/components/common/api\";\r\nimport {AppStateService} from \"../../../../../../shared/services/infra/app-state.service\";\r\nimport {PanelsService} from \"../../../../../../shared/services/infra/panels.service\";\r\nimport {VideoDeviceSettingsService} from \"../../../../../../shared/services/capture-device/video-device-settings.service\";\r\nimport {AppLoggerService} from \"../../../../../../shared/services/infra/app-logger.service\";\r\nimport * as _ from \"lodash\";\r\nimport {utils} from  \"../../../../../../utils/utils\";\r\nimport {Dropdown} from \"primeng/components/dropdown/dropdown\";\r\nimport {AccessibilityService} from \"../../../../../../shared/services/infra/accessability.service\";\r\nimport {InputsManagementService} from \"../../inputs-management.service\";\r\nimport {ConfirmationService} from 'primeng/primeng';\r\n\r\n@Component({\r\n  selector: 'visual-input-settings',\r\n  templateUrl: './visual-input-settings.component.html',\r\n  styleUrls: ['./visual-input-settings.component.scss',  './../../../../styles/device-settings.scss']\r\n})\r\nexport class VisualInputSettingsComponent {\r\n\r\n  @Input() sessionName: string;\r\n  @Input() deviceType: string;\r\n\r\n  private sessionId;\r\n\r\n  @ViewChild('firstInput') private firstInput: Dropdown;\r\n\r\n  devices: SelectItem[] = [];\r\n  resolutions: SelectItem[] = [];\r\n  fps: SelectItem[] = [];\r\n  CS: SelectItem[] = [];\r\n  encoder: SelectItem[] = [];\r\n  bitrates: SelectItem[] = [];\r\n  encoderProfiles: SelectItem[] = [];\r\n\r\n  selectedDevice: string;\r\n  selectedResolution: number[];\r\n  selectedFps: string;\r\n  selectedCS: string;\r\n  selectedEncoder: string;\r\n  selectedBitrate: string;\r\n  selectedEncoderProfile: string;\r\n\r\n  private panelsSub = null;\r\n  private loading = true;\r\n\r\n  constructor(  private appState: AppStateService,\r\n                private panelsService: PanelsService,\r\n                private log: AppLoggerService,\r\n                private myElement: ElementRef,\r\n                private deviceSettingsService: VideoDeviceSettingsService,\r\n                private accessibilityService: AccessibilityService,\r\n                private inputsManagementService: InputsManagementService,\r\n                private confirmationService: ConfirmationService)\r\n  {\r\n\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.panelsSub =\r\n      this.panelsService.currentPanel$.subscribe(\r\n        panel => {\r\n          if(panel['type'] === this.sessionName + '-device-settings' && panel['active'] === true) {\r\n            this.log.info('Opening ' + this.sessionName + ' settings panel');\r\n            this.loadSettings()\r\n              .then(()=>{\r\n                return this.setFocusOnFirstInput();\r\n              });\r\n          }\r\n          else if (panel['type'] === this.sessionName + '-device-settings') {\r\n            this.accessibilityService.clearFocusAndScrollUp(this.myElement, '.device-settings-body');\r\n            this.resetSettingsData();\r\n          }\r\n        });\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    if(this.panelsSub)\r\n      this.panelsSub.unsubscribe()\r\n  }\r\n\r\n  autoScrollDown()\r\n  {\r\n    setTimeout(() => {\r\n      let element = this.myElement.nativeElement.querySelector('.device-settings-body');\r\n      if(element) {\r\n        element.scrollTop = element.scrollHeight;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadSettings()\r\n  {\r\n    this.loading = true;\r\n    this.sessionId = this.deviceSettingsService.getSessionId(this.sessionName);\r\n    return this.deviceSettingsService.getVideoDeviceSettings(this.sessionName, this.deviceType)\r\n      .then(([captureDevices, videoEncoders, bitrates, profiles]) => {\r\n        this.setDeviceList(captureDevices, this.deviceSettingsService.getSessionData(this.sessionName).selectedDevice);\r\n        this.setEncoderList(videoEncoders, this.deviceSettingsService.getSessionData(this.sessionName).selectedEncoder)\r\n        this.setBitrateList(bitrates, this.deviceSettingsService.getSessionData(this.sessionName).selectedBitrate);\r\n        this.setProfileList(profiles, this.deviceSettingsService.getSessionData(this.sessionName).selectedEncoderProfile);\r\n        this.loading = false;\r\n        return this.setResolutionList(false);\r\n      })\r\n      .catch((err) => {\r\n        this.loading = false;\r\n        this.log.error('ERROR - loading ' + this.sessionName + ' settings. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  /* Accessibility */\r\n  private setFocusOnFirstInput() {\r\n    return this.accessibilityService.setFocusOnMainWindow()\r\n      .then(()=>{\r\n        this.firstInput.applyFocus();\r\n      })\r\n  }\r\n\r\n  private setDeviceList(devices, selectedDevice)\r\n  {\r\n    for (let i in devices) {\r\n      let deviceBounds = devices[i].bounds ? devices[i].bounds : {\"height\":0,\"width\":0,\"x\":0,\"y\":0};\r\n      this.devices.push({ label: devices[i].friendly_name, value: devices[i].device_id });\r\n    }\r\n    this.selectedDevice = selectedDevice;\r\n  }\r\n\r\n  private setResolutionList(triggeredFromUI:boolean)\r\n  {\r\n    this.resolutions.length = 0;\r\n    _.forEach(this.getInputTypes(), (inputType) => {\r\n      this.pushResolutionToList(inputType);\r\n    });\r\n    this.resolutions = _.uniqBy(this.resolutions, 'label');\r\n    utils.sortResolutionArray(this.resolutions);\r\n    this.setSelectedResolutionForDevice();\r\n    return this.onResolutionChange(triggeredFromUI);\r\n  }\r\n\r\n  private pushResolutionToList(inputType)\r\n  {\r\n    this.resolutions.push(\r\n      {\r\n        label: inputType.width + ' x ' + inputType.height + (inputType.interlaceMode==='progressive' ? 'p' : 'i'),\r\n        value: [inputType.width, inputType.height,inputType.interlaceMode]\r\n      });\r\n  }\r\n\r\n  private setSelectedResolutionForDevice()\r\n  {\r\n    this.selectedResolution = [\r\n      this.deviceSettingsService.getSessionData(this.sessionName).selectedInputType.width ,\r\n      this.deviceSettingsService.getSessionData(this.sessionName).selectedInputType.height,\r\n      this.deviceSettingsService.getSessionData(this.sessionName).selectedInputType.interlaceMode\r\n    ];\r\n  }\r\n\r\n  private filterInputsTypes ( filteFps:boolean=false, filterCS:boolean=false) {\r\n    return _.filter(this.getInputTypes(),  (inputType: any) => {\r\n      return inputType.width === this.selectedResolution[0] &&\r\n        inputType.height === this.selectedResolution[1] &&\r\n        inputType.interlaceMode === this.selectedResolution[2] &&\r\n        (!filteFps || inputType.fps === this.selectedFps) &&\r\n        (!filterCS || inputType.colorspace === this.selectedCS);\r\n    });\r\n  }\r\n\r\n  private setFpsList(triggeredFromUI:boolean)\r\n  {\r\n    let fpsRelatedInputTypes =  this.filterInputsTypes();\r\n\r\n    _.forEach(fpsRelatedInputTypes,  (inputType)=> {\r\n      this.fps.push({ label: inputType.fps.toFixed(2) , value: inputType.fps });\r\n    });\r\n    this.fps = _.orderBy(_.uniqBy(this.fps, 'label'),'value',['desc']);\r\n    this.selectedFps = this.deviceSettingsService.getDefaultSelection(this.sessionName, fpsRelatedInputTypes,'fps',triggeredFromUI);\r\n    return this.onFpsChange(triggeredFromUI);\r\n  }\r\n\r\n  private setColorSpaceList(triggeredFromUI:boolean)\r\n  {\r\n    let csRelatedInputTypes = this.filterInputsTypes(true);\r\n\r\n    _.forEach(csRelatedInputTypes,  (inputType)=> {\r\n      this.CS.push({ label: inputType.colorspace , value: inputType.colorspace });\r\n    });\r\n    this.CS = _.uniqBy(this.CS, 'label');\r\n    this.selectedCS = this.deviceSettingsService.getDefaultSelection(this.sessionName, csRelatedInputTypes,'colorspace',triggeredFromUI);\r\n    return this.onCsChange(triggeredFromUI);\r\n  }\r\n\r\n  private setEncoderList(encoders, selectedEncoder)\r\n  {\r\n    _.forEach(encoders,  (encoder)=> {\r\n      this.encoder.push({ label: encoder.friendly_name , value: encoder.encoder_id });\r\n    });\r\n    this.encoder = _.uniqBy(this.encoder, 'label');\r\n    this.selectedEncoder = selectedEncoder;\r\n  }\r\n\r\n  private setBitrateList(bitrates, selectedBitrate)\r\n  {\r\n    this.bitrates = bitrates;\r\n    this.selectedBitrate = selectedBitrate;\r\n  }\r\n\r\n  private setProfileList(profiles, selectedProfile)\r\n  {\r\n    this.encoderProfiles  = profiles;\r\n    this.selectedEncoderProfile = selectedProfile;\r\n  }\r\n\r\n  private resetSettingsData()\r\n  {\r\n    this.devices.length = 0 ;\r\n    this.resolutions.length = 0;\r\n    this.fps.length = 0;\r\n    this.CS.length = 0;\r\n    this.encoder.length = 0;\r\n    this.bitrates.length = 0;\r\n    this.encoderProfiles.length = 0;\r\n\r\n    this.selectedDevice = null;\r\n    this.selectedResolution = null;\r\n    this.selectedFps = null;\r\n    this.selectedCS = null;\r\n    this.selectedEncoder = null;\r\n    this.selectedBitrate = null;\r\n    this.selectedEncoderProfile = null;\r\n  }\r\n\r\n  /**\r\n   * on UI changes\r\n   */\r\n  onDeviceChange(triggeredFromUI:boolean)\r\n  {\r\n    this.deviceSettingsService.onDeviceChange(this.sessionName, this.sessionId,\r\n                                                this.selectedDevice, this.selectedEncoder,\r\n                                                  this.selectedBitrate, this.selectedEncoderProfile)\r\n      .then(() => {\r\n        return this.setResolutionList(triggeredFromUI);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('ERROR changing ' + this.sessionName + ' device selection ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  onResolutionChange(triggeredFromUI:boolean)\r\n  {\r\n    this.fps.length = 0;\r\n    return this.setFpsList(triggeredFromUI);\r\n  }\r\n\r\n  onFpsChange(triggeredFromUI:boolean)\r\n  {\r\n    this.CS.length = 0;\r\n    return this.setColorSpaceList(triggeredFromUI);\r\n  }\r\n\r\n  //set selected input type according to all input selected parameters\r\n  onCsChange(riggeredFromUI:boolean)\r\n  {\r\n    let selectedInputType = this.filterInputsTypes(true,true);\r\n    return this.deviceSettingsService.onCsChange(this.sessionName, this.sessionId, selectedInputType[0])\r\n      .catch((err) => {}); //do nothing\r\n  }\r\n\r\n  onEncoderChange(triggeredFromUI:boolean)\r\n  {\r\n    return this.deviceSettingsService.setSelectedEncoder(this.sessionName, this.sessionId, this.selectedEncoder)\r\n      .then(()=>{\r\n        this.resolutions.length = 0;\r\n        return this.setResolutionList(triggeredFromUI);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  onBitrateChange()\r\n  {\r\n    return this.deviceSettingsService.onBitrateChange(this.sessionName, this.sessionId, this.selectedBitrate)\r\n      .catch((err) => {}); //do nothing\r\n  }\r\n\r\n  onEncoderProfileChange()\r\n  {\r\n    return this.deviceSettingsService.onEncoderProfileChange(this.sessionName, this.sessionId, this.selectedEncoderProfile)\r\n      .catch((err) => {}); //do nothing\r\n  }\r\n\r\n  getInputTypes()\r\n  {\r\n    return this.deviceSettingsService.getSessionData(this.sessionName).InputTypes;\r\n  }\r\n\r\n  getEncoders()\r\n  {\r\n    return this.deviceSettingsService.getSessionData(this.sessionName).Encoders;\r\n  }\r\n\r\n  onBackClick()\r\n  {\r\n    this.panelsService.updateCurrentPanel({type : this.sessionName + '-device-settings', active : false});\r\n  }\r\n\r\n  disableSettingsDropDown(devices)\r\n  {\r\n    return this.isProcessing() || _.isEmpty(devices);\r\n  }\r\n\r\n  isProcessing()\r\n  {\r\n    return !this.appState.isSourceStable(this.sessionId);\r\n  }\r\n\r\n  getEmptyDataText()\r\n  {\r\n    return this.loading ? 'SETTINGS.loading' : 'SETTINGS.not_available';\r\n  }\r\n\r\n  getInputDisplayName()\r\n  {\r\n    return this.inputsManagementService.getActiveSessionDisplayName(this.sessionName);\r\n  }\r\n\r\n  getDeviceInputText()\r\n  {\r\n    return 'CAPTURE_DEVICE.input_source';\r\n  }\r\n\r\n  identifyDevice()\r\n  {\r\n    return this.deviceSettingsService.identifyDevice(this.selectedDevice, this.sessionName);\r\n  }\r\n\r\n  showDeviceIndication()\r\n  {\r\n    return this.deviceSettingsService.shouldShowDeviceIndication(this.sessionName);\r\n  }\r\n\r\n  enableRemoveInput()\r\n  {\r\n    return this.inputsManagementService.getActiveVisualInputsCount() > 1;\r\n  }\r\n\r\n  isPrimaryInput()\r\n  {\r\n    return this.sessionName === this.inputsManagementService.PRIMARY_SESSION_NAME;\r\n  }\r\n\r\n  onRemoveInputClick()\r\n  {\r\n    this.confirmationService.confirm({\r\n      message: '',\r\n      key: this.getInputDisplayName(),\r\n      accept: () => {\r\n        this.onBackClick();\r\n        this.inputsManagementService.removeSession(this.sessionName);\r\n      },\r\n      reject: () => { } //will return to settings panel\r\n    });\r\n  }\r\n\r\n  onSwitchToPrimaryClick()\r\n  {\r\n    this.onBackClick();\r\n    this.inputsManagementService.switchToPrimarySession(this.sessionName);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input-settings/visual-input-settings.component.ts","module.exports = \"<div class=\\\"visual-input capture-device\\\">\\r\\n\\r\\n  <p-confirmDialog class=\\\"cc-confirmation\\\" message= \\\"{{ 'CONFIRMATIONS.stop_live_streaming_Message' | translate }}\\\"\\r\\n                   key=\\\"{{ 'stop-broadcast-key-' + this.inputSession.sessionName}}\\\" appendTo=\\\"body\\\" #cb dialog-addon role=\\\"dialog\\\" aria-modal=\\\"true\\\">\\r\\n    <p-footer class=\\\"confirm-dialog-footer\\\">\\r\\n      <button class=\\\"app-link-button\\\" pButton label=\\\"{{'COMMON.cancel' | translate}}\\\" (click)=\\\"cb.reject()\\\"></button>\\r\\n      <button class=\\\"confirm-button app-oval-button cc-button\\\" pButton label=\\\"{{'CONFIRMATIONS.stop_live_streaming_confirm' | translate}}\\\" (click)=\\\"cb.accept()\\\"></button>\\r\\n    </p-footer>\\r\\n  </p-confirmDialog>\\r\\n\\r\\n  <visual-input-controllers class=\\\"visual-input-controller-container\\\" [inputSession]=\\\"inputSession\\\"\\r\\n                     (previewStateChange)=\\\"onPreviewStateChangeEvent()\\\"\\r\\n                     (inputSettingsClick)=\\\"onInputSettingsClickEvent()\\\">\\r\\n  </visual-input-controllers>\\r\\n\\r\\n  <div class=\\\"input-preview device-preview\\\" [ngClass]=\\\"{'single-device-preview': isSingleInput()}\\\">\\r\\n    <div class=\\\"device-temp-preview video-temp-preview\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"visual-input-footer\\\">\\r\\n    <button class=\\\"stop-streaming-button\\\"\\r\\n          (click)=\\\"onStopStreamingButtonClick()\\\"\\r\\n          [hidden]=\\\"!isLiveStreamingInput()\\\">Stop Broadcasting</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.html\n// module chunks = 0","var escape = require(\"../../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".video-temp-preview {\\n  background: url(\" + escape(require(\"../../../../../../assets/svg/40/camera.svg\")) + \") no-repeat top left; }\\n\\n.capture-device {\\n  box-sizing: border-box;\\n  background-color: #24212A; }\\n\\n.visual-input-controller-container {\\n  height: 10%;\\n  display: block;\\n  background-color: rgba(153, 153, 153, 0.1); }\\n\\n.visual-input-footer {\\n  height: 13.8%; }\\n\\n.stop-streaming-button {\\n  position: absolute;\\n  bottom: 3.2%;\\n  margin-top: auto;\\n  margin-bottom: auto;\\n  left: calc(50% - 70px);\\n  width: 140px;\\n  height: 24px;\\n  opacity: 0.7;\\n  border-radius: 100px;\\n  background-color: rgba(255, 255, 255, 0);\\n  border: solid 1px #ffffff;\\n  color: #ffffff;\\n  font-family: Lato;\\n  text-align: center; }\\n  .stop-streaming-button:hover {\\n    opacity: 1; }\\n\\n.confirm-dialog-footer {\\n  width: 242px;\\n  left: calc(50% - 121px); }\\n\\n.confirm-button {\\n  width: 130px;\\n  padding-top: 0px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.scss\n// module chunks = 0","import {Component, Input, ElementRef, HostListener} from '@angular/core';\r\nimport { Subject }    from 'rxjs';\r\nimport {VideoDeviceService} from \"../../../../../../shared/services/capture-device/video-device.service\";\r\nimport {AppStateService} from \"../../../../../../shared/services/infra/app-state.service\";\r\nimport {DevicePreviewService} from \"../../../../../../shared/services/capture-device/device-preview.service\";\r\nimport {AppLoggerService} from \"../../../../../../shared/services/infra/app-logger.service\";\r\nimport {InputsManagementService} from \"../../inputs-management.service\";\r\nimport {PanelsService} from \"../../../../../../shared/services/infra/panels.service\";\r\nimport {LiveManagerService} from \"../../../../../../shared/services/live/live-manager.service\";\r\nimport {ConfirmationService} from 'primeng/primeng';\r\n\r\n@Component({\r\n  selector: 'visual-input',\r\n  templateUrl: './visual-input.component.html',\r\n  styleUrls:  ['./visual-input.component.scss', './../../../../styles/device-container.scss'],\r\n  providers: []\r\n})\r\nexport class VisualInputComponent {\r\n\r\n  @Input() inputSession: any = {};\r\n  @Input() startInputsPreviewEvent:Subject<any>;\r\n\r\n  private visualInputsRefreshSub = null;\r\n\r\n  private startInputsPreviewSubscription = null;\r\n\r\n  constructor(\r\n    private log: AppLoggerService,\r\n    private elementRef: ElementRef,\r\n    private appState: AppStateService,\r\n    private panelsService: PanelsService,\r\n    private videoService: VideoDeviceService,\r\n    private inputsManagementService: InputsManagementService,\r\n    private devicePreviewService: DevicePreviewService,\r\n    private liveManagerService: LiveManagerService,\r\n    private confirmationService: ConfirmationService\r\n  ) {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event)\r\n  {\r\n    this.videoService.repositionsDevicePreview(this.inputSession.sessionName, this.getPreviewElementPosition());\r\n  }\r\n\r\n  ngAfterViewInit()\r\n  {\r\n    this.log.info('VisualInputComponent ngAfterViewInit for ' + this.inputSession.sessionName);\r\n\r\n    this.visualInputsRefreshSub =\r\n      this.inputsManagementService.refreshInputs$.subscribe(() => {\r\n        this.log.info('VisualInputComponent: refresh inputs was fired for ' + this.inputSession.sessionName);\r\n        this.setInitPreviewDisplay();\r\n      });\r\n\r\n    this.registerToPreviewReposition();\r\n    this.registerStartInputsPreviewEvent();\r\n    this.setInitPreviewDisplay();\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    if(this.visualInputsRefreshSub)\r\n      this.visualInputsRefreshSub.unsubscribe();\r\n    if(this.startInputsPreviewSubscription)\r\n      this.startInputsPreviewSubscription.unsubscribe();\r\n  }\r\n\r\n  onPreviewStateChangeEvent()\r\n  {\r\n    if(!this.isPreviewing()) {\r\n      this.startPreview()\r\n    } else {\r\n      this.stopPreview();\r\n    }\r\n  }\r\n\r\n  onInputSettingsClickEvent()\r\n  {\r\n    let active = !this.panelsService.isPanelActive(this.inputSession.sessionName + '-device-settings');\r\n    this.panelsService.updateCurrentPanel({type : this.inputSession.sessionName + '-device-settings', active : active});\r\n  }\r\n\r\n  isSingleInput()\r\n  {\r\n    return this.inputsManagementService.getActiveVisualInputsCount() === 1;\r\n  }\r\n\r\n  /**\r\n   * check if input's preview should be visible at component load\r\n   */\r\n  private setInitPreviewDisplay()\r\n  {\r\n    if(this.isPreviewing()) {\r\n      this.log.info('VisualInputComponent: setInitPreviewDisplay: display preview for ' + this.inputSession.sessionName);\r\n      this.toggleDevicePreview(true);\r\n    }\r\n  }\r\n\r\n  private startPreview()\r\n  {\r\n    let pos = this.getPreviewElementPosition();\r\n    if (pos) {\r\n      return this.videoService.startDevicePreviewAndActivateSession(this.inputSession.sessionName, pos)\r\n        .catch((err) => {\r\n        }); //do nothing\r\n    }\r\n    else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  private stopPreview()\r\n  {\r\n    this.videoService.stopDevicePreviewAndDeactivateSession(this.inputSession.sessionName)\r\n      .catch((err) => {}); //do nothing\r\n  }\r\n\r\n  private getPreviewElementPosition()\r\n  {\r\n    let previewElement = this.elementRef.nativeElement.querySelector('.device-preview');\r\n    let rect = previewElement ? previewElement.getBoundingClientRect() : null;\r\n\r\n    return rect ? {\r\n      left: rect.left*window.devicePixelRatio,\r\n      top: rect.top*window.devicePixelRatio,\r\n      width: previewElement.offsetWidth*window.devicePixelRatio,\r\n      height: previewElement.offsetHeight*window.devicePixelRatio\r\n    } : null;\r\n  }\r\n\r\n  private registerToPreviewReposition()\r\n  {\r\n    this.devicePreviewService.repositionPreview$.subscribe(\r\n      () => {\r\n        this.videoService.repositionsDevicePreview(this.inputSession.sessionName, this.getPreviewElementPosition());\r\n      }\r\n    );\r\n  }\r\n\r\n  private registerStartInputsPreviewEvent()\r\n  {\r\n    this.startInputsPreviewSubscription = this.startInputsPreviewEvent.subscribe(() => {\r\n      this.log.info('VisualInputComponent: received startInputsPreviewEvent');\r\n      this.videoService.updateDevicePreviewLocation(this.inputSession.sessionName, this.getPreviewElementPosition());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * only hides device preview\r\n   * @param showPreview\r\n   */\r\n  private toggleDevicePreview(showPreview: boolean)\r\n  {\r\n    if (showPreview) {\r\n      //wait for next ui cycle\r\n      setTimeout(() => {\r\n        this.videoService.updateDevicePreviewLocation(this.inputSession.sessionName, this.getPreviewElementPosition());\r\n      });\r\n    } else {\r\n      this.videoService.hideDevicePreview(this.inputSession.sessionName)\r\n    }\r\n  }\r\n\r\n  isPreviewing()\r\n  {\r\n    return this.videoService.isDevicePreviewing(this.inputSession.sessionName);\r\n  }\r\n\r\n  isLiveStreamingInput()\r\n  {\r\n    return this.liveManagerService.isInputLiveConfigured(this.inputSession.sessionName);\r\n  }\r\n\r\n  onStopStreamingButtonClick() {\r\n    this.confirmationService.confirm({\r\n      message: '',\r\n      key: \"stop-broadcast-key-\" + this.inputSession.sessionName,\r\n      accept: () => {\r\n        this.videoService.stopLiveStreaming(this.inputSession.sessionName);\r\n        this.liveManagerService.stopLiveStreaming();\r\n      },\r\n      reject: () => {}\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-input/visual-input.component.ts","module.exports = \"<div class=\\\"grid col-12 visual-inputs-container\\\">\\r\\n\\r\\n  <visual-input *ngFor=\\\"let inputName of getActiveSessionsNames()\\\"\\r\\n                aria-hidden id=\\\"inputName\\\"\\r\\n                class=\\\"visual-input-item\\\"\\r\\n                [ngClass]=\\\"getColumnClass()\\\"\\r\\n                [startInputsPreviewEvent]=\\\"startInputsPreviewEvent\\\"\\r\\n                [inputSession]=\\r\\n                  \\\"{sessionName: inputName,\\r\\n                    type: _activeInputs[inputName],\\r\\n                    displayName: getActiveSessionDisplayName(inputName)}\\\">\\r\\n  </visual-input>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.html\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".visual-inputs-container {\\n  width: 100%;\\n  height: 100%; }\\n\\n.visual-input-item {\\n  -ms-flex-item-align: stretch;\\n      -ms-grid-row-align: stretch;\\n      align-self: stretch;\\n  padding: 0 1px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.scss\n// module chunks = 0","import {Component, Input} from '@angular/core';\r\nimport { Subject }    from 'rxjs';\r\nimport * as _ from \"lodash\";\r\nimport {AppLoggerService} from \"../../../../../shared/services/infra/app-logger.service\";\r\nimport {InputsManagementService} from \"../inputs-management.service\";\r\nimport {ipcWrapper} from \"../../../../../utils/ipcWrapper\";\r\nimport {utils} from \"../../../../../utils/utils\";\r\nimport {AppStateService} from \"../../../../../shared/services/infra/app-state.service\";\r\n\r\n@Component({\r\n  selector: 'visual-inputs-container',\r\n  templateUrl: './visual-inputs-container.component.html',\r\n  styleUrls:  ['./visual-inputs-container.component.scss'],\r\n  providers: []\r\n})\r\nexport class VisualInputsContainerComponent {\r\n\r\n  readonly THROTTLING_THRESHOLD = 200;\r\n\r\n  /**\r\n   * will fire an event when all inputs should start their preview after window movement and visibility state change\r\n   */\r\n  startInputsPreviewEvent: Subject<any> = new Subject();\r\n\r\n  @Input() set activeInputs(inputs: any)\r\n  {\r\n    this.log.info('VisualInputsContainerComponent: active inputs update');\r\n    this._activeInputs = inputs;\r\n    this.inputsManagementService.fireRefreshInputsEvent();\r\n  }\r\n\r\n  private _activeInputs: any = [];\r\n\r\n  private onWinMoveSubscription = null;\r\n  private activeWindowTransition = false;\r\n  private windowTransitionTimer = null;\r\n  private windowMoveThrottlingTimestamp = null;\r\n  private hideWindowPromise = Promise.resolve();\r\n\r\n  constructor(\r\n    private log: AppLoggerService,\r\n    private appState: AppStateService,\r\n    private inputsManagementService: InputsManagementService)\r\n  {\r\n  }\r\n\r\n  ngOnInit()\r\n  {\r\n    this.registerToWindowMove();\r\n    this.registerWindowVisibilityChanges();\r\n  }\r\n\r\n  ngOnDestroy()\r\n  {\r\n    this.unRegisterFromWindowMove();\r\n  }\r\n\r\n  getColumnClass()\r\n  {\r\n    let inputsLength = _.keys(this._activeInputs).length;\r\n    return inputsLength > 0 ? 'col-' + Math.floor(12 / inputsLength) : '';\r\n  }\r\n\r\n  /**\r\n   * output order - primary session (always session0), and than all others\r\n   * @returns {string[]}\r\n   */\r\n  getActiveSessionsNames() {\r\n    return _.keys(this._activeInputs).sort((a, b) => {\r\n      //alphabetical order\r\n      return a < b ? -1 : 1;\r\n    });\r\n  }\r\n\r\n  getActiveSessionDisplayName(sessionName)\r\n  {\r\n    return this.inputsManagementService.getActiveSessionDisplayName(sessionName);\r\n  }\r\n\r\n  private registerToWindowMove()\r\n  {\r\n    if(!this.onWinMoveSubscription) {\r\n      this.onWinMoveSubscription =\r\n        ipcWrapper.registerForNotification('on-window-move',\r\n          () => {\r\n            if(!this.windowMoveThrottlingTimestamp || (Date.now() - this.windowMoveThrottlingTimestamp > this.THROTTLING_THRESHOLD)) {\r\n              this.windowMoveThrottlingTimestamp = Date.now();\r\n              this.handleWindowMove();\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  private registerWindowVisibilityChanges()\r\n  {\r\n    this.appState.applicationWindowState$.subscribe((state) => {\r\n      if (state === this.appState.WINDOW_STATE.HIDDEN){\r\n        clearTimeout(this.windowTransitionTimer);\r\n        this.unRegisterFromWindowMove();\r\n        this.inputsPreviewHide()\r\n          .catch((err) => {\r\n            this.log.info('VisualInputsContainer: Failed to hide previews after window visibility change');\r\n          });\r\n      } else if (state === this.appState.WINDOW_STATE.VISIBLE){\r\n        this.registerToWindowMove();\r\n        this.startInputsPreviewEvent.next();\r\n      }\r\n    });\r\n  }\r\n\r\n  private unRegisterFromWindowMove()\r\n  {\r\n    if(this.onWinMoveSubscription) {\r\n      ipcWrapper.unregisterForNotification('on-window-move', this.onWinMoveSubscription);\r\n      this.onWinMoveSubscription = null;\r\n    }\r\n  }\r\n\r\n  private handleWindowMove()\r\n  {\r\n    if(!this.activeWindowTransition) {\r\n      this.activeWindowTransition = true;\r\n      this.updatePreviewPosition();\r\n    } else {\r\n      this.log.debug('VisualInputsContainerComponent: window transition is in progress - ignoring win move event.');\r\n      this.initWindowTransitionTimer();\r\n    }\r\n  }\r\n\r\n  private updatePreviewPosition()\r\n  {\r\n    //only if we are not during window transition\r\n    this.log.debug('VisualInputsContainerComponent: not in window transition, hiding inputs preview');\r\n    this.inputsPreviewHide()\r\n      .then(() => {\r\n        this.initWindowTransitionTimer();\r\n      });\r\n  }\r\n\r\n  private inputsPreviewHide()\r\n  {\r\n    this.log.info('VisualInputsContainerComponent: not in window transition, hiding inputs preview');\r\n    this.hideWindowPromise =\r\n      this.hideWindowPromise\r\n        .then(() => {\r\n          this.log.info('VisualInputsContainerComponent: previous hide window promise ended, hiding inputs preview');\r\n          this.activeWindowTransition = true;\r\n          return this.inputsManagementService.hideAllActiveSessionsPreview();\r\n        })\r\n        .catch((err) => {\r\n          this.log.info('VisualInputsContainerComponent: Failed to hide all active inputs preview. ' + utils.stringifyMsg(err))\r\n        });\r\n    return this.hideWindowPromise;\r\n  }\r\n\r\n  private initWindowTransitionTimer()\r\n  {\r\n    clearTimeout(this.windowTransitionTimer);\r\n    //wait for movement to stop\r\n    this.windowTransitionTimer = setTimeout(() => {\r\n      //fire a show preview event after stop promise resolved\r\n      this.log.info('VisualInputsContainerComponent: preparing to fire start inputs preview event');\r\n      this.hideWindowPromise\r\n        .then(() => {\r\n          //start inputs preview only if app is visible\r\n          if(this.appState.getApplicationWindowState() === this.appState.WINDOW_STATE.VISIBLE) {\r\n            this.startInputsPreviewEvent.next();\r\n            this.log.info('VisualInputsContainerComponent: fired start inputs preview event');\r\n          }\r\n          this.activeWindowTransition = false;\r\n          this.windowMoveThrottlingTimestamp = null;\r\n          this.windowTransitionTimer = null;\r\n        })\r\n    }, 750);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/inputs-management/visual-inputs-container/visual-inputs-container.component.ts","module.exports = \"<div *ngIf=\\\"isNextEventCountdownVisible\\\" class=\\\"countdown-notification\\\" [ngClass]=\\\"{liveNotification: isNextEventLive()}\\\">\\r\\n  <div *ngIf=\\\"isNextEventLive()\\\" class=\\\"live-box\\\"><div class=\\\"live-text\\\">LIVE</div></div>\\r\\n  <span class=\\\"countdown-text\\\">{{ countdownTimeDuration | duration }}</span>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.html\n// module id = ../../../../../src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.html\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".countdown-notification {\\n  width: 196px;\\n  height: 48px;\\n  line-height: 48px;\\n  background-color: rgba(153, 153, 153, 0.2);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #cccccc;\\n  text-align: right; }\\n  .countdown-notification .countdown-text {\\n    margin-right: 15px; }\\n\\n.liveNotification {\\n  width: 220px; }\\n\\n.live-box {\\n  width: 40px;\\n  height: 20px;\\n  margin-top: 13px;\\n  margin-left: 92px;\\n  padding-right: 2px;\\n  float: left;\\n  border-radius: 4px;\\n  background-color: #ffffff;\\n  opacity: 0.5; }\\n\\n.live-text {\\n  font-family: Lato;\\n  font-size: 13px;\\n  font-weight: bold;\\n  color: #000000;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-align: center;\\n      align-items: center;\\n  height: 100%;\\n  margin-left: 7px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.scss\n// module id = ../../../../../src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.scss\n// module chunks = 0","import { Component, OnInit } from \"@angular/core\";\r\nimport { SchedulingService } from \"../../services/scheduling.service\";\r\nimport * as moment from 'moment';\r\nimport Duration = moment.Duration;\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {ipcWrapper} from \"../../../../utils/ipcWrapper\";\r\nimport {AppStateService} from \"../../../../shared/services/infra/app-state.service\";\r\nimport {TranslateService} from \"ng2-translate\";\r\n\r\n\r\n@Component({\r\n  selector: 'recording-notifications',\r\n  templateUrl: './recording-notifications.component.html',\r\n  styleUrls:  ['./recording-notifications.component.scss']\r\n})\r\nexport class RecordingNotificationsComponent implements OnInit{\r\n\r\n  private countdownSubscription$: Subscription;\r\n  private countdownTimeDuration: number;\r\n  private isNextEventCountdownVisible: boolean = false;\r\n  private _currentIcon: string = null;\r\n\r\n  // const\r\n  private static readonly COUNT_DOWN_DISAPPEAR_BEFORE_EVENT_START_SEC = 5;\r\n\r\n  private readonly ICON_NAMES =\r\n    {\r\n      RECORDING: 'recording',\r\n      SCHEDULED_EVENT: 'scheduled-event',\r\n      DEFAULT: 'default'\r\n    };\r\n\r\n  constructor(private schedulingService: SchedulingService, private appState: AppStateService, private translate: TranslateService) {}\r\n\r\n  ngOnInit(){\r\n    this.countdownSubscription$ = Observable.timer(0, 1000)\r\n      .subscribe(()=>{\r\n        this.isNextEventCountdownVisible = this.schedulingService.shouldDisplayNextEventNotifications(RecordingNotificationsComponent.COUNT_DOWN_DISAPPEAR_BEFORE_EVENT_START_SEC);\r\n        this.showCountDownAndNotification();\r\n        this.changeCurrentIcon();\r\n      });\r\n  }\r\n\r\n  get nextEvent(){\r\n    return this.schedulingService.getNextEvent();\r\n  }\r\n\r\n  private showCountDownAndNotification(){\r\n    if (this.isNextEventCountdownVisible) {\r\n      let now = moment().valueOf();\r\n      this.countdownTimeDuration = this.schedulingService.getNextEventRealStartTime()*1000 - now;\r\n    }\r\n    else {\r\n      this.countdownTimeDuration = null;\r\n    }\r\n  }\r\n\r\n  private changeCurrentIcon(){\r\n    if (this.appState.isAppRecording() && this.appState.recordingPhase === 'recording'){\r\n      this.currentIcon = this.ICON_NAMES.RECORDING;\r\n    }\r\n    else if (this.isNextEventCountdownVisible){\r\n      this.currentIcon = this.ICON_NAMES.SCHEDULED_EVENT;\r\n    }\r\n    else {\r\n      this.currentIcon = this.ICON_NAMES.DEFAULT;\r\n    }\r\n  }\r\n\r\n  get currentIcon(): string {\r\n    return this._currentIcon;\r\n  }\r\n\r\n  set currentIcon(newCurrentIconValue: string) {\r\n    if (this._currentIcon !== newCurrentIconValue){\r\n      this._currentIcon = newCurrentIconValue;\r\n      this.translate.get(\"NOTIFICATIONS.\" + this._currentIcon).subscribe((localeText: string) => {\r\n        ipcWrapper.sendSystemCommand('changeTaskBarIcon', this._currentIcon, localeText);\r\n      });\r\n    }\r\n  }\r\n\r\n  isNextEventLive() {\r\n    let event = this.schedulingService.getNextEvent();\r\n    return event && event.primaryRtmp;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/components/recording-notifications/recording-notifications.component.ts","import {Injectable} from \"@angular/core\";\r\nimport {Router, NavigationEnd} from '@angular/router';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppStateService} from \"../../../shared/services/infra/app-state.service\";\r\nimport {AppPersistentDataService} from \"../../../shared/services/infra/app-persistent-data.service\";\r\nimport {AppLoggerService} from \"../../../shared/services/infra/app-logger.service\";\r\nimport {RecordingDetailsService} from \"../../../shared/services/recording/recording-details.service\";\r\nimport {Observable, BehaviorSubject} from \"rxjs\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {DevicePreviewService} from \"../../../shared/services/capture-device/device-preview.service\";\r\nimport * as _ from \"lodash\";\r\nimport {AppNotificationsService} from \"../../../shared/services/infra/app-notifications.service\";\r\nimport {SchedulingService} from \"./scheduling.service\";\r\nimport {DeviceConnectionService} from \"../../../shared/services/capture-device/device-connection.service\";\r\nimport {SystemHealthService} from \"../../../shared/services/infra/system-health.service\";\r\nimport {AppConfigService} from \"../../../shared/services/infra/app-config.service\";\r\nimport {DeviceResourcesService} from \"../../../shared/services/capture-device/device-resources.service\";\r\nimport {MinimizeService} from \"../../../utils/minimize.service\";\r\nimport {SlideService} from \"../../../shared/services/recording/slides.service\";\r\nimport {AppMonitoringAgentErrorDataService, MONITOR_ERROR_TYPE, MONITORED_SOURCE_TYPE} from \"../../../shared/services/monitoring/app-monitoring-agent-error-data.service\";\r\nimport {VideoDeviceSettingsService} from \"../../../shared/services/capture-device/video-device-settings.service\";\r\nimport {RecordingRecoveryService} from \"../../../shared/services/recording/recording-recovery.service\";\r\nimport {AudioDeviceSettingsService} from \"../../../shared/services/capture-device/audio-device-settings.service\";\r\nimport {VideoDeviceService} from \"../../../shared/services/capture-device/video-device.service\";\r\nimport {MouseClickIndicationService} from \"../../../shared/services/recording/mouse-click-indication.service\";\r\nimport {engineFileObject, RecordingUtilsService} from \"../../../shared/services/recording/recording-utils.service\";\r\nimport {LiveManagerService} from \"../../../shared/services/live/live-manager.service\";\r\n\r\n\r\ndeclare var electron: any;\r\n\r\n\r\n@Injectable()\r\nexport class RecordingManagerService {\r\n\r\n  /**\r\n   * recording timer properties\r\n   */\r\n  private recordingTimerSub = null;\r\n  private recordingTimer = null;\r\n  private recordingTotalDuration : number = 0;\r\n  private recordingCurrentSessionDuration : number= 0;\r\n  /**\r\n   * triggered when need to focus on application's recording main page (used as indication for closing panels etc...)\r\n   */\r\n  private focusOnRecording = new BehaviorSubject('');\r\n  public focusOnRecording$ = this.focusOnRecording.asObservable();\r\n  /**\r\n   * scheduled event notifications subscriptions\r\n   */\r\n  private scheduledEventUpdateNotification = null;\r\n  /**\r\n   * indicates if should enable current scheduled event extension\r\n   */\r\n  public shouldEnableEventExtension = false;\r\n  /**\r\n   * device connection state notification subscription\r\n   */\r\n  private deviceConnectionStateNotification = null;\r\n  /**\r\n   * indicates if an action is still in progress\r\n   * @type {boolean}\r\n   */\r\n  actionInProgress = false;\r\n  /**\r\n   * indicates if recording request is loading (engine can delay response util video samples starts arriving)\r\n   * @type {boolean}\r\n   */\r\n  recordingIsLoading = false;\r\n  // config obj\r\n  private recordingConfigObj = {};\r\n  //skip scheduled event no resources log - make sure to log only once each event if needed\r\n  private skipScheduledEventStartLog = false;\r\n\r\n\r\n\r\n  /**\r\n   * init recording timer\r\n   */\r\n  constructor(private appState: AppStateService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private log: AppLoggerService,\r\n              private recordingDetailsService: RecordingDetailsService,\r\n              private devicePreviewService: DevicePreviewService,\r\n              private recoveryService: RecordingRecoveryService,\r\n              private notificationService: AppNotificationsService,\r\n              private schedulingService: SchedulingService,\r\n              private deviceManagerService: DeviceConnectionService,\r\n              private router: Router,\r\n              private appConfig: AppConfigService,\r\n              private systemHealthService: SystemHealthService,\r\n              private captureResourcesService: DeviceResourcesService,\r\n              private minimizeService: MinimizeService,\r\n              private slidesService: SlideService,\r\n              private appMonitoringAgentData: AppMonitoringAgentErrorDataService,\r\n              private videoDeviceService: VideoDeviceService,\r\n              private videoDeviceSettingsService: VideoDeviceSettingsService,\r\n              private audioSettingsService: AudioDeviceSettingsService,\r\n              private mouseClickIndicationService: MouseClickIndicationService,\r\n              private recordingUtilsService: RecordingUtilsService,\r\n              private liveManagerService: LiveManagerService\r\n  )\r\n  {\r\n    this.recordingTimer = Observable.timer(100,1000);\r\n    this.getRecordingConfigSetting()\r\n    this.registerSystemHealthNotification();\r\n    // init the rest\r\n    this.initialClassroomCaptureLoading();\r\n  }\r\n\r\n  private getRecordingConfigSetting()\r\n  {\r\n    // init default values\r\n    this.recordingConfigObj['minimizeWhenRecordingStarts'] = false;\r\n    this.recordingConfigObj['adHockCountdownBeforeStart'] = true;\r\n    this.recordingConfigObj['scheduledCountdownBeforeStart'] = true;\r\n    this.recordingConfigObj['minimizeRecordingDelaySec'] = 10;\r\n\r\n    let recordingConfigObj = this.appConfig.getConfigData('config.captureApp.recording');\r\n    // minimizeWhenRecordingStarts\r\n    if (!_.isBoolean(recordingConfigObj['minimizeWhenRecordingStarts'])){\r\n      recordingConfigObj['minimizeWhenRecordingStarts'] = false;\r\n      this.log.info('RecordingManagerService: Validate Config settings - minimizeWhenRecordingStarts should be a true/false (default: false)');\r\n    }\r\n\r\n    // minimizeRecordingDelaySec\r\n    if (recordingConfigObj['minimizeWhenRecordingStarts']){\r\n      if (!_.isNumber(recordingConfigObj['minimizeRecordingDelaySec'])){\r\n        recordingConfigObj['minimizeRecordingDelaySec'] = 10;\r\n        this.log.info('RecordingManagerService: Validate Config settings - minimizeRecordingDelaySec must be a number between 1 - 60 (default: 10 seconds).');\r\n      }\r\n      else if (recordingConfigObj['minimizeRecordingDelaySec'] < 1){\r\n        recordingConfigObj['minimizeRecordingDelaySec'] = 1;\r\n        this.log.info('RecordingManagerService: Validate Config settings - minimizeRecordingDelaySec is not a valid value - must be more than 1 sec (value set to: 1 seconds).');\r\n      }\r\n      else if (recordingConfigObj['minimizeRecordingDelaySec'] > 60){\r\n        recordingConfigObj['minimizeRecordingDelaySec'] = 60;\r\n        this.log.info('RecordingManagerService: Validate Config settings - minimizeRecordingDelaySec is not a valid value - must be less than 60 sec (value set to: 60 seconds).');\r\n      }\r\n    }\r\n\r\n    // adHockCountdownBeforeStart\r\n    if (!_.isBoolean(recordingConfigObj['adHockCountdownBeforeStart'])){\r\n      recordingConfigObj['adHockCountdownBeforeStart'] = true;\r\n      this.log.info('RecordingManagerService: Validate Config settings - adHockCountdownBeforeStart should be a true/false (default: true)');\r\n    }\r\n\r\n    // scheduledCountdownBeforeStart\r\n    if (!_.isBoolean(recordingConfigObj['scheduledCountdownBeforeStart'])){\r\n      recordingConfigObj['scheduledCountdownBeforeStart'] = true;\r\n      this.log.info('RecordingManagerService: Validate Config settings - scheduledCountdownBeforeStart should be a true/false (default: true)');\r\n    }\r\n    this.recordingConfigObj = recordingConfigObj;\r\n  }\r\n\r\n  private registerSystemHealthNotification()\r\n  {\r\n    this.systemHealthService.systemNotHealthy$.subscribe(isSysNotHealthy => {\r\n      if (isSysNotHealthy){\r\n        this.log.info('Recording Manager: Not enough diskspace was detected during recording, pausing recording.');\r\n        this.callRecordingNextAction('pause')\r\n          .catch(()=>{\r\n            this.log.error('systemNotHealthy subscription: Failed to pause ');\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * loads initial classroom capture state and configuration\r\n   * checks if app should be loaded in recovery mode (exited in the middle of a recording session)\r\n   */\r\n  private initialClassroomCaptureLoading(reload = false) {\r\n    this.log.info('initialClassroomCaptureLoading(' + reload + ')');\r\n    //settings initial state to - loading (if app is not in recovery mode the state will be changed to - stable, else - will change to in_process)\r\n    this.updateRecState(this.appState.REC_STATE.LOADING);\r\n    return this.appState.areSessionsReadyForRecording('initRecordingService')\r\n      .then(() => {\r\n        return this.recordingDetailsService.isReady;\r\n      })\r\n      .then(() => {\r\n        return this.initRecordingSession();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load previous recording details. ' + utils.stringifyMsg(err));\r\n        this.notificationService.sendNotification('NOTIFICATIONS.error_loadPrevRecDetails', 'warn');\r\n        this.actionInProgress = false;\r\n        this.updateRecState(this.appState.REC_STATE.STABLE);\r\n      })\r\n      //acts as finally block\r\n      .then(() => {\r\n        if(!reload) {\r\n          this.setMainProcessListeners();\r\n          this.addDeviceConnectionStateListeners();\r\n        }\r\n        let schedulingConfig = this.appConfig.getConfigData('config.captureApp.scheduling');\r\n        if(schedulingConfig && schedulingConfig['enabled']) {\r\n          this.startSchedulingManagement();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * listens for start/pause/resume/cancel events from thumbnail view in main process\r\n   */\r\n  private setMainProcessListeners()\r\n  {\r\n    //listening to main process actions (thumbnail view in system tray)\r\n    electron.ipcRenderer.on('startRecording' , (event , data)=>{\r\n      this.log.info('starting recording...');\r\n      this.callRecordingNextAction('start');\r\n    });\r\n\r\n    electron.ipcRenderer.on('stopRecording' , (event , data)=>{\r\n      this.log.info('stopping recording...');\r\n      this.callRecordingNextAction('stop');\r\n    });\r\n\r\n  }\r\n\r\n  private initRecordingSession()\r\n  {\r\n    return this.recoveryService.shouldRecoverRecordingSession()\r\n      .then((recData) => {\r\n        if(_.isEmpty(recData)) {\r\n          //app is not in recovery mode - start normally\r\n          this.updateRecState(this.appState.REC_STATE.STABLE);\r\n          this.log.info('Starting Classroom Capture in regular mode');\r\n        } else {\r\n          //setting recording state to 'in_process' and starting app in recovery mode\r\n          this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n          return this.tryToRecoverRecordingSession(recData);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return this.failedRecoveryFlow(err);\r\n      });\r\n  }\r\n\r\n  private tryToRecoverRecordingSession(recData)\r\n  {\r\n    this.log.debug('tryToRecoverRecordingSession');\r\n    this.actionInProgress = true;\r\n    //todo add timeout and start app....\r\n    //wait for relevant sessions to be ready\r\n    return this.recoveryService.getRecoverySessionsReadyPromise()\r\n      .then((ready) => {\r\n        if(ready) {\r\n          this.log.debug('recovery sessions are ready for recover recording.');\r\n          return this.recoveryService.canRecoverRecordingSession()\r\n            .then((canRecover) => {\r\n              if(canRecover) {\r\n                this.log.debug('application can start in recovery mode.');\r\n                return this.startInRecoveryMode(recData);\r\n              }else {\r\n                this.log.debug('handling failed recovery flow.');\r\n                return this.handleRecoveryFlowErrorFlow(recData);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              this.log.error('Failed to recover recording: ' + utils.stringifyMsg(err));\r\n              return this.failedRecoveryFlow(err);\r\n            });\r\n        } else {\r\n          this.log.debug('application recovery mode return with a non-ready state, closing current recording.');\r\n          this.schedulingService.resetCurrentEvent();\r\n          return this.closeFailedRecoveredSession();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * handling error in devices recovery flow, different outcome for disconnected device or a failed initiation\r\n   */\r\n  private handleRecoveryFlowErrorFlow(recData)\r\n  {\r\n    this.log.debug('handleRecoveryFlowErrorFlow');\r\n    if(this.isRecordDisconnected()) {\r\n      this.log.debug('recovery flow failed due to a disconnected device.');\r\n      this.notificationService.sendNotification(\"NOTIFICATIONS.warn_appLoadedAfterDisconnection\", 'warn');\r\n      return this.startInRecoveryMode(recData);\r\n    } else {\r\n      this.log.debug('recovery flow failed due to a recovery failure.');\r\n      this.schedulingService.resetCurrentEvent();\r\n      return this.closeFailedRecoveredSession();\r\n    }\r\n  }\r\n\r\n  private startInRecoveryMode(recData)\r\n  {\r\n    this.actionInProgress = false;\r\n    this.callRecordingNextAction('pause', true);\r\n    this.setPrevRecordingTime(recData['recordingTime']);\r\n    return Promise.resolve(true);\r\n  }\r\n\r\n  private closeFailedRecoveredSession()\r\n  {\r\n    this.log.info('closeFailedRecoveredSession');\r\n    return this.tryToRecoverAndCloseRecording()\r\n      .then(() => {\r\n        this.notificationService.sendNotification(\"NOTIFICATIONS.error_restore\", 'warn');\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.RECOVER_RECORDING, 'NOTIFICATIONS.error_restore');\r\n        return Promise.resolve(false);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to close previous recording session. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private failedRecoveryFlow(err)\r\n  {\r\n    this.log.error('Failed to load in recovery mode. ' + utils.stringifyMsg(err));\r\n    this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.RECOVER_RECORDING, 'NOTIFICATIONS.error_loadPrevRec');\r\n    this.notificationService.sendNotification('NOTIFICATIONS.error_loadPrevRec', 'error');\r\n    this.schedulingService.resetCurrentEvent();\r\n    return this.resetRecording();\r\n  }\r\n\r\n  private finalizeRecordingFileOffCycle(files)\r\n  {\r\n    return this.recordingUtilsService.finalizeRecordingFileOffCycle(files);\r\n  }\r\n\r\n  private navigateToRecordingPage()\r\n  {\r\n    return new Promise((resolve, reject) => {\r\n      if(this.router.url !== '/' && this.router.url !== '/home') {\r\n        this.log.info('Navigating back to recording page before starting scheduled recording');\r\n        this.router.navigate(['']);\r\n        let routeSub = this.router.events.subscribe((event) => {\r\n          if (event instanceof NavigationEnd) {\r\n            routeSub.unsubscribe();\r\n            resolve(true);\r\n          }\r\n        });\r\n      } else {\r\n        resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setScheduledEventRecordingDetails(metadata, reset = true)\r\n  {\r\n    if(_.isObject(metadata)) {\r\n      this.log.debug('Updating recording details for current scheduled event. ' + utils.stringifyMsg(metadata));\r\n      this.recordingDetailsService.setRecordingDetails(\r\n        {\r\n          'title' : metadata['summary'],\r\n          'description' : metadata['description'],\r\n          'userName' : metadata['organizer'],\r\n          'tags' : metadata['tags'] ? metadata['tags'].split(',') : [],\r\n          'templateEntryId' : metadata['templateEntryId'],\r\n          'eventId': metadata['id'],\r\n          'liveStreamed': !!metadata[\"primaryRtmp\"]\r\n        }\r\n      , reset);\r\n      this.recordingDetailsService.setReadOnly(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finalizing current recording.\r\n   * pausing record id needed, closing files (using recoveryMP4 if needed), saving recording details to json\r\n   * and notifying the user.\r\n   * In case of a scheduled event that was manually stopped, making sure to notify scheduling service to handle\r\n   * end of scheduled event ahead of time\r\n   */\r\n  public finalizeCurrentRecording(manuallyTriggered)\r\n  {\r\n    this.log.info('RecordingManagerService: finalizeCurrentRecording(' + manuallyTriggered + ')');\r\n    if(this.appState.recordingPhase !== 'initial') {\r\n\r\n      this.log.info('Finalizing current recording.');\r\n      return this.callRecordingNextAction('pause') //will return a resolved promise if rec already paused\r\n        .then(() => {\r\n          this.liveManagerService.removeLiveConfig(); // will check if exist else will ignore\r\n          return this.closeFinishedRecording(manuallyTriggered);\r\n        })\r\n        .then(() => {\r\n          return this.recordingDetailsService.saveRecordingDetailsJson();\r\n        })\r\n        .then(([res, recJson]) => {\r\n          this.log.info('RecordingManagerService: Json file for current capture recording was saved in: ' + utils.stringifyMsg(res));\r\n          this.notificationService.sendNotification('NOTIFICATIONS.info_successfulRecording', 'info');\r\n          this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.ALL);\r\n          return this.resetRecording();\r\n        })\r\n        .catch((err) => {\r\n          return this.tryToRecoverAndCloseRecording()\r\n            .then(() => {\r\n              this.notificationService.sendNotification('NOTIFICATIONS.info_successfulRecording', 'info');\r\n            })\r\n            .catch(() => {\r\n              this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.STOP_RECORDING, 'NOTIFICATIONS.error_saveRecording');\r\n              this.log.error('RecordingManagerService: Failed to finalize current recording: ' + utils.stringifyMsg(err));\r\n            });\r\n        });\r\n\r\n    } else {\r\n      this.log.warn('RecordingManagerService: A request for closing a recording was ignored since application is not recording.');\r\n      return Promise.resolve('INITIAL_STATE');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * try to close recording using recover mp4 process,\r\n   * being used if a regular recording finalization process failed of if app recovery process failed.\r\n   */\r\n  private tryToRecoverAndCloseRecording()\r\n  {\r\n    this.log.info('RecordingManagerService: tryToRecoverAndCloseRecording()');\r\n    //close recording using off cycle api call\r\n    return this.appState.areSessionsReadyForRecording('tryToRecoverAndCloseRecording()')\r\n      .catch(() => {\r\n        //we want to close failed recovery event if not all sessions were created successully\r\n      })\r\n      .then(() => {\r\n        return this.appState.shutDownSessions(this.appState.SESSION_LOAD_WAIT_STATE.NEXT_TIME); //need to remove handles from recorded files in order to close them\r\n      })\r\n      .then(() => {\r\n        return this.persistencyService.get('recording');\r\n      })\r\n      .then((recData) => {\r\n        if(!_.isEmpty(recData) && !_.isEmpty(recData['details']) && !_.isEmpty(recData['details']['files'])) {\r\n          return this.finalizeRecordingFileOffCycle(recData['details']['files']);\r\n        } else {\r\n          return Promise.reject('Failed to finalize recording using recoverMP4 since there are no files in recording details');\r\n        }\r\n      })\r\n      .then(() => {\r\n        return this.recordingDetailsService.saveRecordingDetailsJson()\r\n      })\r\n      .then(() => {\r\n        this.log.info('Recording Json file for previous recording was saved.');\r\n        return this.resetRecording();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to recover and close recording session. ' + utils.stringifyMsg(err));\r\n        this.notificationService.sendNotification('NOTIFICATIONS.error_saveRecording', 'error');\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.RECOVER_RECORDING, 'NOTIFICATIONS.error_saveRecording');\r\n        return this.resetRecording();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * recording session actions\r\n   */\r\n\r\n  private startRecording()\r\n  {\r\n    this.log.info('startRecording()');\r\n    this.recordingIsLoading = true;\r\n    return this.appState.areSessionsReadyForRecording('startRecording()')\r\n      .then(() => {\r\n        return this.canStartOrResumeRecording();\r\n      })\r\n      .then(() => {\r\n        return this.captureResourcesService.getCaptureResources();\r\n      })\r\n      .then(() => {\r\n        // for testing only!!\r\n        let primaryRtmp = this.appConfig.getConfigData('config.captureApp.primaryRtmp');\r\n        let flavorArray = this.appConfig.getConfigData('config.captureApp.flavorArray') || [];\r\n        if (primaryRtmp)\r\n          return this.addLiveConfig({primaryRtmp: primaryRtmp, flavorArray: flavorArray, id: \"DW-hack-asdf\"});\r\n        else\r\n          return Promise.resolve();\r\n      })\r\n      .then(() => {\r\n        return this.doRecordingAction('buildRecord');\r\n      })\r\n      .then(()=> {\r\n        this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n\r\n        if (this.recordingConfigObj['minimizeWhenRecordingStarts'] === true) {\r\n          this.minimizeService.minimizeToTray(this.recordingConfigObj['minimizeRecordingDelaySec']);\r\n        }\r\n        return this.showCountdownBeforeStart();\r\n      }).then(() => {\r\n        return this.doRecordingAction('startRecord');\r\n      })\r\n      .then((files) => {\r\n        this.recordingIsLoading = false;\r\n        this.appState.recordingPhase = 'recording';\r\n        this.log.info('recording media files created: ' + utils.stringifyMsg(files));\r\n        this.recordingUtilsService.updateRecordingFiles(files);\r\n        this.recordingDetailsService.setDefaultRecDetails();\r\n        this.startRecordingTimer();\r\n        this.actionInProgress = false;\r\n        //clear start record error if exists\r\n        this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.ALL);\r\n        return files;\r\n      })\r\n      .catch((err) => {\r\n        this.minimizeService.cancelTrayMinimizationSubscription();\r\n        return this.handleStartRecordingFailure(err);\r\n      });\r\n  }\r\n\r\n  private showCountdownBeforeStart(){\r\n    let returnPromise;\r\n\r\n    if (this.isRecordingScheduledEvent() && this.recordingConfigObj['scheduledCountdownBeforeStart']){    //scheduling\r\n      returnPromise = this.openCountdown();\r\n    }\r\n    else if (!this.isRecordingScheduledEvent() && this.recordingConfigObj['adHockCountdownBeforeStart']){ //adhock\r\n      returnPromise = this.openCountdown();\r\n    }\r\n    else {\r\n      returnPromise = Promise.resolve();\r\n    }\r\n\r\n    // swallow error as we don't want to fail the recording when animation fails.\r\n    return returnPromise.catch((e)=>{\r\n      this.log.error('RecordingManagerService: Error while showing countdown animation: ' +  utils.stringifyMsg(e));\r\n    });\r\n  }\r\n\r\n  private openCountdown(){\r\n    return ipcWrapper.sendIPC('start-countdown', { time: this.appConfig.getConfigData('config.captureApp.recording.countdownTime'),\r\n      bounds: {x: window.screenX, y: window.screenY, width: window.screen.width , height: window.screen.height}\r\n    });\r\n  }\r\n\r\n  private handleStartRecordingFailure(err): any\r\n  {\r\n    if(_.isObject(err) && !_.isEmpty(err) && err['type'] === this.systemHealthService.SYS_HEALTH_ERROR && !_.isEmpty(err['message'])) {\r\n      this.log.error('RecordingManagerService: Failed to start recording due to system health. ' + utils.stringifyMsg(err));\r\n      this.updateRecState(this.appState.REC_STATE.STABLE);\r\n      return this.handleSysHealthRecordingFailure(err);\r\n    } else {\r\n      this.log.error('RecordingManagerService: Error while starting new recording.' +  utils.stringifyMsg(err));\r\n      this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.START_RECORDING, 'NOTIFICATIONS.error_startRecording');\r\n      return this.resetRecording()\r\n        .catch(() => {})\r\n        .then(() => {\r\n          return Promise.reject(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  private stopRecording()\r\n  {\r\n    return this.callRecordingNextAction('pause')\r\n      .then((res) => {\r\n        return this.devicePreviewService.stopPreviewAll();\r\n      })\r\n      .catch((err) => {\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.STOP_RECORDING, 'NOTIFICATIONS.error_stopRecording');\r\n        //no need to reload sessions and recording state in case of failure since it is being handled by the pause actions\r\n        this.log.error(utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private pauseRecording() :any\r\n  {\r\n    return this.doRecordingAction('pauseRecord')\r\n      .then((res) => {\r\n        this.appState.recordingPhase = 'paused';\r\n        this.pauseRecordingTimer();\r\n        this.log.info('Paused recording. ' + utils.stringifyMsg(res));\r\n        this.actionInProgress = false;\r\n        this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.ALL);\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to pause recording. ' + utils.stringifyMsg(err));\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.PAUSE_RECORDING, 'NOTIFICATIONS.error_pauseRecording');\r\n        this.actionInProgress = false;\r\n        //reloading sessions and recording state\r\n        return this.shutDownAndReInitSessions()\r\n          .catch(() => {})\r\n          .then(() => {\r\n            return Promise.reject(err);\r\n          });\r\n      });\r\n  }\r\n\r\n  private resumeRecording()\r\n  {\r\n    this.log.info('resumeRecording()');\r\n    this.recordingIsLoading = true;\r\n    return this.appState.areSessionsReadyForRecording('resumeRecording()')\r\n      .then(() => {\r\n        return this.canStartOrResumeRecording();\r\n      })\r\n      .then(() => {\r\n        this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n        return this.doRecordingAction('startRecord');\r\n      })\r\n      .then((res) => {\r\n        this.recordingIsLoading = false;\r\n        this.appState.recordingPhase = 'recording';\r\n        this.startRecordingTimer();\r\n        this.log.info('Resume recording. ' + utils.stringifyMsg(res));\r\n        this.actionInProgress = false;\r\n        if (this.recordingConfigObj['minimizeWhenRecordingStarts'] === true){\r\n          this.minimizeService.minimizeToTray(this.recordingConfigObj['minimizeRecordingDelaySec']);\r\n        }\r\n        this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.ALL);\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        return this.handleResumeRecordingFailure(err);\r\n      });\r\n  }\r\n\r\n  private handleResumeRecordingFailure(err): any\r\n  {\r\n    if(_.isObject(err) && !_.isEmpty(err) && err['type'] === this.systemHealthService.SYS_HEALTH_ERROR && !_.isEmpty(err['message'])) {\r\n      this.log.error('RecordingManagerService: Failed to resume recording due to system health. ' + utils.stringifyMsg(err));\r\n      return this.handleSysHealthRecordingFailure(err);\r\n    } else {\r\n      this.log.error('RecordingManagerService: Error while resuming recording. ' +  utils.stringifyMsg(err));\r\n      this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.RESUME_RECORDING, 'NOTIFICATIONS.error_resumeRecording');\r\n      //reloading sessions and recording state\r\n      this.recordingIsLoading = false;\r\n      return this.shutDownAndReInitSessions()\r\n        .catch(() => {})\r\n        .then(() => {\r\n          return Promise.reject(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  private cancelRecording()\r\n  {\r\n    return this.appState.areSessionsReadyForRecording('cancelRecording()')\r\n      .then(() =>{\r\n        this.liveManagerService.removeLiveConfig(); // will check if exist else will ignore\r\n        return this.closeCanceledRecording()\r\n      })\r\n      .then(([filesToDelete]) => {\r\n        this.recordingUtilsService.removeRecordedFiles(filesToDelete); //the outcome is written to log in case of failure\r\n        this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.ALL);\r\n        return Promise.resolve();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to cancel recording. ' + utils.stringifyMsg(err));\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.RECORDING_ERROR, MONITORED_SOURCE_TYPE.CANCEL_RECORDING, 'NOTIFICATIONS.error_cancel');\r\n        return this.resetRecording()\r\n          .catch(() => {})\r\n          .then(() => {\r\n            return Promise.reject(err);\r\n          });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * on successful execution will return a list of files for deletion in the first index of the returned array\r\n   * (the second index will returned empty)\r\n   */\r\n  private closeCanceledRecording()\r\n  {\r\n    this.log.info('closeCanceledRecording');\r\n    let filesToDelete = null;\r\n    return this.doRecordingAction('cancelRecord')\r\n      .then((filesObj: engineFileObject[]) => {\r\n        //if current event exists, cancel of a scheduled event was triggered by the user (need to handle it)\r\n        if(!_.isEmpty(this.schedulingService.getCurrentEvent())) {\r\n          this.schedulingService.closeEventBeforeEndTime();\r\n        }\r\n        return this.recordingUtilsService.getRecordingFilesForDeletion(filesObj);\r\n      })\r\n      .then((filesForDeletion) => {\r\n        return Promise.all([Promise.resolve(filesForDeletion), this.resetRecording()]);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to close recording. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private closeFinishedRecording(closeEvent)\r\n  {\r\n    this.log.info('closeFinishedRecording(' + closeEvent + ')');\r\n    return this.getFinishedRecordingClosePromise()\r\n      .then(() => {\r\n        //if current event exists, stop of a scheduled event was triggered by the user (need to handle it)\r\n        if(!_.isEmpty(this.schedulingService.getCurrentEvent()) && closeEvent) {\r\n          this.schedulingService.closeEventBeforeEndTime();\r\n        }\r\n        this.updateRecState(this.appState.REC_STATE.STABLE);\r\n        return Promise.resolve();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to stop recording. checking if need to close current scheduled event (' + closeEvent + ')');\r\n        if(!_.isEmpty(this.schedulingService.getCurrentEvent()) && closeEvent) {\r\n          this.schedulingService.closeEventBeforeEndTime();\r\n        }\r\n        return this.shutDownAndReInitSessions()\r\n          .catch(() => {})\r\n          .then(() => {\r\n            return Promise.reject(err);\r\n          });\r\n      });\r\n  }\r\n\r\n  //returns the relevant close record promise - 'stopRecord' or 'recoverMp4' when disconnected\r\n  private getFinishedRecordingClosePromise(): any\r\n  {\r\n    if(!this.isRecordDisconnected()) {\r\n      this.log.info('stopping finished recording - stopRecord');\r\n      return this.doRecordingAction('stopRecord');\r\n    } else {\r\n      if(!_.isEmpty(this.recordingDetailsService.getRecordingDetails()['files'])) {\r\n        this.log.info('stopping finished recording - finalizeRecordingFileOffCycle');\r\n        return this.appState.shutDownSessions(this.appState.SESSION_LOAD_WAIT_STATE.NEXT_TIME)\r\n          .then(() => {\r\n            this.mouseClickIndicationService.stopMouseClickIndication();\r\n            return this.finalizeRecordingFileOffCycle(this.recordingDetailsService.getRecordingDetails()['files']);\r\n          })\r\n      } else {\r\n        this.log.error('Filed to stop finished recording in disconnection state. recording details files property is empty');\r\n        return Promise.reject('Filed to stop finished recording in disconnection state.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check if it is possible to start or resume recording\r\n   * promise will be rejected if sys health failed and recording can't start / resume\r\n   */\r\n  private canStartOrResumeRecording(): any\r\n  {\r\n    return this.systemHealthService.checkSystemHealth(false) //promise will never be rejected\r\n      .then((sysHealth) => {\r\n        if(_.isObject(sysHealth) && !_.isEmpty(sysHealth) &&\r\n          sysHealth['status'] === this.systemHealthService.HEALTH_STATUS.ERROR) {\r\n          return Promise.reject(sysHealth);\r\n        } else {\r\n          return Promise.resolve(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  private handleSysHealthRecordingFailure(err)\r\n  {\r\n    this.notificationService.sendNotification(err.message, 'error');\r\n    this.recordingIsLoading = false;\r\n    this.actionInProgress = false;\r\n    return false; //not rejecting the call to avoid misleading error messages\r\n  }\r\n\r\n  /**\r\n   * Executes recording actions\r\n   * @param action\r\n   * @return {Promise<TResult>}\r\n   */\r\n  private doRecordingAction(action: String)\r\n  {\r\n    let relatedSessions;\r\n\r\n    return this.appState.areSessionsReadyForRecording(action)\r\n      .then(() => {\r\n        relatedSessions = this.appState.getActiveRecordableSessionsIds();\r\n\r\n        let argsPromisesArr = [];\r\n        _.each(relatedSessions, (sessionId)=> {\r\n          argsPromisesArr.push(this.getSessionActionArgs(action, sessionId));\r\n        });\r\n\r\n        return Promise.all(argsPromisesArr);\r\n      })\r\n      .then((recordingActionArgs)=>{\r\n        let preparationPromise = Promise.resolve([]);\r\n        switch(action){\r\n          case 'startRecord':\r\n            preparationPromise = Promise.all([\r\n              this.slidesService.shouldCaptureSlides(),\r\n              this.mouseClickIndicationService.startMouseClickIndication()]);\r\n            break;\r\n          case 'cancelRecord':\r\n            //when canceling recording, make sure to send inactive sessions as well\r\n            relatedSessions = relatedSessions.concat(this.appState.getInActiveRecordableSessionsIds());\r\n          case 'stopRecord':\r\n            this.stopRecordingTimer();\r\n            preparationPromise = this.mouseClickIndicationService.stopMouseClickIndication();\r\n            break;\r\n          case 'pauseRecord':\r\n            this.pauseRecordingTimer();\r\n            preparationPromise = this.mouseClickIndicationService.stopMouseClickIndication();\r\n            break;\r\n        }\r\n        return preparationPromise.then(() => {\r\n          return recordingActionArgs\r\n        });\r\n      })\r\n      .then(recordingActionArgs => {\r\n        this.appState.onCallStarted(action, JSON.stringify(relatedSessions));\r\n        return ipcWrapper.sendIPC(action+'Some', relatedSessions, ...recordingActionArgs)\r\n      })\r\n      .then((res) => {\r\n        this.appState.onCallEnded(action + ' - SUCCESS', JSON.stringify(relatedSessions));\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded(action + ' - FAILURE', JSON.stringify(relatedSessions));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private resetRecording()\r\n  {\r\n    this.log.info('resetRecording()');\r\n    this.recordingIsLoading = false;\r\n    this.appState.recordingPhase = 'initial';\r\n    this.updateRecState(this.appState.REC_STATE.STABLE);\r\n    return this.recordingDetailsService.resetRecordingDetails()\r\n      .catch((err) => {\r\n        this.log.error('Failed to reset recording details.' + utils.stringifyMsg(err));\r\n      })\r\n      .then(() => {\r\n        this.stopRecordingTimer();\r\n        return this.shutDownAndReInitSessions();\r\n      });\r\n  }\r\n\r\n  private shutDownSessions() {\r\n    this.log.info('shutDownSessions()');\r\n    return this.appState.areSessionsReadyForRecording('shutDownAndReInitSessions()')\r\n      .catch(() => {\r\n        //shut down sessions any way...\r\n      })\r\n      .then(() => {\r\n        //check if need to free app resources after recording is done\r\n        //(there is another check in device preview service in order to know if to start device preview)\r\n        return this.captureResourcesService.freeCaptureResources();\r\n      })\r\n      .then(() => {\r\n        return this.devicePreviewService.unregisterFromAudioNotification();\r\n      })\r\n      .then(() => {\r\n        this.recoveryService.resetRecoverySessions();\r\n        return this.appState.shutDownSessions(this.appState.SESSION_LOAD_WAIT_STATE.NEXT_TIME)\r\n      });\r\n  }\r\n\r\n  private shutDownAndReInitSessions()\r\n  {\r\n    this.log.info('shutDownAndReInitSessions()');\r\n    return this.shutDownSessions()\r\n      .then(() => {\r\n        return this.videoDeviceSettingsService.clearSessions();\r\n      })\r\n      .then(() => {\r\n        this.actionInProgress = false;\r\n        this.appState.sendInitNotification();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('failed to shut down active sessions. ' + utils.stringifyMsg(err));\r\n        this.actionInProgress = false;\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private updateRecState(state)\r\n  {\r\n    return this.recordingUtilsService.updateRecState(state);\r\n  }\r\n\r\n  private addDeviceConnectionStateListeners()\r\n  {\r\n    this.deviceConnectionStateNotification =\r\n      this.deviceManagerService.deviceConnectionState$.subscribe(\r\n        event => {\r\n          this.log.info('RecordingManagerService: on device connection state change: ' + utils.stringifyMsg(event));\r\n          if(!_.isEmpty(event) && event['inUse']){\r\n            this.log.info('RecordingManagerService: handling inUse device connection state change');\r\n            this.appState.areSessionsReadyForRecording('on-device-status-change')\r\n              .catch(() => {\r\n                //we want to listen to on-device-status-change notification all the time\r\n              })\r\n              .then(() => {\r\n                this.log.info('RecordingManagerService: handling on-device-status-change notification for in-use device. ' + utils.stringifyMsg(event));\r\n                //display power change\r\n                if((event['state'] !== 'disconnected' && event['state'] !== 'connected') && (event['deviceId'].toLowerCase().includes('display') || event['deviceId'].toLowerCase().includes('screen'))) {\r\n                  this.handleDisplayPowerChange(event);\r\n                } else { //device connection state change\r\n                  this.handleDeviceConnectionStateChange(event);\r\n                }\r\n              });\r\n          } else if (!_.isEmpty(event) && !event['inUse']) {\r\n            this.log.info('RecordingManagerService: handling not inUse device connection state change');\r\n            this.handleNotUsedDeviceConnectionChange(event);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  private handleDisplayPowerChange(event) {\r\n    this.log.info('display power change event.' + utils.stringifyMsg(event));\r\n    //sleep mode / alt+ctl+del\r\n    let mustRelaunch = this.recordingConfigObj['requiresRestartAfterSleep'] && event['event'] === 'sleep'\r\n    if ( event['state'] === 'true' )  {\r\n      return Promise.resolve()\r\n        .then(() => {\r\n          if (this.appState.isAppRecording() && this.appState.recordingPhase !== 'paused') {\r\n            return this.callRecordingNextAction('pause')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.log.error('Failed to pause recording before entering to sleep mode / log out screen');\r\n        })\r\n        .then(() => {\r\n          //no more handling related to disconnected device\r\n          this.appState.setConnectionStateChangeLock('recordingService: handleDisplayPowerChange', false);\r\n          if (mustRelaunch) {\r\n            this.log.info('handleDisplayPowerChange stop all engine activity on entering sleep');\r\n            return this.shutDownSessions()\r\n          }\r\n        })\r\n    } else { //resume mode\r\n      if (mustRelaunch) {\r\n        this.log.info('handleDisplayPowerChange send relunch request due to wake from sleep');\r\n        return ipcWrapper.sendIPC('relaunch');\r\n      } else {\r\n        return this.callRecordingNextAction('pause')\r\n          .catch((err) => {\r\n            this.log.warn('Failed to pause recovered recording after display power change. re-init app.' + utils.stringifyMsg(err));\r\n          })\r\n          .then(() =>{ //act as finally block\r\n            this.reInitAfterConnectionChange();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleDeviceConnectionStateChange(event)\r\n  {\r\n    this.log.debug('deviceConnectionState - change: ' + utils.stringifyMsg(event));\r\n    //if app is not in recording state\r\n    if(!this.appState.isAppRecording()) {\r\n      this.log.debug('deviceConnectionState - app is not recording at the moment, shutting down and re-init sessions');\r\n      this.shutDownAndReInitSessions();\r\n    } else {\r\n      this.log.debug('deviceConnectionState - app is in recording at the moment, pause, shut down and re-init sessions');\r\n      this.deviceConnectionChangeDuringRecording();\r\n    }\r\n  }\r\n\r\n  private deviceConnectionChangeDuringRecording()\r\n  {\r\n    this.callRecordingNextAction('pause')\r\n      .catch((err) => {\r\n        this.log.error('Failed to pause recording after device disconnection: ' + utils.stringifyMsg(err));\r\n      })\r\n      .then(() => {\r\n        return this.reInitAfterConnectionChange();\r\n      });\r\n  }\r\n\r\n  private handleNotUsedDeviceConnectionChange(event)\r\n  {\r\n    //if we are not recording and a not in use device was reconnected refresh app to load the new device\r\n    if(!this.appState.isAppRecording() && event['state'] === 'connected') {\r\n      this.shutDownAndReInitSessions();\r\n    } else {\r\n      //no more handling related to disconnected device\r\n      this.appState.setConnectionStateChangeLock('recordingService: handleNotUsedDeviceConnectionChange', false);\r\n    }\r\n  }\r\n\r\n  private reInitAfterConnectionChange()\r\n  {\r\n    this.log.info('reInitAfterConnectionChange');\r\n    this.resetNotificationSubscriptions();\r\n    return this.shutDownAndReInitSessions()\r\n      .then(() => {\r\n        this.log.info('successfuly sent sessions re-init');\r\n        this.resetRecordingTimers();\r\n        this.initialClassroomCaptureLoading(true);\r\n        this.schedulingService.restartSchedulingService();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * recording session state machine\r\n   */\r\n\r\n  public callRecordingNextAction(nextAction: string, recover: boolean = false) : any\r\n  {\r\n    this.log.info('callRecordingNextAction: ' + nextAction);\r\n    if(!this.recordingUtilsService.isProcessing() && !this.actionInProgress) {\r\n      this.actionInProgress = true;\r\n      switch (this.appState.recordingPhase) {\r\n        case 'initial':\r\n          if(nextAction === 'pause') {\r\n            //application started in recovery mode\r\n            if(recover) {\r\n              this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n              this.appState.recordingPhase = 'paused';\r\n            }\r\n            this.actionInProgress = false;\r\n            return Promise.resolve();\r\n          } else {\r\n            //in regular flow the only action from 'initial' state is - start\r\n            this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n            return this.startRecording();\r\n          }\r\n        case 'recording':\r\n          if(nextAction === 'pause') {\r\n            this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n            return this.pauseRecording();\r\n          } else if(nextAction === 'stop') {\r\n            this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n            this.actionInProgress = false; //immediately calls pause action that will set actionInProgress to true\r\n            return this.stopRecording();\r\n          }\r\n          break;\r\n        case 'paused':\r\n          if(nextAction === 'resume') {\r\n            this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n            return this.resumeRecording();\r\n          } else if (nextAction === 'stop') {\r\n            this.updateRecState(this.appState.REC_STATE.IN_PROCESS);\r\n            this.actionInProgress = false; //immediately calls pause action that will set actionInProgress to true\r\n            return this.stopRecording();\r\n          } else if (nextAction === 'cancel') {\r\n            return this.cancelRecording();\r\n          } else if (nextAction === 'pause') {\r\n            this.actionInProgress = false;\r\n            return Promise.resolve();\r\n          }\r\n          break;\r\n      }\r\n      this.actionInProgress = false;\r\n      return Promise.reject({code: 'STATE_TRANSITION_INVALID',\r\n        msg: 'Transition from: ' + this.appState.recordingPhase + ' to: ' + nextAction});\r\n    } else {\r\n      return Promise.reject({code: 'ACTION_IN_PROGRESS', msg: 'Action still in progress: ' + this.appState.recordingPhase});\r\n    }\r\n  }\r\n\r\n  private resetNotificationSubscriptions()\r\n  {\r\n    this.log.info('resetNotificationSubscriptions()');\r\n\r\n    if(this.scheduledEventUpdateNotification) {\r\n      this.scheduledEventUpdateNotification.unsubscribe();\r\n      this.scheduledEventUpdateNotification = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * recording timer\r\n   */\r\n\r\n  private resetRecordingTimers()\r\n  {\r\n    this.recordingTotalDuration = 0;\r\n    this.recordingCurrentSessionDuration = 0;\r\n  }\r\n\r\n  private startRecordingTimer()\r\n  {\r\n    let isScheduledEvent = this.isRecordingScheduledEvent();\r\n    let start:number=new Date().getTime();\r\n    this.recordingTimerSub = this.recordingTimer.subscribe( t => {\r\n      let now:number=new Date().getTime();\r\n      if(isScheduledEvent) {\r\n        let endTime = this.schedulingService.getCurrentEvent()['endDate'];\r\n        let remainingTime = endTime - (now / 1000);\r\n        this.recordingCurrentSessionDuration = remainingTime < 0 ? 0 : remainingTime;\r\n      } else {\r\n        this.recordingCurrentSessionDuration = (now - start)/1000;\r\n      }\r\n      this.updateRecordingTimePersistentData();\r\n    });\r\n  }\r\n\r\n  private pauseRecordingTimer()\r\n  {\r\n    if(this.recordingTimerSub) {\r\n      this.recordingTimerSub.unsubscribe();\r\n      this.recordingTimerSub = null;\r\n    }\r\n    if(!this.isRecordingScheduledEvent()) {\r\n      this.recordingTotalDuration += this.recordingCurrentSessionDuration;\r\n      this.recordingCurrentSessionDuration = 0;\r\n    }\r\n  }\r\n\r\n  private stopRecordingTimer()\r\n  {\r\n    if(this.recordingTimerSub) {\r\n      this.recordingTimerSub.unsubscribe();\r\n      this.recordingTimerSub = null;\r\n    }\r\n    this.recordingCurrentSessionDuration = 0;\r\n    this.recordingTotalDuration = 0;\r\n    this.persistencyService.set('recording.recordingTime', 0);\r\n  }\r\n\r\n  public getRecordingTime() : number\r\n  {\r\n    let recTime = this.recordingTotalDuration + this.recordingCurrentSessionDuration;\r\n    return recTime;\r\n  }\r\n\r\n  //in case the app is being loaded in recovery mode (after crash in the middle of a recording session)\r\n  private setPrevRecordingTime(time)\r\n  {\r\n    //set total time only for ad-hoc recordings\r\n    if(!this.isRecordingScheduledEvent()) {\r\n      this.recordingTotalDuration += time;\r\n    }\r\n  }\r\n\r\n  private updateRecordingTimePersistentData()\r\n  {\r\n    this.persistencyService.set('recording.recordingTime', this.recordingTotalDuration + this.recordingCurrentSessionDuration);\r\n  }\r\n\r\n  /**\r\n   * helper functions\r\n   */\r\n\r\n  public getRecordingPhase()\r\n  {\r\n    return this.appState.recordingPhase;\r\n  }\r\n\r\n  public isRecordEnabled()\r\n  {\r\n    return this.appState.getActiveRecordableSessionsIds().length > 0 && !this.isRecordDisconnected();\r\n  }\r\n\r\n  public isRecordDisconnected()\r\n  {\r\n    return this.recoveryService.getRecoveryFailureReason() === this.recoveryService.getRecoveryDisconnectionState();\r\n  }\r\n\r\n  public isRecIsLoading()\r\n  {\r\n    return this.appState.getLoadingSessionsCount() > 0;\r\n  }\r\n\r\n  public isRecordingScheduledEvent()\r\n  {\r\n    return this.recordingDetailsService.getRecordingDetails()['eventId'];\r\n  }\r\n\r\n  /**\r\n   * Scheduled events management\r\n   */\r\n\r\n  public extendScheduledEvent()\r\n  {\r\n    this.schedulingService.extendCurrentEvent();\r\n  }\r\n\r\n  private startSchedulingManagement()\r\n  {\r\n    this.schedulingService.onReady\r\n      .then(() => {\r\n        return this.handleInitialSchedulingState();\r\n      })\r\n      .then(() => {\r\n        //subscribing for scheduled event metadata updates\r\n        this.subscribeToScheduledEventMetadataUpdates();\r\n        //waiting for scheduling initialization phase will be over\r\n        this.manageScheduledEventsRecording();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('RecordingManagerService: Failed to start scheduling management. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * check initial scheduling state,\r\n   * handle in progress event loaded from persistent data -> check if need to auto resume it\r\n   * if need to end loaded event - the regular pulling flow will handle it\r\n   */\r\n  private handleInitialSchedulingState()\r\n  {\r\n    this.log.info('RecordingManagerService: handleInitialSchedulingState()');\r\n    //check if should start in progress event\r\n    let autoResume = this.schedulingService.queryForScheduledEventAction(this.schedulingService.ACTION_QUERY.SHOULD_RESUME_INPROGRESS);\r\n    if(this.isScheduledEventQueryResponseValid(autoResume)) {\r\n      this.log.info('RecordingManagerService: Scheduled event need to be recovered: ' + autoResume['eventId']);\r\n      //handle auto resume of scheduled event\r\n      return this.recoveryService.canRecoverRecordingSession()\r\n        .then((canRecover) => {\r\n          if (canRecover) {\r\n            this.log.info('RecordingManagerService: Scheduled event can be recovered. Resuming event: ' + autoResume['eventId']);\r\n            return this.callRecordingNextAction('resume');\r\n          } else {\r\n            this.log.error('RecordingManagerService: Scheduled event can\\'t be recovered. closing event: ' + autoResume['eventId']);\r\n            return Promise.reject('scheduled event could not be resumed due to failed recovery process');\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.log.info('RecordingManagerService: Scheduled event was recovered and resumed successfully: ' + autoResume['eventId']);\r\n          autoResume['cb'](this.schedulingService.ACTION_STATUS.SUCCESS);\r\n        })\r\n        .catch((err) => {\r\n          this.log.error('RecordingManagerService: Failed to resume scheduling event after resuming application. ' + utils.stringifyMsg(err));\r\n          autoResume['cb'](this.schedulingService.ACTION_STATUS.FAILURE); //not closing scheduled event, we probably in disconnection mode\r\n        });\r\n    } else {\r\n      return Promise.resolve(true);\r\n    }\r\n  }\r\n\r\n  private subscribeToScheduledEventMetadataUpdates()\r\n  {\r\n    this.log.info('RecordingManagerService: subscribeToScheduledEventMetadataUpdates()');\r\n    this.scheduledEventUpdateNotification = this.schedulingService.eventUpdated$.subscribe(\r\n      currentEvent => {\r\n        let recordingDetails = this.recordingDetailsService.getRecordingDetails();\r\n        if (!_.isEmpty(recordingDetails) && currentEvent['id'] && recordingDetails['eventId'] === currentEvent['id']){\r\n          this.log.info('Scheduled event metadata was changed, updating recording details for event: ' + currentEvent['id']);\r\n          this.setScheduledEventRecordingDetails(currentEvent, false);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * check for scheduled event actions that need to be executed\r\n   * End current scheduled event\r\n   * Terminate current ad-hoc recording\r\n   * Start next scheduled event\r\n   * --- the order of there checks is crucial ---\r\n   */\r\n  private manageScheduledEventsRecording()\r\n  {\r\n    this.log.info('RecordingManagerService: manageScheduledEventsRecording()');\r\n    Observable.timer(0, 1000)\r\n      .subscribe(() => {\r\n        this.shouldEnableEventExtension = this.schedulingService.shouldEnableEventExtension();\r\n        if(this.schedulingService.canStartNewScheduledEventQueryProcess()) {\r\n          this.executeNextSchedulingServiceQuery();\r\n        } else {\r\n          this.log.debug('RecordingManagerService: current scheduled event query is in progress, not querying for next task');\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * check if should end current scheduled event\r\n   * check if should terminate current ad-hoc recording\r\n   * check if should start next scheduled event\r\n   */\r\n  private executeNextSchedulingServiceQuery()\r\n  {\r\n    //first check for end scheduled event\r\n    let endQueryRes = this.queryForEndScheduledEvent();\r\n    if(!_.isEmpty(endQueryRes)) {\r\n      this.executeScheduledEventEndQuery(endQueryRes);\r\n    } else {\r\n      //if there is no end event task check for ad-hoc termination\r\n      let terminateQueryRes = this.queryForTerminateAdHocRecording();\r\n      if(!_.isEmpty(terminateQueryRes)) {\r\n        this.executeAdHocRecordingTerminateQuery(terminateQueryRes);\r\n      } else {\r\n        //if there is no need for end event or ad-hoc recording termination check for event start\r\n        //check only if there are active recordable sessions\r\n        if(this.appState.getActiveRecordableSessionsIds().length > 0) {\r\n          let startQueryRes = this.queryForStartScheduledEvent();\r\n          if(!_.isEmpty(startQueryRes)) {\r\n            this.executeScheduledEventStartQuery(startQueryRes);\r\n          }\r\n        } else {\r\n          if(!this.skipScheduledEventStartLog) {\r\n            this.skipScheduledEventStartLog = true;\r\n            this.log.info('Skipped Scheduled event start query since there are no active recordable sessions');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private queryForEndScheduledEvent()\r\n  {\r\n    return this.schedulingService.queryForScheduledEventAction(this.schedulingService.ACTION_QUERY.SHOULD_END);\r\n  }\r\n\r\n  /**\r\n   * ending recording for a scheduled event\r\n   * if regular closing of an event will fail, trying to close recording using recoverMp4 flow.\r\n   * since this is a scheduled event and there is no user interaction involved, we need to make sure the recording\r\n   * will be closed no matter what. The process will fail only if both attempts will fail.\r\n   */\r\n  private executeScheduledEventEndQuery(queryRes)\r\n  {\r\n    this.log.info('RecordingManagerService: executeScheduledEventEndQuery()');\r\n    this.skipScheduledEventStartLog = false;\r\n    if(this.isScheduledEventQueryResponseValid(queryRes)) {\r\n      //making sure the the event we will end is the current recorded scheduled event\r\n      if(this.recordingDetailsService.getRecordingDetails()['eventId'] &&\r\n        queryRes['eventId'] === this.recordingDetailsService.getRecordingDetails()['eventId']) {\r\n        this.log.info('RecordingManagerService: Executing scheduled event end query for event: ' + queryRes['eventId']);\r\n        this.finalizeCurrentRecording(false)\r\n          .then(() => {\r\n            this.log.info('RecordingManagerService: successfully ended scheduled event: ' + queryRes['eventId']);\r\n            queryRes['cb'](this.schedulingService.ACTION_STATUS.SUCCESS);\r\n          })\r\n          .catch((err) => {\r\n            this.log.error('RecordingManagerService: Failed to end scheduled event: ' +\r\n              queryRes['eventId'] + '. ' + utils.stringifyMsg(err));\r\n            queryRes['cb'](this.schedulingService.ACTION_STATUS.FAILURE);\r\n          });\r\n      } else {\r\n        queryRes['cb'](this.schedulingService.ACTION_STATUS.NOT_NEEDED);\r\n      }\r\n    }\r\n  }\r\n\r\n  private queryForTerminateAdHocRecording()\r\n  {\r\n    return this.schedulingService.queryForScheduledEventAction(this.schedulingService.ACTION_QUERY.SHOULD_TERMINATE);\r\n\r\n  }\r\n\r\n  private executeAdHocRecordingTerminateQuery(queryRes)\r\n  {\r\n    this.log.info('RecordingManagerService: executeAdHocRecordingTerminateQuery()');\r\n    this.skipScheduledEventStartLog = false;\r\n    if(this.isScheduledEventQueryResponseValid(queryRes)) {\r\n      if(!this.isRecordingScheduledEvent()) {\r\n        this.log.info('RecordingManagerService: Executing ad hoc recording termination query before event: ' + queryRes['eventId']);\r\n        //making sure current recording is not a scheduled recording (if there is no eventId in recording details object)\r\n        this.finalizeCurrentRecording(false)\r\n          .then((res) => {\r\n            if(!res || res !== 'INITIAL_STATE') {\r\n              this.log.info('RecordingManagerService: Successfully terminated ad hoc recording before event: ' + queryRes['eventId']);\r\n              this.focusOnRecording.next(queryRes['eventId']);\r\n              this.notificationService.sendNotification(\"NOTIFICATIONS.rec_terminated\", 'success');\r\n              queryRes['cb'](this.schedulingService.ACTION_STATUS.SUCCESS);\r\n            } else {\r\n              this.log.info('RecordingManagerService: There is no need for a ad hoc recording termination before event: ' + queryRes['eventId']);\r\n              queryRes['cb'](this.schedulingService.ACTION_STATUS.NOT_NEEDED);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            this.log.error('RecordingManagerService: Failed to terminated ad hoc recording before event: ' +\r\n              queryRes['eventId'] + '. ' + utils.stringifyMsg(err));\r\n            queryRes['cb'](this.schedulingService.ACTION_STATUS.FAILURE);\r\n          });\r\n      } else {\r\n        queryRes['cb'](this.schedulingService.ACTION_STATUS.NOT_NEEDED);\r\n      }\r\n    }\r\n  }\r\n\r\n  private queryForStartScheduledEvent()\r\n  {\r\n    return this.schedulingService.queryForScheduledEventAction(this.schedulingService.ACTION_QUERY.SHOULD_START);\r\n  }\r\n\r\n  private executeScheduledEventStartQuery(queryRes)\r\n  {\r\n    this.log.info('RecordingManagerService: executeScheduledEventStartQuery()');\r\n    this.skipScheduledEventStartLog = false;\r\n    if(this.isScheduledEventQueryResponseValid(queryRes)) {\r\n      this.prepareForScheduledEventStart(queryRes['eventId'])\r\n        .then((res) => {\r\n          this.focusOnRecording.next(queryRes['eventId']);\r\n          //start event\r\n          return this.startScheduledEvent(queryRes['eventId']);\r\n        })\r\n        .then(() => {\r\n          queryRes['cb'](this.schedulingService.ACTION_STATUS.SUCCESS);\r\n        })\r\n        .catch((err) => {\r\n          this.log.error('Failed to prepare and start scheduled event: ' + queryRes['eventId'] + '. ' + utils.stringifyMsg(err));\r\n          queryRes['cb'](this.schedulingService.ACTION_STATUS.FAILURE);\r\n          this.notificationService.sendNotification('NOTIFICATIONS.error_startRecording', 'error'); //todo think of a better notification since we will attempt to start this recording again in next tick\r\n        });\r\n    }\r\n  }\r\n\r\n  private prepareForScheduledEventStart(eventId)\r\n  {\r\n    this.log.info('RecordingManagerService: prepareForScheduledEventStart()');\r\n    this.log.info('RecordingManagerService: Checking if need to finalize recording before next scheduled event will start: ' + eventId);\r\n    //waiting for all relevant sessions to be ready\r\n    return this.appState.areSessionsReadyForRecording('executeScheduledEventStartQuery()')\r\n      .catch(() =>{\r\n        //we would like to begin scheduled event start process regardless of the sessions state\r\n        this.log.warn('RecordingManagerService: PrepareForScheduledEventStart - not all sessions are in a ready state, continue scheduling start process');\r\n      })\r\n      .then(() => {\r\n        //navigate to recording page if user are currently in a different page (f.e. scheduling tab)\r\n        //finalizing current recording again to support a case where the user starts a new recording right before the sched. event\r\n        return Promise.all([this.finalizeCurrentRecording(false), this.navigateToRecordingPage()]);\r\n      })\r\n      .catch(() =>{\r\n        //ignoring promise rejection since even in failed finalization, the recording is being reset\r\n        this.log.warn('RecordingManagerService: prepareForScheduledEventStart - ignoring failed recording closing process.');\r\n      });\r\n  }\r\n\r\n  private startScheduledEvent(eventId)\r\n  {\r\n    this.log.info('RecordingManagerService: startScheduledEvent()');\r\n    return this.appState.areSessionsReadyForRecording('executeScheduledEventStartQuery()')\r\n      .then(() => {\r\n        this.log.info('Fetching current scheduled event metadata. ' + eventId);\r\n        let eventMetaData = this.schedulingService.getScheduledEventObject(eventId);\r\n        //set recording details and flag it as ready only\r\n        this.setScheduledEventRecordingDetails(eventMetaData);\r\n        return this.addLiveConfig(eventMetaData);\r\n      })\r\n      .then(() => {\r\n        //staring new event recording\r\n        this.log.info('calling record start for current scheduled event: ' + eventId);\r\n        return this.callRecordingNextAction('start');\r\n      });\r\n  }\r\n\r\n  private isScheduledEventQueryResponseValid(queryRes)\r\n  {\r\n    if(!_.isEmpty(queryRes) && queryRes.hasOwnProperty('cb') && queryRes.hasOwnProperty('eventId')) {\r\n      return true;\r\n    } else {\r\n      this.log.error('RecordingManagerService: Can\\'t execute scheduled event end query due to corrupted query response. ' + utils.stringifyMsg(queryRes));\r\n    }\r\n  }\r\n\r\n  public getExtendEventTimeInMinutes()\r\n  {\r\n    return this.schedulingService.onReady\r\n      .then(() => {\r\n        return this.schedulingService.getEventExtendTime() / 60;\r\n      });\r\n  }\r\n\r\n  private getSessionActionArgs(action, sessionId?): any\r\n  {\r\n    return this.recordingUtilsService.getSessionActionArgs(action, sessionId);\r\n  }\r\n\r\n  private addLiveConfig(liveData) {\r\n    return this.liveManagerService.addLiveConfig(liveData).then(() => {\r\n      let name = this.liveManagerService.getStreamingSessionName();\r\n      this.recordingDetailsService.setRecordingLiveData(name, _.pick(liveData, ['primaryRtmp', 'flavorArray', \"id\"]));\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/services/recording-manager.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppLoggerService} from \"../../../shared/services/infra/app-logger.service\";\r\nimport {Observable, BehaviorSubject} from \"rxjs\";\r\nimport {KalturaApiService} from \"../../../shared/services/infra/kaltura-api.service\";\r\nimport * as moment from 'moment';\r\nimport Moment = moment.Moment;\r\nimport {AppConfigService} from \"../../../shared/services/infra/app-config.service\";\r\nimport * as _ from \"lodash\";\r\nimport {utils} from \"../../../utils/utils\"\r\nimport {AppPersistentDataService} from \"../../../shared/services/infra/app-persistent-data.service\";\r\nimport {ResourceIdService} from \"../../../shared/services/resource-id/resource-id.service\";\r\nimport {AppNotificationsService} from \"../../../shared/services/infra/app-notifications.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppMonitoringAgentService} from \"../../../shared/services/monitoring/app-monitoring-agent.service\";\r\nimport {LiveManagerService} from \"../../../shared/services/live/live-manager.service\";\r\n\r\n@Injectable()\r\nexport class SchedulingService {\r\n\r\n  public readonly ACTION_QUERY =\r\n  {\r\n    SHOULD_START: 'start',\r\n    SHOULD_END: 'end',\r\n    SHOULD_TERMINATE: 'terminate',\r\n    SHOULD_RESUME_INPROGRESS: 'resume_inprogress',\r\n    NONE: 'none'\r\n  };\r\n\r\n  public readonly ACTION_STATUS =\r\n  {\r\n    SUCCESS: 'success',\r\n    FAILURE: 'failure',\r\n    NOT_NEEDED: 'not-needed',\r\n    UNKNOWN: 'unknown'\r\n  };\r\n  /**\r\n   * indicates if Scheduling service is ready to use\r\n   * @type {any}\r\n   */\r\n  public onReady: Promise<void> = null;\r\n  /**\r\n   * indicates if scheduled event call is currently in progress.\r\n   * callback for certain event was yet to return and handle\r\n   * @type {boolean}\r\n   */\r\n  private schedulingEventInProgressCall = this.ACTION_QUERY.NONE;\r\n  /**\r\n   * event id for last terminated ad-hoc recording process\r\n   * need to save this id so we won't handle ad-hoc recordig in each query interval\r\n   * @type {string}\r\n   */\r\n  private lastHandledEventIdForTermination: string = '';\r\n\r\n\r\n  //is module enabled\r\n  public isSchedulingEnabled = false;\r\n  //excluded event ids for a scheduled events that was stopped by the user and need to be ignored\r\n  private excludedEventsIdSet: Set<number>;\r\n  //current custom scheduled event. will hold the actual start and end time (saved in app persistent data) and metadata\r\n  private currentEvent: any = {};\r\n  // scheduled event param object (as in api response)\r\n  private nextEvent: any = {};\r\n  //scheduled events Mapped by day and sorted by start time and creation time\r\n  private schedulingEventsMap : any = {};\r\n  //scheduling event fetch interval observable\r\n  private schedulingInterval$ = null;\r\n  //scheduling event interval subscription\r\n  private schedulingIntervalSubscription;\r\n\r\n  /**\r\n   * triggered when need to terminate current recording\r\n   */\r\n  private eventUpdated = new BehaviorSubject('');\r\n  public eventUpdated$ = this.eventUpdated.asObservable();\r\n  /**\r\n   * Id's of event on which we had notifications for.\r\n   */\r\n  private nextEventNotificationEventId = null;\r\n  private eventEndNotificationEventId = null;\r\n\r\n  private eventStatusMap = {};\r\n\r\n  // consts\r\n  public static readonly EVENT_STATUS = {\r\n    COMPLETED: 'COMPLETED',\r\n    RECORDING: 'RECORDING',\r\n    FUTURE_EVENT: 'FUTURE_EVENT'\r\n  };\r\n  private static readonly MAX_COUNTDOWN_IN_SEC = 10800;\r\n  private static readonly KALTURA_CLASSROOM_ADMIN_TAG = \"kalturaclassroom\";\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private apiService: KalturaApiService,\r\n              private appConfig: AppConfigService,\r\n              private resourceIdService: ResourceIdService,\r\n              private appNotificationService: AppNotificationsService,\r\n              private persistentData: AppPersistentDataService,\r\n              private appMonitoringAgent: AppMonitoringAgentService,\r\n              private liveManagerService: LiveManagerService)\r\n  {\r\n    this.onReady = this.start();\r\n  }\r\n\r\n  /**\r\n   * Start sampling the server for scheduled events\r\n   */\r\n  private start()\r\n  {\r\n    return Promise.all([\r\n      this.persistentData.get(\"recording.scheduling\"),\r\n      this.resourceIdService.ready()\r\n    ])\r\n      .then( ([recordingData,resourceIdServiceReady])  => {\r\n        if (resourceIdServiceReady===true) {\r\n          let schedulingConfig = this.appConfig.getConfigData('config.captureApp.scheduling');\r\n          if(schedulingConfig && schedulingConfig['enabled']) {\r\n            this.initSchedulingService(recordingData);\r\n            this.startFetchInterval();\r\n          }\r\n        } else {\r\n          //todo\r\n          this.appNotificationService.sendNotification('SCHEDULING.forced_disabled', 'error');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // TODO: send notification in case of reject - will happen when config file does not exist\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private initSchedulingService(schedulingData)\r\n  {\r\n    this.log.info('SchedulingService: init scheduling service');\r\n    this.isSchedulingEnabled = true;\r\n    let intervalSec = this.appConfig.getConfigData('config.captureApp.scheduling.intervalSec');\r\n    if(schedulingData) {\r\n      this.excludedEventsIdSet = _.isArray(schedulingData.excludedEventsIdSet) ? new Set<number>(schedulingData.excludedEventsIdSet) : new Set<number>();\r\n\r\n      if(!_.isEmpty(schedulingData.scheduledEvent)) {\r\n        this.setCurrentEvent(schedulingData.scheduledEvent);\r\n      }\r\n    } else{\r\n      this.excludedEventsIdSet = new Set<number>();\r\n    }\r\n    //set scheduling interval\r\n    this.schedulingInterval$ = Observable.timer(0, intervalSec * 1000);\r\n\r\n    // checking status every 1 sec for showing notifications when needed\r\n    Observable.timer(0, 1000)\r\n      .subscribe(() => {\r\n        this.showCurrentEventEndNotification();\r\n        this.prepareNextEvent();\r\n      });\r\n  }\r\n\r\n  private prepareNextEvent(){\r\n    if (!_.isEmpty(this.nextEvent)) {\r\n      let countdownInSec = this.appConfig.getConfigData('config.captureApp.scheduling.countdownInSec');\r\n      let timeToShowNextEventNotification = (this.getNextEventRealStartTime() - countdownInSec) * 1000;\r\n      let now =  moment().valueOf();\r\n\r\n      if (this.nextEventNotificationEventId !== this.nextEvent.id && timeToShowNextEventNotification <= now && now <= this.getNextEventRealStartTime()*1000) {\r\n        let isLiveEvent = this.isLiveScheduledEvent(this.nextEvent);\r\n        this.showNextEventNotification(isLiveEvent);\r\n        if (isLiveEvent) {\r\n          this.setRedirectAsNull(this.nextEvent.templateEntryId);\r\n        }\r\n        // show it only once\r\n        this.nextEventNotificationEventId = this.nextEvent.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  private showNextEventNotification(isLive) {\r\n    let msg = isLive ? 'SCHEDULING.next_live_event_notification' : 'SCHEDULING.next_event_notification';\r\n    this.appNotificationService.sendNotificationWithParams(\r\n      msg,\r\n      {event_name: this.nextEvent.summary, time_in_minutes: this.getTimeToNextEventInMinutes()},\r\n      'success');\r\n  }\r\n\r\n  private setRedirectAsNull(liveEntryId) {\r\n    // when live stream is about to start we want to set the RedirectEntryId of the live entry as null\r\n    // so new viewer won't redirect to the last record couple of minutes before the live starts\r\n    return this.apiService.updateRedirectEntryId(liveEntryId, '').toPromise().then ((res) => {\r\n      this.log.info(\"Updated redirect entry id to null\");\r\n      return res;\r\n    }).catch((err) => {\r\n      this.log.warn(\"Failed to update redirect entry id as null: \" + utils.stringifyMsg(err));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * since user can extend current event end time,\r\n   * next event start time can be the later between next.startDate or current.endDate\r\n   */\r\n  public getNextEventRealStartTime()\r\n  {\r\n    return this.currentEvent && this.currentEvent.endDate > this.nextEvent.startDate ?\r\n      this.currentEvent.endDate : this.nextEvent.startDate;\r\n  }\r\n\r\n  private showCurrentEventEndNotification()\r\n  {\r\n    if (this.eventEndNotificationEventId !== this.currentEvent.id && this.isTimeForEndEventNotifications()){\r\n      this.appNotificationService.sendNotificationWithParams(\r\n        'SCHEDULING.end_event_notification',\r\n        { event_name: this.currentEvent['summary'], time_in_minutes: this.getTimeToEventEndInMinutes() },\r\n        'success');\r\n      // show it only once\r\n      this.eventEndNotificationEventId = this.currentEvent.id;\r\n    }\r\n  }\r\n\r\n  private isTimeForEndEventNotifications()\r\n  {\r\n    if (!_.isEmpty(this.currentEvent)){\r\n      let eventEndNotificationInSec = this.appConfig.getConfigData('config.captureApp.scheduling.eventEndNotificationInSec');\r\n      let timeBeforeEventEndNotificationInMs = (this.currentEvent.endDate - eventEndNotificationInSec) * 1000;\r\n      if (timeBeforeEventEndNotificationInMs <= moment().valueOf()) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public shouldEnableEventExtension()\r\n  {\r\n    if (!_.isEmpty(this.currentEvent)) {\r\n      let displayExtendEventInSec = this.appConfig.getConfigData('config.captureApp.scheduling.displayExtendEventInSec');\r\n      let timeToEnableEventExtension = (this.currentEvent.endDate - displayExtendEventInSec) * 1000;\r\n      if (timeToEnableEventExtension <= moment().valueOf()) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public getEventExtendTime()\r\n  {\r\n    return this.appConfig.getConfigData('config.captureApp.scheduling.extendEventInSec');\r\n  }\r\n\r\n  /**\r\n   * starts scheduled events fetching process in a fix interval\r\n   */\r\n  private startFetchInterval()\r\n  {\r\n    this.schedulingIntervalSubscription = this.schedulingInterval$.subscribe(() => {\r\n      this.fetchScheduledEvents().then(\r\n        (data)=> {\r\n          this.log.info('SchedulingService: get scheduling events from server (at interval time)');\r\n          this.handledFetchedScheduledEvents(data);\r\n          if(!_.isEmpty(this.currentEvent)){\r\n            this.updateCurrentEventAttributes(this.getCurrentEventObject());\r\n          }\r\n        },\r\n        (err) => {\r\n          this.log.warn('SchedulingService: Failed to load scheduling events from server, using offline scheduling data. ' + utils.stringifyMsg(err));\r\n          this.getScheduledEventsOffline()\r\n            .then((data) => {\r\n              this.handledFetchedScheduledEvents(data);\r\n            })\r\n            .catch((err) => {\r\n              this.log.error('SchedulingService: Failed to get offline scheduled event data. ' + utils.stringifyMsg(err));\r\n            })\r\n        });\r\n    });\r\n  }\r\n\r\n  private handledFetchedScheduledEvents(data)\r\n  {\r\n    this.setScheduledEventForOfflineUsage(data);\r\n    this.mapScheduleEventsByStartDateAndEndDate(data);\r\n    this.setNextScheduledEvent();\r\n    this.mapEventStatuses(data);\r\n  }\r\n\r\n  /**\r\n   * Map the event by day and handle 2-days event\r\n   * @param ScheduleEvents\r\n   */\r\n  private mapScheduleEventsByStartDateAndEndDate(data){\r\n    this.schedulingEventsMap = {};\r\n\r\n    _.forEach(data, event =>{\r\n      let start = moment(event['startDate']*1000).startOf('day');\r\n      let startDateStr = start.format();\r\n      let end = moment(event['endDate']*1000).startOf('day');\r\n      let endDateStr = end.format();\r\n\r\n      if (!this.schedulingEventsMap[startDateStr]){\r\n        this.schedulingEventsMap[startDateStr] = [];\r\n      }\r\n      this.schedulingEventsMap[startDateStr].push(event);\r\n\r\n      // if there is more than 1 day diff between start to end then add this event also\r\n      // to the day it ends (2-days event).\r\n      if (end.diff(start, 'days', true) > 0){\r\n        if (!this.schedulingEventsMap[endDateStr]){\r\n          this.schedulingEventsMap[endDateStr] = [];\r\n        }\r\n        this.schedulingEventsMap[endDateStr].push(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Map event-id with it's status: COMPLETED, RECORDING, FUTURE_EVENT\r\n   * Scheduling list will now get the event status in O(1)\r\n   * @param data\r\n   */\r\n  private mapEventStatuses(data){\r\n    this.eventStatusMap = {};\r\n    let now = moment().valueOf();\r\n\r\n    _.forEach(data, event =>{\r\n      // is event at recording now\r\n      if(this.currentEvent ? (this.currentEvent['id'] === event['id']) : false){\r\n        this.eventStatusMap[event['id']] = SchedulingService.EVENT_STATUS.RECORDING;\r\n      }\r\n      // is it excluded\r\n      else if (this.isExcludedEvent(event['id'])){\r\n        this.eventStatusMap[event['id']] = SchedulingService.EVENT_STATUS.COMPLETED;\r\n      }\r\n      else{\r\n        let isTimePassed = (event.startDate*1000) < now;\r\n        let isBeforeTheNextEvent = this.nextEvent ? (event.startDate < this.nextEvent.startDate) : true;  // important when manually starting next event with Start-Now button;\r\n        let isItNextEvent = this.nextEvent && this.nextEvent.id === event['id'];\r\n\r\n        let hasEnded = (isTimePassed || isBeforeTheNextEvent) && !isItNextEvent;\r\n        if (hasEnded){\r\n          this.eventStatusMap[event['id']] = SchedulingService.EVENT_STATUS.COMPLETED;\r\n        }\r\n        else {\r\n          this.eventStatusMap[event['id']] = SchedulingService.EVENT_STATUS.FUTURE_EVENT;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetches scheduled events Ordered by startDate and creation date\r\n   * @returns {Observable<R>}\r\n   */\r\n  private fetchScheduledEvents(): Promise<any>\r\n  {\r\n    let start = moment().set({hour: 0, minute: 0, second: 0, millisecond: 0});\r\n    let viewEventsAheadDay = this.appConfig.getConfigData('config.captureApp.scheduling.viewEventsAheadDay');\r\n    let end = start.clone().add(viewEventsAheadDay, 'days'); // ms to sec (server units)\r\n\r\n    return this.apiService.getScheduledEvents(start.valueOf(), end.valueOf(),this.resourceIdService.resourceId)\r\n      .toPromise().then((data)=> {\r\n        return this.enrichEventsData(data);\r\n      });\r\n\r\n  }\r\n\r\n  // set all metadata\r\n  private setCurrentEvent(event: any)\r\n  {\r\n    if(event) {\r\n      this.currentEvent = _.cloneDeep(event);\r\n      this.currentEvent.manuallyUpdated = event.manuallyUpdated ? event.manuallyUpdated : false;\r\n      // map the current event state at eventStatusMap\r\n      this.eventStatusMap[this.currentEvent.id] = SchedulingService.EVENT_STATUS.RECORDING;\r\n\r\n      // minimize persisted array\r\n      this.minimizeExcludedEventsIdSet();\r\n\r\n      // persist it\r\n      this.persistentData.set(\"recording.scheduling\", {scheduledEvent:  this.currentEvent, excludedEventsIdSet: Array.from(this.excludedEventsIdSet)});\r\n      this.log.info('SchedulingService: Current scheduled event: ' + this.currentEvent.id);\r\n      this.appMonitoringAgent.setSchedulingDataCurrentEvent(this.currentEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove from persisted excludedEventsIdSet set, all excluded events that are older than the max time-window which the user could\r\n   * start-in-advance (start-now) the events.\r\n   */\r\n  private minimizeExcludedEventsIdSet(){\r\n    let countdownThresholdTime = moment().subtract(SchedulingService.MAX_COUNTDOWN_IN_SEC, 'seconds').valueOf();\r\n    let eventsArray = this.getFlattenedScheduledEvents();\r\n\r\n    this.excludedEventsIdSet.forEach(excludedId => {\r\n      let ExcludedEventObj = _.find(eventsArray, e => e['id'] === excludedId);\r\n\r\n      if (ExcludedEventObj && ExcludedEventObj['endDate']*1000 < countdownThresholdTime){\r\n        this.excludedEventsIdSet.delete(excludedId);\r\n        this.eventStatusMap[excludedId] = SchedulingService.EVENT_STATUS.COMPLETED;\r\n      }\r\n      else if (!ExcludedEventObj){\r\n        this.excludedEventsIdSet.delete(excludedId);  // delete deleted scheduled events\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * reloading scheduling service, in case an event need to be resumed while device was disconnected\r\n   * when the device will reconnect and all application will reload - the notifications will send a resume event\r\n   */\r\n  public restartSchedulingService()\r\n  {\r\n    this.log.info('restartSchedulingService()');\r\n    if(this.schedulingIntervalSubscription) {\r\n      this.schedulingIntervalSubscription.unsubscribe();\r\n      this.schedulingIntervalSubscription = null;\r\n    }\r\n    this.nextEvent = {};\r\n    this.start();\r\n  }\r\n\r\n  public getCurrentEventObject()\r\n  {\r\n    let id = this.currentEvent.id;\r\n    return this.getScheduledEventObject(id);\r\n  }\r\n\r\n  public getScheduledEventObject(id)\r\n  {\r\n    return _.find(this.getFlattenedScheduledEvents(), function (e) {\r\n      return e['id'] === id;\r\n    });\r\n  }\r\n\r\n  private updateCurrentEventAttributes(event){\r\n    if(event) {\r\n      this.log.info('SchedulingService: update current scheduled event attributes ' + this.currentEvent.id);\r\n      let lastCurrentEvent = _.clone(this.currentEvent);\r\n\r\n      this.currentEvent.summary = event.summary;\r\n      this.currentEvent.description = event.description;\r\n      this.currentEvent.organizer = event.organizer;\r\n      this.currentEvent.tags = event.tags;\r\n      if(!this.currentEvent.manuallyUpdated) {\r\n        this.currentEvent.endDate = event.endDate;\r\n      }\r\n      // Save and Fire change-event if there was a change\r\n      if (!_.isEqual(this.currentEvent, lastCurrentEvent)){\r\n        this.saveCurrentEvent();\r\n        this.eventUpdated.next(this.currentEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Next event is an in progress event that wasn't started or\r\n   * the first event in scheduled events array that its' start time greater than now / last recorded event.\r\n   */\r\n  private setNextScheduledEvent()\r\n  {\r\n    this.log.info('SchedulingService: Setting next scheduled event');\r\n    // adding one second to avoid duplicate event registration\r\n    // since start time is in seconds, multiple events can be set in the same period of time (date is in milliseconds)\r\n    let now = Math.floor(new Date().getTime() / 1000) + 1;\r\n    //check if there is an in progress event that it is not the current event and it is not excluded\r\n    let nextInLine = _.find(this.getFlattenedScheduledEvents(), e => {\r\n      return (now > e['startDate'] && now < e['endDate']) &&\r\n              (!_.isEmpty(this.currentEvent) ? e['id'] !== this.currentEvent['id'] : true) &&\r\n              !this.isExcludedEvent(e['id']);\r\n    });\r\n    //if there is no in progress event that was unhandled\r\n    if(_.isEmpty(nextInLine)) {\r\n      //checking for the first event that its' start time is greater than now,\r\n      //its' start time is only after the current event start time (in case of manually scheduled event start),\r\n      //and it is not the current event (in case an event starts and only then the user changes its' start time),\r\n      //and it is not in the exclude list\r\n      nextInLine = _.find(this.getFlattenedScheduledEvents(), e => {\r\n        return now < e['startDate'] &&\r\n          (!_.isEmpty(this.currentEvent) ?\r\n            (this.currentEvent['startDate'] < e['startDate'] && this.currentEvent['id'] !== e['id']) : true) &&\r\n          !this.isExcludedEvent(e['id']);\r\n      });\r\n    }\r\n    //update next scheduled event\r\n    if(!utils.areEventsEqual(nextInLine, this.nextEvent)) {\r\n      if(_.isEmpty(nextInLine)) {\r\n        this.log.info('SchedulingService: next scheduled event was deleted, removing it.');\r\n        this.nextEvent = {};\r\n      } else {\r\n        this.log.info('SchedulingService: update Next scheduled event id: ' + nextInLine['id']);\r\n        this.nextEvent = _.clone(nextInLine);\r\n        this.avoidEndStartCollisions();\r\n      }\r\n    }\r\n    this.appMonitoringAgent.setSchedulingDataNextEvent(this.nextEvent);\r\n  }\r\n\r\n  private saveCurrentEvent()\r\n  {\r\n    this.persistentData.set('recording.scheduling.scheduledEvent', this.currentEvent)\r\n      .catch((err) => {\r\n        this.log.error('SchedulingService: Failed to save current scheduled event to persistent data. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * In case the start date of the next event equals to current event end time - push start event date by 1 second\r\n   */\r\n  private avoidEndStartCollisions()\r\n  {\r\n    if(this.currentEvent && this.nextEvent) {\r\n      if(this.currentEvent.endDate === this.nextEvent.startDate) {\r\n        this.nextEvent.startDate += 1; //adding one second to next event\r\n      }\r\n    }\r\n  }\r\n\r\n  private getScheduledEventsOffline()\r\n  {\r\n    return ipcWrapper.sendIPC('getScheduledEvents');\r\n  }\r\n\r\n  private setScheduledEventForOfflineUsage(events)\r\n  {\r\n    return ipcWrapper.sendIPC('setScheduledEvents', events);\r\n  }\r\n\r\n  private getFlattenedScheduledEvents()\r\n  {\r\n    return _.flatten(_.values(this.schedulingEventsMap));\r\n  }\r\n\r\n  public getScheduledEventsByDay(date: Moment){\r\n    let startTimeOfTheXPage = date.startOf('day').format();\r\n\r\n    return this.schedulingEventsMap[startTimeOfTheXPage];\r\n  }\r\n\r\n  public getCurrentEvent()\r\n  {\r\n    return this.currentEvent;\r\n  }\r\n\r\n  public resetCurrentEvent()\r\n  {\r\n    this.log.info('SchedulingService: ResetCurrentEvent: ' + !_.isEmpty(this.currentEvent) ?  this.currentEvent.id : ' unknown');\r\n    this.eventStatusMap[this.currentEvent.id] = SchedulingService.EVENT_STATUS.COMPLETED;\r\n    this.currentEvent = {};\r\n    this.appMonitoringAgent.setSchedulingDataCurrentEvent({});\r\n    return this.persistentData.set(\"recording.scheduling.scheduledEvent\", {});\r\n  }\r\n\r\n  public getNextEvent()\r\n  {\r\n    return this.nextEvent;\r\n  }\r\n\r\n  /**\r\n   * extending current scheduled event end time\r\n   * @return {boolean}\r\n   */\r\n  public extendCurrentEvent()\r\n  {\r\n    if(this.currentEvent) {\r\n      let schedulingConfigObj = this.appConfig.getConfigData('config.captureApp.scheduling');\r\n      this.log.info('SchedulingService: Extending current scheduled event in ' + schedulingConfigObj.extendEventInSec + ' seconds');\r\n      this.currentEvent.endDate += schedulingConfigObj.extendEventInSec;\r\n      this.currentEvent.manuallyUpdated = true;\r\n      this.saveCurrentEvent();\r\n      //so the user will get notification again when needed (only if the new end time is greater the notification time)\r\n      //f.e: extended from 8 min to 13 min when configured notification time is 10 min)\r\n      let timeBeforeEndNotification = (this.currentEvent.endDate - schedulingConfigObj.eventEndNotificationInSec) * 1000;\r\n      if (timeBeforeEndNotification >= moment().valueOf()) {\r\n        this.eventEndNotificationEventId = null;\r\n      }\r\n      //so the user will get updated notification about next event start time\r\n      this.nextEventNotificationEventId = null;\r\n    } else {\r\n      this.log.warn('SchedulingService: There is no current event to extend');\r\n    }\r\n  }\r\n\r\n  public restartSchedulingEventInterval()\r\n  {\r\n    if(this.schedulingIntervalSubscription) {\r\n      this.schedulingIntervalSubscription.unsubscribe();\r\n      this.schedulingIntervalSubscription = null;\r\n      this.startFetchInterval();\r\n    }\r\n\r\n  }\r\n\r\n  public closeEventBeforeEndTime()\r\n  {\r\n    this.log.info('SchedulingService: handling external scheduled event stop.');\r\n    this.eventStatusMap[this.currentEvent.id] = SchedulingService.EVENT_STATUS.COMPLETED;\r\n    this.excludedEventsIdSet.add(this.currentEvent.id);\r\n    this.persistentData.set(\"recording.scheduling.excludedEventsIdSet\", Array.from(this.excludedEventsIdSet));\r\n    this.resetCurrentEvent();\r\n  }\r\n\r\n  startRecordingNextEvent(){\r\n    // check that there is no current event recording and next-event exists\r\n    if (_.isEmpty(this.currentEvent) && this.nextEvent){\r\n      this.log.info('SchedulingService: Starting next event: ' + this.nextEvent['id'] + ' now due to user decision.');\r\n      //add a flag to next event that will indicate that it should start now and no in its' original time\r\n      this.nextEvent['startNow'] = true;\r\n    }\r\n    else{\r\n      this.log.error('SchedulingService: Fail to start next event because current event is still recording');\r\n    }\r\n  }\r\n\r\n  public getTimeToNextEventInMinutes(){\r\n    if (!this.nextEvent){\r\n      return '';\r\n    }\r\n\r\n    let now = moment().valueOf();\r\n    let duration =  moment.duration(this.getNextEventRealStartTime()*1000 - now);\r\n\r\n    return Math.floor(duration.asMinutes()) + 1 + '';\r\n  }\r\n\r\n  private getTimeToEventEndInMinutes(){\r\n    let now = moment().valueOf();\r\n    let duration =  moment.duration(this.currentEvent.endDate*1000 - now);\r\n\r\n    return Math.floor(duration.asMinutes()) + 1 + '';\r\n  }\r\n\r\n  public getCurrentEventRemainingInMin()\r\n  {\r\n    if(this.currentEvent) {\r\n      let now = moment().valueOf();\r\n      let duration =  moment.duration(this.currentEvent.endDate*1000 - now);\r\n      return Math.floor(duration.asMinutes()) + 1;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public shouldDisplayNextEventNotifications(subtractSecondsBeforeEvent: number = 0){\r\n    let schedulingConfigObj = this.appConfig.getConfigData('config.captureApp.scheduling');\r\n    if (!this.nextEvent || !schedulingConfigObj) {\r\n      return false;\r\n    }\r\n\r\n    let now  = moment();\r\n    let from = moment(this.getNextEventRealStartTime()*1000).subtract(schedulingConfigObj.countdownInSec, 'seconds');\r\n    let end  = moment(this.getNextEventRealStartTime()*1000).subtract(subtractSecondsBeforeEvent, 'seconds');\r\n\r\n    return now.isBetween(from, end);\r\n  }\r\n\r\n  private isExcludedEvent(eventId){\r\n    return this.excludedEventsIdSet.has(eventId);\r\n  }\r\n\r\n  public getEventStatus(eventId){\r\n    return this.eventStatusMap[eventId];\r\n  }\r\n\r\n  /**\r\n   * Scheduling service management functions\r\n   */\r\n\r\n  public queryForScheduledEventAction(query)\r\n  {\r\n    if(this.canStartNewScheduledEventQueryProcess()) {\r\n      this.startScheduledEventQueryProcess(query);\r\n      switch (query) {\r\n        case this.ACTION_QUERY.SHOULD_START:\r\n          return this.shouldStartNextScheduledEvent();\r\n        case this.ACTION_QUERY.SHOULD_END:\r\n          return this.shouldEndCurrentScheduledEvent();\r\n        case this.ACTION_QUERY.SHOULD_TERMINATE:\r\n          return this.shouldTerminateAdHocRecording();\r\n        case this.ACTION_QUERY.SHOULD_RESUME_INPROGRESS:\r\n          return this.shouldResumeLoadedEvent();\r\n        default:\r\n          this.endScheduledEventQueryProcess(query, this.ACTION_STATUS.UNKNOWN);\r\n          return {};\r\n      }\r\n    } else {\r\n      this.log.info('SchedulingService: Can\\'t process requested scheduled event query: ' +\r\n        query + '. Since current query is still in progress: ' + this.schedulingEventInProgressCall);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * During application life time (not initial load)\r\n   * check if need to start next scheduled event\r\n   */\r\n  private shouldStartNextScheduledEvent(): any\r\n  {\r\n    this.log.debug('SchedulingService: shouldStartNextScheduledEvent()');\r\n    let now = moment().valueOf() / 1000; //adjust time to Kaltura BE time\r\n    //if there is no current event and there is a next event which its' startDate elapsed or has the startNow flag\r\n    if(_.isEmpty(this.currentEvent) && !_.isEmpty(this.nextEvent) &&\r\n      (this.nextEvent['startNow'] || (this.nextEvent['startDate'] && this.nextEvent['startDate'] < now)) ) {\r\n      return {eventId: this.nextEvent['id'], cb: this.startNextEventCallbackHandler.bind(this)};\r\n    } else {\r\n      return this.handleUnNeededQuery(this.ACTION_QUERY.SHOULD_START);\r\n    }\r\n  }\r\n\r\n  private startNextEventCallbackHandler(status)\r\n  {\r\n    this.log.info('SchedulingService: startNextEventCallbackHandler(' + status + ')');\r\n    if(status === this.ACTION_STATUS.SUCCESS) {\r\n      this.log.info('SchedulingService: successfully started next scheduled event: ' + this.nextEvent['id']);\r\n      this.setCurrentEvent(this.nextEvent);\r\n      this.nextEvent = null;\r\n      this.setNextScheduledEvent();\r\n    }\r\n    this.endScheduledEventQueryProcess(this.ACTION_QUERY.SHOULD_START, status);\r\n  }\r\n\r\n  /**\r\n   * During application life time (not initial load)\r\n   * check if need to end current scheduled event\r\n   */\r\n  private shouldEndCurrentScheduledEvent(): any\r\n  {\r\n    this.log.debug('SchedulingService: shouldEndCurrentScheduledEvent()');\r\n    let now = moment().valueOf() / 1000; //adjust time to Kaltura BE time\r\n    //if there is current event and its' end time elapsed\r\n    if(!_.isEmpty(this.currentEvent) && this.currentEvent['endDate'] && this.currentEvent['endDate'] < now) {\r\n      this.log.info('SchedulingService: should end current event: ' + this.currentEvent['id']);\r\n      return {eventId: this.currentEvent['id'], cb: this.endCurrentEventCallbackHandler.bind(this)};\r\n    } else {\r\n      return this.handleUnNeededQuery(this.ACTION_QUERY.SHOULD_END);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * handle current event end callBack,\r\n   * @param status\r\n   */\r\n  private endCurrentEventCallbackHandler(status)\r\n  {\r\n    this.log.info('SchedulingService: endCurrentEventCallbackHandler(' + status + ')');\r\n    this.resetCurrentEvent();\r\n    this.endScheduledEventQueryProcess(this.ACTION_QUERY.SHOULD_END, status);\r\n  }\r\n\r\n  /**\r\n   * check if need to terminate running ad hoc recording before scheduled event starts\r\n   */\r\n  private shouldTerminateAdHocRecording(): any\r\n  {\r\n    this.log.debug('SchedulingService: shouldTerminateAdHocRecording()');\r\n    //if next event start time is less then termination time, and current terminated event id is not euqal to nextEvent.id\r\n    if(!_.isEmpty(this.nextEvent) && this.nextEvent['id'] !== this.lastHandledEventIdForTermination) {\r\n      let now = moment().valueOf() / 1000; //adjust time to Kaltura BE time\r\n      let recTerminationInSec = this.appConfig.getConfigData('config.captureApp.scheduling.recTerminationInSec');\r\n      let terminationTime = this.nextEvent.startDate - recTerminationInSec;\r\n      if(terminationTime < now) {\r\n        return {eventId: this.nextEvent['id'], cb: this.terminateAdHocRecordingCallbackHandler.bind(this)};\r\n      }\r\n    }\r\n    return this.handleUnNeededQuery(this.ACTION_QUERY.SHOULD_END);\r\n  }\r\n\r\n  private terminateAdHocRecordingCallbackHandler(status)\r\n  {\r\n    this.log.info('SchedulingService: terminateAdHocRecordingCallbackHandler(' + status + ')');\r\n    if(status === this.ACTION_STATUS.SUCCESS || status === this.ACTION_STATUS.NOT_NEEDED) {\r\n      this.log.info('successfully handled recording termination before event: ' + this.nextEvent['id'] + '. call response was: ' + status);\r\n      this.lastHandledEventIdForTermination = this.nextEvent['id'];\r\n    }\r\n    this.endScheduledEventQueryProcess(this.ACTION_QUERY.SHOULD_TERMINATE, status);\r\n  }\r\n\r\n  /**\r\n   * check if need to resume loaded scheduled event from persistent data\r\n   * this function should be called on app loading/reloading only\r\n   */\r\n  private shouldResumeLoadedEvent(): any\r\n  {\r\n    this.log.debug('SchedulingService: shouldResumeLoadedEvent()');\r\n    let now = moment().valueOf() / 1000; //adjust time to Kaltura BE time\r\n    //if scheduled event was saved in persistent data and it wasn't ended, it should be in progress\r\n    //need to resume recording automatically\r\n    if(!_.isEmpty(this.currentEvent) && this.currentEvent['startDate'] < now && now < this.currentEvent['endDate']) {\r\n      this.log.info('SchedulingService: Initial loading - Resume recording for event: ' + this.currentEvent['id']);\r\n      return {eventId: this.currentEvent['id'], cb: this.resumeLoadedEventCallbackHandler.bind(this)};\r\n    } else {\r\n      return this.handleUnNeededQuery(this.ACTION_QUERY.SHOULD_RESUME_INPROGRESS);\r\n    }\r\n  }\r\n\r\n  private resumeLoadedEventCallbackHandler(status)\r\n  {\r\n    this.log.info('SchedulingService: resumeLoadedEventCallbackHandler(' + status + ')');\r\n    if(status === this.ACTION_STATUS.SUCCESS) {\r\n      this.log.info('SchedulingService: scheduled event was auto resumed by application: ' + this.currentEvent['id']);\r\n    } else if(status === this.ACTION_STATUS.FAILURE) {\r\n      this.log.info('SchedulingService: scheduled event failed to auto resume by application');\r\n    }\r\n    this.endScheduledEventQueryProcess(this.ACTION_QUERY.SHOULD_RESUME_INPROGRESS, status);\r\n  }\r\n\r\n  public canStartNewScheduledEventQueryProcess()\r\n  {\r\n    return this.schedulingEventInProgressCall === this.ACTION_QUERY.NONE;\r\n  }\r\n\r\n  private handleUnNeededQuery(query)\r\n  {\r\n    this.log.debug('SchedulingService: there is no need for scheduled event query: ' + query);\r\n    this.endScheduledEventQueryProcess(query, this.ACTION_STATUS.NOT_NEEDED);\r\n    return {};\r\n  }\r\n\r\n  private startScheduledEventQueryProcess(query)\r\n  {\r\n    this.log.debug('SchedulingService: startScheduledEventQueryProcess - ' + query);\r\n    this.schedulingEventInProgressCall = query;\r\n  }\r\n\r\n  private endScheduledEventQueryProcess(query, status)\r\n  {\r\n    this.log.debug('SchedulingService: endScheduledEventQueryProcess - ' + query + ' with state: ' + status);\r\n    this.schedulingEventInProgressCall = this.ACTION_QUERY.NONE;\r\n  }\r\n\r\n  private enrichEventsData(data) : Promise<any> {\r\n    let promises = [];\r\n    data.forEach(event => {promises.push(this.enrichEvent(event));});\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  private enrichEvent(event) : Promise<any> {\r\n    if (!this.isLiveEventEnabled()) {\r\n      this.log.info(\"Live event is not enabled - skip enrich process\");\r\n      return Promise.resolve(event); // currently only enrich is live data\r\n    }\r\n\r\n    return this.apiService.getEntry(event['templateEntryId']).toPromise()\r\n      .then((entry) => {\r\n        if (entry[\"type\"] != 7) { //not KalturaEntryType::LIVE_STREAM\r\n          return event;\r\n        } else { // template is LiveEntry - need to add data to event\r\n          let flavorsIds = entry[\"flavorParamsIds\"];\r\n          let baseUrl = entry[\"primaryBroadcastingUrl\"] + \"/\" + entry['streamName'];\r\n          this.addAdminTags(entry);\r\n          this.log.info(\"Live entry in template having baseUrl: [\" + baseUrl+ \"] and flavors: \" + flavorsIds);\r\n          return this.apiService.getFlavors(flavorsIds).toPromise().then((flavors) => {\r\n            return _.merge(event, this.liveManagerService.getLiveData(baseUrl, flavors));\r\n          });\r\n        }\r\n      }).catch((err) => {\r\n        this.log.warn('Failed to enrich event data to ' + event.id + \" with error: \" + utils.stringifyMsg(err));\r\n        return event; //  fallback to regular event without the live data\r\n      });\r\n  }\r\n\r\n  private isLiveEventEnabled() // currently check just by config\r\n  {\r\n    return !(this.appConfig.getConfigData('config.captureApp.scheduling.liveEventsDisable') === true);\r\n  }\r\n\r\n  private addAdminTags(entry) {\r\n    if (entry.hasOwnProperty('adminTags') &&  entry['adminTags'].includes(SchedulingService.KALTURA_CLASSROOM_ADMIN_TAG))  {\r\n      return;\r\n    }\r\n    let newAdminTags = SchedulingService.KALTURA_CLASSROOM_ADMIN_TAG;\r\n    if (entry['adminTags']) {\r\n      newAdminTags += \",\" + entry['adminTags'];\r\n    }\r\n    return this.apiService.updateAdminTags(entry['id'], newAdminTags).toPromise().then ((res) => {\r\n      this.log.info(\"Updated admin tag to \" + res['adminTags']);\r\n      return res;\r\n    }).catch((err) => {\r\n      this.log.warn(\"Failed to update admin tags: \" + utils.stringifyMsg(err));\r\n    });\r\n  }\r\n\r\n  public isLiveScheduledEvent(event) {\r\n    return !!event.primaryRtmp;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/services/scheduling.service.ts","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".capture-device {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.device-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.device-settings-bar {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0 !important;\\n  padding: 6px; }\\n\\n.device-icon-button-active {\\n  opacity: 1 !important; }\\n\\n.device-preview-button {\\n  display: block;\\n  text-decoration: none;\\n  height: 20px;\\n  width: 20px;\\n  text-indent: -9999px;\\n  background-size: 20px 20px;\\n  margin-left: 14px;\\n  margin-top: auto;\\n  margin-bottom: auto; }\\n\\n.device-preview-button:focus {\\n  opacity: 1; }\\n\\n.device-preview-text {\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1;\\n  color: #ffffff;\\n  margin-left: 13px;\\n  margin-top: auto;\\n  margin-bottom: auto; }\\n\\n.device-settings-button {\\n  display: block;\\n  text-decoration: none;\\n  background: url(\" + escape(require(\"../../../assets/svg/20/filter.svg\")) + \") no-repeat top left;\\n  height: 20px;\\n  width: 20px;\\n  text-indent: -9999px;\\n  background-size: 20px 20px;\\n  opacity: 0.5;\\n  margin-right: 14px;\\n  margin-top: auto;\\n  margin-bottom: auto; }\\n\\n.device-settings-button:hover {\\n  opacity: 1; }\\n\\n.device-settings-button[disabled] {\\n  opacity: 0.3; }\\n\\n.device-size-change-button {\\n  display: block;\\n  text-decoration: none;\\n  background: url(\" + escape(require(\"../../../assets/svg/20/full-screen.svg\")) + \") no-repeat top left;\\n  height: 20px;\\n  width: 20px;\\n  text-indent: -9999px;\\n  background-size: 20px 20px;\\n  opacity: 0.5;\\n  margin-right: 14px;\\n  margin-top: auto;\\n  margin-bottom: auto; }\\n\\n.device-size-change-button:hover {\\n  opacity: 1; }\\n\\n.device-preview {\\n  position: relative;\\n  box-sizing: border-box;\\n  opacity: 0.98;\\n  height: 76.4%;\\n  width: 100%;\\n  background-color: #24212A;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.single-device-preview {\\n  max-width: 54%; }\\n\\n.device-temp-preview {\\n  position: absolute;\\n  display: block;\\n  text-decoration: none;\\n  height: 40px;\\n  width: 40px;\\n  top: 50%;\\n  margin-top: -20px;\\n  left: 50%;\\n  margin-left: -20px;\\n  text-indent: -9999px;\\n  background-size: 40px 40px !important;\\n  opacity: 0.3; }\\n\\n.device-preview-stopped {\\n  opacity: 0.7; }\\n\\n.device-preview-stopped:hover {\\n  opacity: 1; }\\n\\n.device-preview-stopped[disabled] {\\n  opacity: 0.5; }\\n\\n.device-preview-stopped:hover[disabled] {\\n  opacity: 0.5; }\\n\\n.device-preview-in-progress {\\n  opacity: 0.7; }\\n\\n.device-preview-in-progress:hover {\\n  opacity: 1; }\\n\\n.device-preview-in-progress[disabled] {\\n  opacity: 0.5; }\\n\\n.device-preview-in-progress:hover[disabled] {\\n  opacity: 0.5; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/styles/device-container.scss\n// module id = ../../../../../src/classroom/classroom-capture/styles/device-container.scss\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".device-settings-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.device-settings-container {\\n  height: 100%;\\n  padding: 3.1% 2.5%;\\n  margin: 0; }\\n\\n.device-settings-panel {\\n  position: relative;\\n  width: 100%;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05); }\\n\\n.device-settings-header {\\n  height: 66px; }\\n\\n.device-settings-icon-container {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.device-settings-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.device-settings-text {\\n  line-height: 66px;\\n  opacity: 0.5;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff; }\\n\\n.device-settings-confirm-buttons {\\n  padding: 0; }\\n\\n.device-settings-back-button {\\n  float: right;\\n  margin-top: 14px;\\n  margin-right: 14px; }\\n\\n.device-settings-body {\\n  overflow: auto;\\n  position: relative;\\n  height: calc(100% - 96px);\\n  margin: 0;\\n  margin-right: 26px;\\n  padding: 26px 43px 0 85px; }\\n\\n.device-settings-col {\\n  padding-bottom: 35px; }\\n\\n.settings-field-title {\\n  width: 221px;\\n  height: 15px;\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #f1f1f1;\\n  padding-bottom: 13px; }\\n\\n.settings-note {\\n  margin-top: 10px;\\n  width: 154px;\\n  height: 15px;\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: italic;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #999999; }\\n\\n.sep-line {\\n  width: 100%;\\n  height: 1px;\\n  border-radius: 1px;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  margin-bottom: 35px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/styles/device-settings.scss\n// module id = ../../../../../src/classroom/classroom-capture/styles/device-settings.scss\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".details-confirm-buttons {\\n  position: relative;\\n  padding: 0; }\\n\\n.edit-details-text {\\n  line-height: 66px;\\n  opacity: 0.5;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff; }\\n\\n.recording-details-body {\\n  position: relative;\\n  height: calc(100% - 66px);\\n  margin: 0;\\n  padding: 26px 0 0 85px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/classroom-capture/styles/recording-details.scss\n// module id = ../../../../../src/classroom/classroom-capture/styles/recording-details.scss\n// module chunks = 0","import '../polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\nimport {AppConfigService} from '../shared/services/infra/app-config.service'\r\nimport { AppModule } from './app.module';\r\nimport {AuthenticationService} from \"../shared/services/infra/authentication.service\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nPromise.all([AppConfigService.loadConfigData(), AuthenticationService.getAuthenticationMode()])\r\n  .then(() => {\r\n    return platformBrowserDynamic().bootstrapModule(AppModule);\r\n  })\r\n  .catch((err) => {\r\n    console.log('bootstrapModule error', err);\r\n  });\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/main.ts","module.exports = \"<div class=\\\"app-scheduling-component\\\">\\r\\n\\r\\n  <div class=\\\"grid app-scheduling-container\\\">\\r\\n\\r\\n    <div class=\\\"app-scheduling-panel col-12 no-margins\\\">\\r\\n\\r\\n      <!-- Header + Icon -->\\r\\n      <div class=\\\"header col-12 \\\">\\r\\n        <div class=\\\"grid-spaceBetween\\\">\\r\\n          <div class=\\\"col-4 no-margins\\\">\\r\\n            <div class=\\\"app-scheduling-icon-container\\\">\\r\\n              <div class=\\\"app-scheduling-icon calendar-icon\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"app-scheduling-text\\\">\\r\\n              {{ 'SCHEDULING.scheduling' | translate }}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"scheduling-actions\\\">\\r\\n            <button class=\\\"refresh actions-button cc-button\\\"\\r\\n                    [attr.aria-label]=\\\"'SCHEDULING.manual_refresh_button_label' | translate\\\"\\r\\n                    (click)=\\\"updateEventsManually()\\\"></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- List scheduling Body -->\\r\\n      <div class=\\\"app-scheduling-body grid col-12 \\\">\\r\\n\\r\\n        <div class=\\\"date-header col-12\\\">\\r\\n          <div class=\\\"date-header-inner grid-spaceBetween no-margins\\\">\\r\\n            <div class=\\\"current-date\\\">{{date.format('MMMM D, YYYY - dddd')}}</div>\\r\\n            <div class=\\\"grid calendar-nav-buttons\\\">\\r\\n              <button class=\\\"arrow-left actions-button cc-button\\\"\\r\\n                      [attr.aria-label]=\\\"'SCHEDULING.previous_day_button_label' | translate\\\"\\r\\n                      (click)=\\\"goOneDayBack()\\\"></button>\\r\\n              <button class=\\\"dot actions-button cc-button\\\"\\r\\n                      [attr.aria-label]=\\\"'SCHEDULING.today_button_label' | translate\\\"\\r\\n                      (click)=\\\"goToToday()\\\"></button>\\r\\n              <button class=\\\"arrow-right actions-button cc-button\\\"\\r\\n                      [attr.aria-label]=\\\"'SCHEDULING.next_day_button_label' | translate\\\"\\r\\n                      (click)=\\\"goOneDayForward()\\\"></button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"scheduling-list col-12 grid\\\">\\r\\n          <div class=\\\"col-12 scheduling-list-inner\\\">\\r\\n            <div *ngFor=\\\"let event of scheduledEvents; trackBy: trackEventBy; let isFirstItem = first\\\"\\r\\n                 [id]=\\\"'_' + event.id\\\"\\r\\n                 class=\\\"schedule-item col-12 grid\\\"\\r\\n                 [ngClass]=\\\"{'event-end': hasEventCompleted(event), 'first-item': isFirstItem}\\\">\\r\\n\\r\\n              <div class=\\\"event-date col-3 no-margins\\\">{{ event.startDate*1000 | time:'LT':'REMOVE_AM_PM_SUFFIX'  }}-{{ event.endDate*1000 | time:'LT':'REMOVE_SPACES' }}</div>\\r\\n\\r\\n              <div class=\\\"col-6 no-margins\\\">\\r\\n                <div class=\\\"truncate2Lines\\\">\\r\\n                  <div *ngIf=\\\"isRecurrenceEvent(event.recurrenceType)\\\"\\r\\n                       class=\\\"recurrence-event recurrence-icon\\\"\\r\\n                       [ngClass]=\\\"{'recurrence-event-complete': hasEventCompleted(event)}\\\">\\r\\n                  </div>\\r\\n                  <span class=\\\"col no-margins\\\" pTooltip=\\\"{{event.summary}}\\\" tooltipPosition=\\\"top\\\" showDelay=\\\"500\\\">{{ event.summary}}</span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"schedule-status col-3\\\">\\r\\n                <div *ngIf=\\\"hasEventCompleted(event)\\\" class=\\\"status-recording\\\">\\r\\n                  <span class=\\\"dot-icon\\\" [ngClass]=\\\"{'complete': true}\\\"></span>\\r\\n                  <span class=\\\"status-text\\\">{{ 'SCHEDULING.completed' | translate }}</span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"isEventAtRecording(event.id)\\\" class=\\\"status-recording\\\">\\r\\n                  <span class=\\\"dot-icon\\\" [ngClass]=\\\"{'recording': true}\\\"></span>\\r\\n                  <span *ngIf=\\\"!isLiveEvent(event)\\\" class=\\\"status-text\\\" [ngClass]=\\\"{'recording': true}\\\">{{ 'SCHEDULING.recording' | translate}}</span>\\r\\n                  <span *ngIf=\\\"isLiveEvent(event)\\\" class=\\\"status-text\\\" [ngClass]=\\\"{'recording': true}\\\">{{ 'SCHEDULING.recording_live' | translate}}</span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"isItTheNextEvent(event.id) && shouldDisplayNextEventButton\\\" class=\\\"event-status\\\">\\r\\n                  <button [disabled]=\\\"isStartNextEventButtonDisabled()\\\" class=\\\"cc-button status-notifier\\\" [ngClass]=\\\"isStartNextEventButtonDisabled() ? 'start-at' : 'start-at-flopping'\\\">\\r\\n                    {{ 'SCHEDULING.startingInXMin' | translate: {'value': countdownTime} }}\\r\\n                  </button>\\r\\n                  <button *ngIf=\\\"!isStartNextEventButtonDisabled()\\\" class=\\\"cc-button status-notifier start-now-flopping\\\" (click)=\\\"startRecordingNextEventNow()\\\">\\r\\n                    {{ 'SCHEDULING.start_now' | translate}}\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/scheduling/components/scheduling.component.html\n// module id = ../../../../../src/classroom/scheduling/components/scheduling.component.html\n// module chunks = 0","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-scheduling-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.app-scheduling-container {\\n  height: 100%;\\n  padding: 3.1% 2.5%;\\n  margin: 0; }\\n\\n.app-scheduling-panel {\\n  width: 100%;\\n  background-color: rgba(153, 153, 153, 0.1);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);\\n  overflow-y: hidden;\\n  padding-left: 0; }\\n\\n.app-scheduling-text {\\n  line-height: 66px;\\n  opacity: 0.5;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff; }\\n\\n.app-scheduling-icon-container {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.app-scheduling-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.app-scheduling-body {\\n  line-height: 1.5;\\n  position: relative;\\n  font-family: Lato;\\n  font-size: 16px;\\n  color: white;\\n  padding: 11px 0 0 85px;\\n  margin-right: 26px;\\n  height: calc(100% - 82px); }\\n\\n.calendar-icon {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/calendar.svg\")) + \") no-repeat top left; }\\n\\n.recurrence-icon {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/recurrence.svg\")) + \") no-repeat top left; }\\n\\n.date-header {\\n  padding: 0 46px 0 0; }\\n\\n.date-header-inner, .schedule-item, .current-date {\\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2); }\\n\\n.schedule-item {\\n  padding: 29px 0;\\n  cursor: default; }\\n\\n.current-date {\\n  border-width: 4px;\\n  padding: 0 8px 0 1px;\\n  font-weight: 600; }\\n\\n.schedule-status {\\n  text-align: left;\\n  position: relative;\\n  font-size: 14px;\\n  font-weight: 600;\\n  font-family: 'Lato';\\n  padding-left: 25px; }\\n\\n.status-text {\\n  padding: 0 10px 0 0;\\n  font-weight: 600; }\\n  .status-text.recording {\\n    color: #db1f26; }\\n\\n.scheduling-list {\\n  overflow-y: auto;\\n  height: calc(100% - 29px); }\\n\\n.scheduling-list-inner {\\n  padding: 0 45px 0 0; }\\n\\n.actions-button {\\n  display: block;\\n  text-decoration: none;\\n  height: 20px;\\n  width: 20px;\\n  text-indent: -9999px;\\n  background-size: 20px 20px;\\n  opacity: 0.7;\\n  margin-left: 9px; }\\n\\n.actions-button:hover {\\n  opacity: 1; }\\n\\n.arrow-right {\\n  background: url(\" + escape(require(\"../../../assets/svg/common/arrow-right.svg\")) + \") no-repeat top left; }\\n\\n.dot {\\n  background: url(\" + escape(require(\"../../../assets/svg/common/dot.svg\")) + \") no-repeat top left;\\n  opacity: 1; }\\n\\n.arrow-left {\\n  background: url(\" + escape(require(\"../../../assets/svg/common/arrow-left.svg\")) + \") no-repeat top left; }\\n\\n.calendar-nav-buttons {\\n  padding-right: 3px; }\\n\\n.scheduling-actions {\\n  margin-top: 24px;\\n  margin-right: 34px; }\\n\\n.refresh {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/refresh.svg\")) + \") no-repeat top left; }\\n\\n.event-date {\\n  padding-left: 1px !important; }\\n\\n.status-recording {\\n  padding-top: 3px; }\\n\\n.dot-icon {\\n  height: 6px;\\n  width: 6px;\\n  display: inline-block;\\n  border-radius: 50%;\\n  margin: 0 2px 1px 0; }\\n  .dot-icon.recording {\\n    background-color: #e03640; }\\n  .dot-icon.complete {\\n    background-color: rgba(255, 255, 255, 0.5); }\\n\\n.event-end {\\n  color: #999999; }\\n\\n.event-status .start-at {\\n  background-color: rgba(0, 0, 0, 0);\\n  display: block; }\\n\\n.event-status .start-at-flopping {\\n  background-color: rgba(0, 0, 0, 0);\\n  display: block; }\\n\\n.event-status .start-now-flopping {\\n  display: none; }\\n\\n.event-status:hover .start-at-flopping {\\n  display: none; }\\n\\n.event-status:hover .start-now-flopping {\\n  background-color: rgba(255, 255, 255, 0.2);\\n  display: block; }\\n\\n.status-notifier {\\n  border: 1px solid #FFFFFF;\\n  border-radius: 100px;\\n  text-align: center;\\n  width: 176px;\\n  padding: 7px 0;\\n  top: -4px;\\n  right: 8px;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #ffffff; }\\n\\n.recurrence-event {\\n  width: 20px;\\n  height: 20px;\\n  margin-right: 12px;\\n  margin-top: 4px; }\\n  .recurrence-event.recurrence-event-complete {\\n    opacity: 0.5; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/scheduling/components/scheduling.component.scss\n// module id = ../../../../../src/classroom/scheduling/components/scheduling.component.scss\n// module chunks = 0","import {\r\n  Component, ElementRef, OnInit, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked\r\n} from '@angular/core';\r\nimport {SchedulingService} from \"../../classroom-capture/services/scheduling.service\";\r\nimport * as moment from 'moment';\r\nimport * as _ from 'lodash';\r\nimport {AppConfigService} from \"../../../shared/services/infra/app-config.service\";\r\nimport {Router, NavigationEnd} from \"@angular/router\";\r\nimport Moment = moment.Moment;\r\nimport {AppLoggerService} from \"../../../shared/services/infra/app-logger.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AppStateService} from \"../../../shared/services/infra/app-state.service\";\r\n\r\n@Component({\r\n  selector: 'scheduling',\r\n  templateUrl: './scheduling.component.html',\r\n  styleUrls:  ['./scheduling.component.scss'],\r\n})\r\nexport class SchedulingComponent implements OnInit {\r\n\r\n  private viewEventsAheadDay: number;\r\n  private date: Moment;\r\n  private shouldDisplayNextEventButton: boolean;\r\n  private countdownTime: string;\r\n\r\n  constructor(private schedulingService: SchedulingService,\r\n              private elementRef: ElementRef,\r\n              private appConfig: AppConfigService,\r\n              private router: Router,\r\n              private logger: AppLoggerService,\r\n              private appStateService: AppStateService) {\r\n    this.date = moment();\r\n  }\r\n\r\n  ngOnInit(){\r\n    // Todo: Create or modify the config service to load on bootstrap with all config data (json).\r\n    let schedulingInfo = this.appConfig.getConfigData('config.captureApp.scheduling');\r\n    if (!Number.isInteger(schedulingInfo.viewEventsAheadDay) || schedulingInfo.viewEventsAheadDay > 30){\r\n      this.viewEventsAheadDay = 14;\r\n      this.logger.info('viewEventsAheadDay maximum number is 30');\r\n    }\r\n    else {\r\n      this.viewEventsAheadDay = schedulingInfo.viewEventsAheadDay;\r\n    }\r\n    this.setOnRouteActions();\r\n\r\n    Observable.timer(0, 1000)\r\n      .subscribe(()=>{\r\n        this.shouldDisplayNextEventButton = this.schedulingService.shouldDisplayNextEventNotifications();\r\n        this.countdownTime = this.shouldDisplayNextEventButton ? this.schedulingService.getTimeToNextEventInMinutes() : '';\r\n      });\r\n  }\r\n\r\n  private setOnRouteActions()\r\n  {\r\n    let that = this;\r\n    //stop / start device preview when navigating in scheduling page\r\n    that.router.events.subscribe((event) => {\r\n      // when entering the page\r\n      if(event instanceof NavigationEnd) {\r\n        if(this.router.url === '/scheduling') {\r\n          this.goToToday();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getter for binding the event-list from the schedulingService\r\n   * @returns event[]\r\n   */\r\n  get scheduledEvents() {\r\n    return this.schedulingService.getScheduledEventsByDay(this.date);\r\n  }\r\n\r\n  /**\r\n   * getter for binding the current-event from the schedulingService\r\n   * @returns event\r\n   */\r\n  get currentEvent() {\r\n    return this.schedulingService.getCurrentEvent();\r\n  }\r\n\r\n  /**\r\n   * getter for binding the next-event from the schedulingService\r\n   * @returns event\r\n   */\r\n  get nextEvent(){\r\n    return this.schedulingService.getNextEvent();\r\n  }\r\n\r\n  /**\r\n   * The function is used for *ngFor loop for tracking new changes\r\n   */\r\n  trackEventBy(index, scheduledEvent) {\r\n    return scheduledEvent ? scheduledEvent.id : undefined;\r\n  }\r\n\r\n  /**\r\n   * Manually refresh the current event list\r\n   */\r\n  updateEventsManually(){\r\n    this.schedulingService.restartSchedulingEventInterval();\r\n  }\r\n\r\n  hasEventCompleted(event){\r\n    return this.schedulingService.getEventStatus(event.id) === SchedulingService.EVENT_STATUS.COMPLETED;\r\n  }\r\n\r\n  isEventAtRecording(eventId){\r\n    return this.currentEvent && this.currentEvent.id === eventId && this.appStateService.isAppRecording();\r\n  }\r\n\r\n  isItTheNextEvent(eventId){\r\n    return this.nextEvent && this.nextEvent.id === eventId;\r\n  }\r\n\r\n  scrollToCurrentTime(){\r\n    let now = moment().valueOf();\r\n    let fetchedCurrentViewEvent = _.find(this.scheduledEvents, event=>{\r\n      return now < (event['endDate']*1000)\r\n    });\r\n    if (fetchedCurrentViewEvent != undefined){\r\n      this.scrollToSomeEvent('#_' + fetchedCurrentViewEvent['id']);\r\n    }\r\n  }\r\n\r\n  scrollToFirstEvent(){\r\n    this.scrollToSomeEvent('.first-item');\r\n  }\r\n\r\n  private scrollToSomeEvent(selector: string){\r\n    let elem = this.elementRef.nativeElement.querySelector(selector);\r\n    if (elem) elem.scrollIntoView(true);\r\n  }\r\n\r\n  goOneDayForward(){\r\n    let endOfCalendar = moment().add(this.viewEventsAheadDay, 'day');\r\n\r\n    if (this.date.isBefore(endOfCalendar, 'day')) {\r\n      this.date.add(1, 'day');\r\n      this.scrollToFirstEvent();\r\n    }\r\n  }\r\n\r\n  goToToday(){\r\n    this.date = moment();\r\n    this.scrollToCurrentTime();\r\n  }\r\n\r\n  goOneDayBack(){\r\n    if (this.date.isAfter(moment(), 'day')) {\r\n      this.date.subtract(1, 'days');\r\n      this.scrollToFirstEvent();\r\n    }\r\n  }\r\n\r\n  isRecurrenceEvent(recurrenceType){\r\n    return recurrenceType === 2;\r\n  }\r\n\r\n  startRecordingNextEventNow(){\r\n    this.schedulingService.startRecordingNextEvent();\r\n  }\r\n\r\n  isStartNextEventButtonDisabled(){\r\n    // blocking when another scheduled event is recording\r\n    return !_.isEmpty(this.currentEvent) && this.appStateService.isAppRecording();\r\n  }\r\n\r\n  isLiveEvent(event) {\r\n    return this.schedulingService.isLiveScheduledEvent(event);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/classroom/scheduling/components/scheduling.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/environments/environment.ts","export class AppConsts {\r\n\r\n  public static readonly MINIMUM_APP_HEIGHT = 220;\r\n  public static readonly MINIMUM_APP_WIDTH = 440;\r\n\r\n  public static readonly DEFAULT_WIN_HEIGHT = 150;\r\n\r\n  public static readonly VIDEO_PREVIEW_HEIGHT = 400;\r\n  public static readonly AUDIO_PREVIEW_HEIGHT = 400;\r\n\r\n  public static readonly ACTIVE_RECORDING_HEIGHT = AppConsts.MINIMUM_APP_HEIGHT;\r\n  public static readonly ACTIVE_RECORDING_PREVIEW_HEIGHT = 450;\r\n  public static readonly ACTIVE_RECORDING_WIDTH = AppConsts.MINIMUM_APP_WIDTH;\r\n\r\n  public static readonly MANAGEMENT_WIN_WIDTH = 1024;\r\n  public static readonly MANAGEMENT_WIN_HEIGHT = 768;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/personal/app.consts.ts","// This file includes polyfills needed by Angular 2 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/polyfills.ts","module.exports = \"<div class=\\\"main-container\\\">\\r\\n\\r\\n  <div class=\\\"app-main-grid\\\">\\r\\n\\r\\n    <div class=\\\"col-12 header-col\\\">\\r\\n\\r\\n      <div class=\\\"app-header\\\">\\r\\n\\r\\n        <div class=\\\"kaltura-logo\\\">\\r\\n          <div [ngClass]=\\\"containerProperties.header.logoIcon\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <!-- extendedButtons -->\\r\\n        <button *ngFor=\\\"let button of containerProperties.header.extendedButtons\\\"\\r\\n          (click)=\\\"button.onClick()\\\" [ngClass]=\\\"[button.class]\\\"\\r\\n                [attr.aria-label]=\\\"getExtendedButtonsAriaLabel(button) | translate\\\">{{ button.title | translate }}</button>\\r\\n\\r\\n        <!-- app-sizing-buttons -->\\r\\n        <div class=\\\"app-sizing-buttons\\\">\\r\\n          <button\\r\\n            *ngIf=\\\"containerProperties.header.buttons.includes('minimize_to_tray')\\\"\\r\\n            [attr.aria-label]=\\\"'MENU.minimize_to_tray_button' | translate\\\"\\r\\n            class=\\\"taskbar-button minimize-to-tray-button\\\"\\r\\n            (click)=\\\"onMinimizeToTrayClick()\\\"></button>\\r\\n\\r\\n          <button\\r\\n            *ngIf=\\\"containerProperties.header.buttons.includes('maximize')\\\"\\r\\n            [attr.aria-label]=\\\"'MENU.maximize_button' | translate\\\"\\r\\n            class=\\\"taskbar-button maximize-restore-button\\\"\\r\\n            (click)=\\\"onMaximizeRestore()\\\"></button>\\r\\n\\r\\n          <button\\r\\n            *ngIf=\\\"containerProperties.header.buttons.includes('minimize')\\\"\\r\\n            [attr.aria-label]=\\\"'MENU.minimize_button' | translate\\\"\\r\\n            class=\\\"taskbar-button minimize-button\\\"\\r\\n            (click)=\\\"onMinimizeClick()\\\"></button>\\r\\n\\r\\n          <button\\r\\n            *ngIf=\\\"containerProperties.header.buttons.includes('debug')\\\"\\r\\n            [attr.aria-label]=\\\"'MENU.debug_button' | translate\\\"\\r\\n            class=\\\"taskbar-button\\\"\\r\\n            aria-hidden=\\\"true\\\"\\r\\n            [hidden]=\\\"!debugState\\\">D</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"nav-bar-col\\\">\\r\\n\\r\\n      <div class=\\\"app-nav-bar\\\">\\r\\n        <ul class=\\\"app-menu\\\">\\r\\n\\r\\n          <li *ngFor=\\\"let link of containerProperties.navbar.links\\\" [ngClass]=\\\"link.linkContainer\\\"\\r\\n              [hidden]=\\\"!shouldRender(link.shouldRender)\\\">\\r\\n            <div class=\\\"nav-container-position\\\">\\r\\n              <a [ngClass]=\\\"['nav-tab-item', link.linkClass]\\\"\\r\\n                 role=\\\"button\\\"\\r\\n                 tabindex=\\\"0\\\"\\r\\n                 [attr.aria-label]=\\\"getLinksAriaLabel(link) | translate\\\"\\r\\n                 (click)=\\\"navigateToLink(link.routerLink, link.shouldDisableWhenNotStable)\\\"\\r\\n                 routerLinkActive=\\\"active\\\"\\r\\n                 oncontextmenu=\\\"return false;\\\"\\r\\n                 [class.disabled]=\\\"(link.shouldDisableWhenNotStable === true && isMenuDisabled()) ? true : null\\\"></a>\\r\\n              <span class=\\\"location-dot\\\" *ngIf=\\\"router.url === link.routerLink\\\"></span>\\r\\n            </div>\\r\\n          </li>\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"app-inner-container-col\\\">\\r\\n      <div class=\\\"app-inner-container\\\">\\r\\n        <div [ngClass]=\\\"{ 'back-light': containerProperties.showBackLight }\\\"></div>\\r\\n        <!-- routing here -->\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/app-container/app-container.component.html\n// module id = ../../../../../src/shared/components/app-container/app-container.component.html\n// module chunks = 0","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".main-container {\\n  position: relative;\\n  height: 100vh;\\n  background-color: #24212a;\\n  opacity: 0.98; }\\n\\n.app-main-grid {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-flow: row wrap;\\n      flex-flow: row wrap;\\n  box-sizing: border-box;\\n  height: 100%;\\n  -webkit-app-region: no-drag;\\n  padding: 1px; }\\n\\n.header-col {\\n  padding: 0; }\\n\\n.app-header {\\n  -webkit-app-region: drag;\\n  background-color: rgba(153, 153, 153, 0.03);\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.05);\\n  height: 80px; }\\n\\n.kaltura-logo {\\n  padding-left: 2.1%;\\n  padding-top: 24px; }\\n\\n.logo-icon {\\n  background: url(\" + escape(require(\"../../../assets/svg/common/logo.svg\")) + \") no-repeat top left;\\n  width: 188px;\\n  height: 28px;\\n  object-fit: contain; }\\n\\n.logo-pc-full {\\n  background: url(\" + escape(require(\"../../../assets/svg/common/logo-pc-full.svg\")) + \") no-repeat top left;\\n  width: 188px;\\n  height: 28px;\\n  object-fit: contain; }\\n\\n.app-sizing-buttons {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  z-index: 9999999999; }\\n\\n.taskbar-button {\\n  -webkit-app-region: no-drag;\\n  display: block;\\n  border: none;\\n  height: 20px;\\n  width: 20px;\\n  background-size: 20px 20px;\\n  opacity: 0.5;\\n  margin-right: 8px;\\n  margin-top: 8px;\\n  float: right; }\\n\\n.taskbar-button:hover, .taskbar-button:active {\\n  outline: none;\\n  opacity: 1; }\\n\\n.taskbar-button:focus {\\n  outline: none;\\n  opacity: 1; }\\n\\n.minimize-button {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/minimize.svg\")) + \") no-repeat top left; }\\n\\n.maximize-restore-button {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/resize-app.svg\")) + \") no-repeat top left; }\\n\\n.minimize-to-tray-button {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/exit.svg\")) + \") no-repeat top left; }\\n\\n/* --- Nav Bar ---*/\\n.app-nav-bar {\\n  width: 64px;\\n  position: absolute;\\n  height: calc(100% - 82px); }\\n\\n.nav-bar-col {\\n  width: 64px;\\n  min-width: 64px;\\n  max-width: 64px !important;\\n  height: calc(100% - 80px);\\n  margin: 0;\\n  padding: 0;\\n  box-shadow: 1px 2px 0 0 rgba(255, 255, 255, 0.06); }\\n\\n.home-nav {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/home-icon.svg\")) + \") no-repeat top left; }\\n\\n.library {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/library.svg\")) + \") no-repeat top left; }\\n\\n.info-nav {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/info.svg\")) + \") no-repeat top left; }\\n\\n.calendar-nav {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/calendar.svg\")) + \") no-repeat top left; }\\n\\n.settings-nav {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/settings.svg\")) + \") no-repeat top left; }\\n\\n.nav-tab-item {\\n  display: block;\\n  text-decoration: none;\\n  height: 20px;\\n  width: 20px;\\n  text-indent: -9999px;\\n  background-size: 20px 20px;\\n  opacity: 0.7;\\n  margin: auto;\\n  cursor: pointer; }\\n\\n.nav-tab-item:hover {\\n  opacity: 1; }\\n\\n.nav-tab-item.disabled {\\n  pointer-events: none;\\n  cursor: default; }\\n\\n.nav-tab-item:focus {\\n  opacity: 1;\\n  outline: none; }\\n\\n.location-dot {\\n  height: 4px;\\n  width: 4px;\\n  display: block;\\n  color: white;\\n  border-radius: 50%;\\n  background-color: white;\\n  opacity: 0.5;\\n  margin: 4px auto 0 auto; }\\n\\n/*--- Inner Conatiner - for App Route ---*/\\n.app-inner-container-col {\\n  width: calc(100% - 66px);\\n  height: calc(100% - 80px);\\n  padding: 0 0 0 1px; }\\n\\n.app-menu {\\n  padding: 46px 0 0;\\n  margin-top: 0; }\\n\\n.app-menu > li {\\n  list-style: none;\\n  height: 56px; }\\n  .app-menu > li.nav-tab-item-bottom {\\n    position: absolute;\\n    bottom: 6px;\\n    height: 40px;\\n    width: 64px; }\\n\\n.back-light {\\n  width: calc(100% - 100px);\\n  height: calc(138%);\\n  background: url(\" + escape(require(\"../../../assets/svg/common/back-light.svg\")) + \") no-repeat top left;\\n  z-index: -5000;\\n  margin: 0;\\n  position: absolute;\\n  top: 30%;\\n  left: 50%;\\n  transform: translate(-50%, -50%); }\\n\\n.app-inner-container {\\n  height: 100%;\\n  position: relative;\\n  background-color: #24212a;\\n  opacity: 0.98; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/app-container/app-container.component.scss\n// module id = ../../../../../src/shared/components/app-container/app-container.component.scss\n// module chunks = 0","import {Component, HostListener, OnInit, Input} from '@angular/core';\r\nimport {TranslateService} from 'ng2-translate';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AppLoggerService} from \"../../services/infra/app-logger.service\";\r\nimport {AppStateService} from \"../../services/infra/app-state.service\";\r\nimport {PanelsService} from \"../../services/infra/panels.service\";\r\nimport {AccessibilityService} from \"../../services/infra/accessability.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\n\r\n\r\nexport declare type AppContainerProperties = {\r\n  header: {\r\n    logoIcon: string,\r\n    buttons: string[],\r\n    extendedButtons?: any[]\r\n  }\r\n  navbar: {\r\n    links: NavBarLink[]\r\n  },\r\n  showBackLight?: boolean\r\n}\r\n\r\nexport declare type NavBarLink = {\r\n  linkContainer?: string,\r\n  linkClass: string,\r\n  label: string,\r\n  routerLink: string,\r\n  shouldRender?: boolean | Function,\r\n  shouldDisableWhenNotStable?: boolean\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-container',\r\n  templateUrl: './app-container.component.html',\r\n  styleUrls: ['./app-container.component.scss']\r\n})\r\nexport class AppContainerComponent implements OnInit {\r\n\r\n  debugState: boolean = false;\r\n  private lastElement: any;\r\n  private debug_mode_UUID = '';\r\n  @Input() containerProperties;\r\n\r\n  constructor(translate: TranslateService,\r\n              private log: AppLoggerService,\r\n              private appState: AppStateService,\r\n              private panelsService: PanelsService,\r\n              private router: Router)\r\n  {}\r\n\r\n  ngOnInit() {\r\n    this.debug_mode_UUID = ipcWrapper.registerForNotification('debug_mode', (data : boolean) => {\r\n      this.debugState = data;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    ipcWrapper.unregisterForNotification('debug_mode', this.debug_mode_UUID);\r\n  }\r\n\r\n  onMinimizeToTrayClick()\r\n  {\r\n    return ipcWrapper.sendSystemCommand('closeApp'); // go to tray\r\n  }\r\n\r\n  onMinimizeClick()\r\n  {\r\n    ipcWrapper.sendSystemCommand('minimize');\r\n  }\r\n\r\n  onMaximizeRestore()\r\n  {\r\n    ipcWrapper.sendSystemCommand('maximize-restore');\r\n  }\r\n\r\n  isMenuDisabled()\r\n  {\r\n    return !this.appState.isAppStable();\r\n  }\r\n\r\n  shouldRender(value = true){\r\n    return (typeof value === 'boolean') ? value : value();\r\n  }\r\n\r\n  getLinksAriaLabel(link)\r\n  {\r\n    return link.ariaLabel ? link.ariaLabel : link.label;\r\n  }\r\n\r\n  getExtendedButtonsAriaLabel(button)\r\n  {\r\n    return button.ariaLabel ? button.ariaLabel : button.title;\r\n  }\r\n\r\n  navigateToLink(link, disableIfUnstable)\r\n  {\r\n    if(disableIfUnstable && this.isMenuDisabled()) {\r\n      return;\r\n    }\r\n\r\n    this.router.navigateByUrl(link)\r\n      .catch((err) => {\r\n        this.log.error('Failed to navigate to: ' + link + '. ' + utils.stringifyMsg(err))\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/app-container/app-container.component.ts","module.exports = \"<div class=\\\"log-collector-container\\\">\\r\\n  <div class=\\\"grid col-12\\\">\\r\\n    <div [attr.aria-label]=\\\"'SETTINGS.logs_upload_desc' | translate\\\" class=\\\"no-margins\\\"\\r\\n         [ngClass]=\\\"{'detail-field-title upload-logs-desc': componentSize && componentSize === 'small',\\r\\n                  'settings-desc col-4': !componentSize || componentSize === 'large'}\\\">\\r\\n      {{'SETTINGS.logs_upload_desc' | translate}}\\r\\n    </div>\\r\\n    <div class=\\\"col-8 no-margins settings-values\\\">\\r\\n      <div class=\\\"grid col-8\\\">\\r\\n        <button fit-text [attr.aria-label]=\\\"'SETTINGS.upload_logs' | translate\\\"\\r\\n                class=\\\"settings-logs-upload-button no-drag small-oval-button focus-once no-margins upload-logs-button\\\"\\r\\n                (click)=\\\"onLogClick()\\\" [disabled]=\\\"readOnly || isUploadingLogs()\\\">\\r\\n          {{'SETTINGS.upload_logs' | translate}}\\r\\n        </button>\\r\\n        <div class=\\\"col-4 no-margins\\\" *ngIf=\\\"isUploadingLogs()\\\">\\r\\n          <p-progressBar class=\\\"progressbar-component logs-progressbar\\\" [value]=\\\"getUploadProgress()\\\"></p-progressBar>\\r\\n        </div>\\r\\n        <button *ngIf=\\\"false\\\" [attr.aria-label]=\\\"'SETTINGS.open_logs_dir' | translate\\\"\\r\\n                class=\\\"settings-open-logs-dir no-drag small-oval-button focus-once col-3 no-margins\\\"\\r\\n                (click)=\\\"onOpenLogsDirClick()\\\">\\r\\n          {{'SETTINGS.open_logs_dir' | translate}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <management-confirm-dialog confirm_dialog_key=\\\"uploaded-logs-token-msg\\\"\\r\\n                             accept_button_text=\\\"{{'COMMON.OK' | translate}}\\\"\\r\\n                             personalize_class=\\\"uploaded-logs-token-dialog\\\">\\r\\n  </management-confirm-dialog>\\r\\n\\r\\n  <management-confirm-dialog class=\\\"leave-page-confirm-dialog\\\"\\r\\n                             confirm_dialog_key=\\\"leave-while-uploading-logs\\\"\\r\\n                             reject_button_text=\\\"{{'COMMON.no' | translate}}\\\"\\r\\n                             accept_button_text=\\\"{{'MANAGEMENT.Confirm_Leave' | translate}}\\\">\\r\\n  </management-confirm-dialog>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.component.html\n// module id = ../../../../../src/shared/components/log-collector/log-collector.component.html\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".log-collector-container {\\n  width: 100%;\\n  height: 100%; }\\n\\n.settings-desc {\\n  opacity: 0.7;\\n  font-family: lato;\\n  font-size: 16px;\\n  font-weight: 300;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1.25;\\n  letter-spacing: normal;\\n  text-align: left;\\n  color: #ffffff; }\\n\\n.logs-progressbar {\\n  margin-top: 9px; }\\n\\n.settings-open-logs-dir {\\n  margin-left: 7px !important; }\\n\\n.upload-logs-button {\\n  width: 115px; }\\n\\n.upload-logs-desc {\\n  width: 210px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.component.scss\n// module id = ../../../../../src/shared/components/log-collector/log-collector.component.scss\n// module chunks = 0","import {Component, Input} from '@angular/core';\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {LogCollectorService} from \"./log-collector.service\";\r\nimport {AppLoggerService} from \"../../services/infra/app-logger.service\";\r\n\r\n@Component({\r\n  selector: 'log-collector',\r\n  templateUrl: './log-collector.component.html',\r\n  styleUrls:  ['./log-collector.component.scss']\r\n})\r\nexport class LogCollectorComponent {\r\n\r\n  @Input()\r\n  componentSize: string;\r\n\r\n  constructor(private logger: AppLoggerService,\r\n              private translate: TranslateService,\r\n              private logCollectorService: LogCollectorService)\r\n  {}\r\n\r\n  onLogClick()\r\n  {\r\n    this.logCollectorService.resetFakeLogUploadProgress();\r\n    this.logCollectorService.onLogClick();\r\n  }\r\n\r\n  getUploadProgress()\r\n  {\r\n    return this.logCollectorService.getFakeLogUploadProgress();\r\n  }\r\n\r\n  isUploadingLogs()\r\n  {\r\n    return this.logCollectorService.isUploadingLogs();\r\n  }\r\n\r\n  onOpenLogsDirClick()\r\n  {\r\n    this.logCollectorService.openLogsDir();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.component.ts","import {NgModule} from \"@angular/core\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {LogCollectorService} from \"./log-collector.service\";\r\nimport {InfraModule} from \"../../services/infra/infra.module\";\r\nimport {LogCollectorComponent} from \"./log-collector.component\";\r\nimport {TranslateModule} from \"ng2-translate\";\r\nimport {ProgressBarModule} from \"primeng/components/progressbar/progressbar\";\r\nimport {ConfirmDialogModule} from \"primeng/components/confirmdialog/confirmdialog\";\r\nimport {ManagementConfirmDialogModule} from \"../managment-confirm-dialog/menagement-confirm-dialog.module\";\r\nimport {SharedDirectives} from \"../../directives/shared-directives.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    InfraModule,\r\n    TranslateModule.forRoot(),\r\n    ProgressBarModule,\r\n    ConfirmDialogModule,\r\n    ManagementConfirmDialogModule,\r\n    SharedDirectives\r\n  ],\r\n  declarations: [\r\n    LogCollectorComponent\r\n  ],\r\n  providers: [\r\n    LogCollectorService\r\n  ],\r\n  exports: [\r\n    LogCollectorComponent\r\n  ]\r\n})\r\nexport class LogCollectorModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.module.ts","import {Injectable} from \"@angular/core\";\r\nimport { UUID } from \"angular2-uuid\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppLoggerService} from \"../../services/infra/app-logger.service\";\r\nimport {AppConfigService} from \"../../services/infra/app-config.service\";\r\nimport {ConfirmationService} from \"primeng/components/common/confirmationservice\";\r\nimport {AppNotificationsService} from \"../../services/infra/app-notifications.service\";\r\n\r\n@Injectable()\r\nexport class LogCollectorService {\r\n\r\n  readonly COLLECTOR_STATUS = {\r\n    IN_PROGRESS: 'IN_PROGRESS',\r\n    SUCCEEDED: 'SUCCEEDED',\r\n    FAILED: 'FAILED'\r\n  };\r\n\r\n  private logUploadProgress = 0;\r\n  private fakeProgressInterval = null;\r\n  private currentLogCollectorId = null;\r\n  private logCollectorStatusCheckInterval = null;\r\n  private uploadingLogs = false;\r\n\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private appConfig: AppConfigService,\r\n              private translate: TranslateService,\r\n              private confirmationService: ConfirmationService,\r\n              private appNotifications: AppNotificationsService)\r\n  {\r\n\r\n  }\r\n\r\n  public getFakeLogUploadProgress()\r\n  {\r\n    return this.logUploadProgress\r\n  }\r\n\r\n  public resetFakeLogUploadProgress()\r\n  {\r\n    this.logUploadProgress = 0;\r\n  }\r\n\r\n  public onLogClick()\r\n  {\r\n    this.uploadingLogs = true;\r\n    this.currentLogCollectorId = UUID.UUID();\r\n    this.startFakeLogsUploadProgress();\r\n    ipcWrapper.sendIPC('collect-logs-and-data', this.currentLogCollectorId);\r\n    this.startCollectorStatusCheckInterval();\r\n  }\r\n\r\n  public isUploadingLogs()\r\n  {\r\n    return this.uploadingLogs;\r\n  }\r\n\r\n  public openLogsDir()\r\n  {\r\n    ipcWrapper.sendIPC('openDirectory', this.appConfig.getConfigData('config.shared.logsDir'))\r\n      .then(success => {\r\n        if(!success) this.log.error('Failed to open logs folder');\r\n      });\r\n  }\r\n\r\n  public clearCollectorStatusCheckInterval()\r\n  {\r\n    this.uploadingLogs = false;\r\n    clearInterval(this.logCollectorStatusCheckInterval);\r\n  }\r\n\r\n  askBeforeLeave() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.isUploadingLogs()) {\r\n        this.translate.get('SETTINGS.uploading_logs_leave_while_uploading')\r\n          .subscribe((leaveWithoutChangesText: string) => {\r\n            this.confirmationService.confirm({\r\n              message: leaveWithoutChangesText,\r\n              key: \"leave-while-uploading-logs\",\r\n              accept: () => {\r\n                this.clearCollectorStatusCheckInterval();\r\n                //since the next call will be to route to different page, there is an issue with primeng confirm dialog UI. we need to wait for it to close...\r\n                setTimeout(() => {\r\n                  resolve(true);\r\n                }, 1000);\r\n              },\r\n              reject: () => {\r\n                resolve(false);\r\n              }\r\n            });\r\n          });\r\n      } else {\r\n        resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  private openUploadedLogsTokenPopup(tokenId)\r\n  {\r\n    this.translate.get('SETTINGS.uploaded_logs_token_message')\r\n      .subscribe((text: string) => {\r\n        this.confirmationService.confirm({\r\n          message: text + \"<br><br><span class='log-token'>\" + tokenId + \"</span>\",\r\n          key: \"uploaded-logs-token-msg\"\r\n        });\r\n      });\r\n  }\r\n\r\n  private startFakeLogsUploadProgress()\r\n  {\r\n    this.logUploadProgress = 4;\r\n    this.fakeProgressInterval = setInterval(() => {\r\n      let operand = this.logUploadProgress > 70 ? 1 : 7;\r\n      this.logUploadProgress += operand;\r\n      if(this.logUploadProgress > 96) this.clearFakeLogsUploadInterval();\r\n    }, 4000);\r\n  }\r\n\r\n  private startCollectorStatusCheckInterval()\r\n  {\r\n    this.logCollectorStatusCheckInterval = setInterval(() => {\r\n      ipcWrapper.sendIPC('get-log-collector-status', this.currentLogCollectorId)\r\n        .then((collector) => {\r\n          if(collector && collector['status'] !== this.COLLECTOR_STATUS.IN_PROGRESS) {\r\n            this.clearFakeLogsUploadInterval();\r\n            if(collector['status'] === this.COLLECTOR_STATUS.SUCCEEDED) {\r\n              this.logUploadProgress = 100;\r\n              setTimeout(() => {\r\n                this.openUploadedLogsTokenPopup(collector['collectionUrl']);\r\n                this.clearCollectorStatusCheckInterval();\r\n              }, 1000); //so the user will see the progress bar at 100%\r\n            } else {\r\n              this.resetFakeLogUploadProgress();\r\n              this.clearCollectorStatusCheckInterval();\r\n              this.appNotifications.sendNotification('SETTINGS.upload_logs_failure', 'warn');\r\n            }\r\n          }\r\n        });\r\n    }, 5000);\r\n  }\r\n\r\n  private clearFakeLogsUploadInterval()\r\n  {\r\n    clearInterval(this.fakeProgressInterval);\r\n  }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/log-collector/log-collector.service.ts","module.exports = \"<p-confirmDialog class=\\\"management-dialog\\\" [ngClass]=\\\"personalize_class\\\" closable=\\\"false\\\" #cd [key]=\\\"confirm_dialog_key\\\" [appendTo]=\\\"'body'\\\" tabindex=\\\"-1\\\" dialog-addon role=\\\"dialog\\\" aria-modal=\\\"true\\\">\\r\\n  <p-footer>\\r\\n    <div class=\\\"warning-icon\\\"></div>\\r\\n    <button *ngIf=\\\"reject_button_text\\\" class=\\\"no-drag small-oval-button reject\\\" type=\\\"button\\\" pButton icon=\\\"\\\" label={{reject_button_text}}\\r\\n            (click)=\\\"cd.reject()\\\" [attr.aria-label]=\\\"reject_button_text\\\"></button>\\r\\n    <button class=\\\"no-drag\\\" [attr.aria-label]=\\\"accept_button_text\\\"\\r\\n            [ngClass]=\\\"{'small-oval-button' : !accept_button_size || accept_button_size === BUTTON_SIZE.small,\\r\\n                        'large-oval-button' : accept_button_size === BUTTON_SIZE.large}\\\"\\r\\n            type=\\\"button\\\" pButton icon=\\\"\\\" label={{accept_button_text}} (click)=\\\"cd.accept()\\\"></button>\\r\\n  </p-footer>\\r\\n</p-confirmDialog>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.html\n// module id = ../../../../../src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.html\n// module chunks = 0","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"p-confirmDialog.management-dialog .ui-confirmdialog {\\n  width: 364px;\\n  border-radius: 4px;\\n  background-color: #24212a;\\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.25);\\n  border: solid 1px #ffffff; }\\n\\np-confirmDialog.management-dialog .ui-dialog-titlebar,\\np-confirmDialog.management-dialog .ui-dialog-titlebar-close {\\n  display: none; }\\n\\np-confirmDialog.management-dialog .ui-confirmdialog.ui-dialog .ui-dialog-content {\\n  max-height: 250px;\\n  padding: 24px; }\\n\\np-confirmDialog.management-dialog .ui-confirmdialog-message {\\n  font-family: Lato;\\n  font-size: 16px;\\n  font-weight: 400;\\n  line-height: 1.25;\\n  letter-spacing: 0.5px;\\n  text-align: left;\\n  color: #ffffff;\\n  white-space: pre-wrap; }\\n\\np-confirmDialog.management-dialog .ui-dialog-footer.ui-widget-content {\\n  padding: 12px 24px 24px 24px; }\\n\\np-confirmDialog.management-dialog .reject {\\n  margin-right: 8px; }\\n\\np-confirmDialog.management-dialog .warning-icon {\\n  position: absolute;\\n  bottom: 15px;\\n  left: 25px;\\n  height: 40px;\\n  width: 40px;\\n  background: url(\" + escape(require(\"../../../assets/svg/40/warn.svg\")) + \") no-repeat top left; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.scss\n// module id = ../../../../../src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.scss\n// module chunks = 0","import {Component, Input, ViewEncapsulation} from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'management-confirm-dialog',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './management-confirm-dialog.component.html',\r\n  styleUrls:  ['./management-confirm-dialog.component.scss']\r\n})\r\nexport class ManagementConfirmDialogComponent {\r\n\r\n  readonly BUTTON_SIZE = {\r\n    small: 'small',\r\n    large: 'large'\r\n  };\r\n\r\n  // to open multiple confirm dialogs we need to supply an id when calling with confirmationService\r\n  @Input() confirm_dialog_key: string;\r\n  @Input() reject_button_text: string;\r\n  @Input() accept_button_text: string;\r\n  @Input() accept_button_size: string;\r\n  @Input() personalize_class: string\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/management-confirm-dialog.component.ts","import {NgModule} from \"@angular/core\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {InfraModule} from \"../../services/infra/infra.module\";\r\nimport {TranslateModule} from \"ng2-translate\";\r\nimport {ManagementConfirmDialogComponent} from \"../managment-confirm-dialog/management-confirm-dialog.component\";\r\nimport {ConfirmDialogModule} from \"primeng/components/confirmdialog/confirmdialog\";\r\nimport {SharedDirectives} from \"../../directives/shared-directives.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    InfraModule,\r\n    TranslateModule.forRoot(),\r\n    ConfirmDialogModule,\r\n    SharedDirectives\r\n  ],\r\n  declarations: [\r\n    ManagementConfirmDialogComponent\r\n  ],\r\n  exports: [\r\n    ManagementConfirmDialogComponent\r\n  ]\r\n})\r\nexport class ManagementConfirmDialogModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/managment-confirm-dialog/menagement-confirm-dialog.module.ts","module.exports = \"<div class=\\\"user-login-component\\\">\\r\\n\\r\\n    <div class=\\\"user-login-panel\\\">\\r\\n\\r\\n        <iframe *ngIf=\\\"loginUrl && !displayErrorMessage\\\" width=\\\"100%\\\" height=\\\"100%\\\" #iframe [src]=\\\"loginUrl\\\" (load)=\\\"onLoad()\\\"></iframe>\\r\\n\\r\\n        <button *ngIf=\\\"displayCancelButton\\\" (click)=\\\"cancelLogin()\\\" [ngClass]=\\\"cancelLoginButtonStyle\\\"\\r\\n                class=\\\"user-login-cancel-button user-login-cancel-icon\\\"></button>\\r\\n\\r\\n        <div *ngIf=\\\"displayErrorMessage\\\" class=\\\"login-error-container\\\">\\r\\n          <div class=\\\"non-valid-inner-container\\\" [attr.aria-label]=\\\"errorMessageString | translate\\\">\\r\\n            <div class=\\\"non-valid-url-alert\\\"></div>\\r\\n            <div class=\\\"non-valid-url-text\\\">\\r\\n              {{ errorMessageString | translate}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      <div *ngIf=\\\"displayLoader\\\" class=\\\"loader\\\"></div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/user-login/user-login.component.html\n// module id = ../../../../../src/shared/components/user-login/user-login.component.html\n// module chunks = 0","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"iframe {\\n  background-color: #333333;\\n  border: none; }\\n\\n.user-login-component {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.user-login-panel {\\n  position: relative;\\n  height: 306px;\\n  width: 545px;\\n  margin: 3.1% auto;\\n  box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.25);\\n  border: solid 2px #ffffff;\\n  background-color: #333333; }\\n\\n.device-settings-header {\\n  height: 66px; }\\n\\n.device-settings-icon-container {\\n  position: relative;\\n  height: 66px;\\n  width: 66px;\\n  background-color: #04af8e;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\\n  margin: 0 16px 0 0;\\n  float: left; }\\n\\n.device-settings-icon {\\n  position: absolute;\\n  top: calc(50% - 10px);\\n  left: calc(50% - 10px);\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px; }\\n\\n.device-settings-text {\\n  line-height: 66px;\\n  opacity: 0.5;\\n  font-family: Lato;\\n  font-size: 14px;\\n  font-weight: 600;\\n  font-style: normal;\\n  font-stretch: normal;\\n  color: #ffffff; }\\n\\n.device-settings-confirm-buttons {\\n  padding: 0; }\\n\\n.device-settings-back-button {\\n  float: right;\\n  margin-top: 14px;\\n  margin-right: 14px; }\\n\\n.device-settings-body {\\n  position: relative;\\n  height: calc(100% - 96px);\\n  margin: 0;\\n  margin-right: 26px;\\n  padding: 26px 43px 0 85px; }\\n\\n.device-settings-col {\\n  padding-bottom: 35px; }\\n\\n.settings-field-title {\\n  width: 221px;\\n  height: 15px;\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #f1f1f1;\\n  padding-bottom: 13px; }\\n\\n.settings-note {\\n  margin-top: 10px;\\n  width: 154px;\\n  height: 15px;\\n  font-family: Lato;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: italic;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #999999; }\\n\\n.sep-line {\\n  width: 100%;\\n  height: 1px;\\n  border-radius: 1px;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  margin-bottom: 35px; }\\n\\n.auth-loading {\\n  width: 100%;\\n  height: 100%;\\n  background-color: grey; }\\n\\n.user-login-cancel-icon {\\n  background: url(\" + escape(require(\"../../../assets/svg/20/exit.svg\")) + \") no-repeat top left; }\\n\\n.user-login-cancel-button {\\n  -webkit-app-region: no-drag;\\n  display: block;\\n  border: none;\\n  height: 20px;\\n  width: 20px;\\n  background-size: 20px 20px;\\n  opacity: 0.5;\\n  position: absolute;\\n  top: 8px;\\n  right: 8px; }\\n\\n.cancelLoginScrollLocation {\\n  right: 30px; }\\n\\n.user-login-cancel-button:hover, .user-login-cancel-button:active {\\n  outline: none;\\n  cursor: pointer;\\n  opacity: 1; }\\n\\n.user-login-cancel-button:focus {\\n  outline: none;\\n  opacity: 1; }\\n\\n.login-error-container {\\n  width: 545px;\\n  height: 306px; }\\n\\n.non-valid-inner-container {\\n  position: absolute;\\n  height: 100px;\\n  top: calc(50% - 50px);\\n  padding: 20px; }\\n\\n.non-valid-url-text {\\n  font-family: 'Lato';\\n  font-size: 20px;\\n  font-weight: 400;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #ffffff; }\\n\\n.non-valid-url-alert {\\n  margin-right: 5px;\\n  float: left;\\n  height: 40px;\\n  width: 40px;\\n  background: url(\" + escape(require(\"../../../assets/svg/40/warn.svg\")) + \") no-repeat top left; }\\n\\n.loader {\\n  bottom: calc(50% - 3px);\\n  left: calc(50% - 131px);\\n  height: 6px;\\n  width: 50%;\\n  position: absolute;\\n  overflow: hidden;\\n  background-color: #333333; }\\n\\n.loader:before {\\n  display: block;\\n  position: absolute;\\n  content: \\\"\\\";\\n  left: -600px;\\n  width: 400px;\\n  height: 6px;\\n  background-color: #04af8e;\\n  background: -webkit-linear-gradient(left, rgba(4, 176, 142, 0) 0%, #04b08e 20%, #04b08e 80%, rgba(4, 176, 142, 0) 100%);\\n  animation: loading 2s linear infinite; }\\n\\n@keyframes loading {\\n  from {\\n    left: -500px; }\\n  to {\\n    left: +600px; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/user-login/user-login.component.scss\n// module id = ../../../../../src/shared/components/user-login/user-login.component.scss\n// module chunks = 0","import {Component, ViewChild, ElementRef, EventEmitter, Output} from \"@angular/core\";\r\nimport {AppLoggerService} from \"../../services/infra/app-logger.service\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\nimport {AuthenticationService} from \"../../services/infra/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'user-login-dialog',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls:  ['./user-login.component.scss']\r\n})\r\nexport class UserLoginComponent {\r\n\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n\r\n  @Output()\r\n  public onSuccessfulSubmit = new EventEmitter();\r\n  @Output()\r\n  public onCancelClick = new EventEmitter();\r\n\r\n  public loginUrl: any = '';\r\n\r\n  public displayErrorMessage = false;\r\n  public errorMessageString = '';\r\n  public displayLoader = true;\r\n  public displayCancelButton = false; //since we are patching a cancel button on top of login iframe, we want to do it in time...\r\n\r\n  public cancelLoginButtonStyle = '';\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private sanitizer: DomSanitizer,\r\n              private authService: AuthenticationService){}\r\n\r\n  ngOnInit()\r\n  {\r\n    this.setLoginUrl()\r\n  }\r\n\r\n  private setLoginUrl()\r\n  {\r\n    this.authService.getAuthLoginUrl()\r\n      .then((url) => {\r\n        this.loginUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n      })\r\n      .catch(() => {\r\n        this.displayLoader = false;\r\n        this.setErrorMessage(\"NOTIFICATIONS.auth_url_invalid\");\r\n        this.displayCancelButton = true;\r\n      });\r\n  }\r\n\r\n  onLoad()\r\n  {\r\n    this.log.info('user login external site was loaded');\r\n\r\n    if(!this.iframe) return;\r\n\r\n    this.displayLoader = true;\r\n\r\n    let iDoc = this.iframe.nativeElement.contentDocument;\r\n\r\n    this.updateCancelLoginButtonStyle(iDoc.body);\r\n\r\n    try {\r\n      let userData = JSON.parse(iDoc.body.innerText.trim());\r\n      if(userData.errorCode) {\r\n        this.handleLoginErrors();\r\n      } else if(userData.userId) {\r\n        this.authService.logIn(userData);\r\n        this.log.info('User was logged in');\r\n        this.onSuccessfulSubmit.emit(true);\r\n      }\r\n    } catch (e) {\r\n      this.log.info('User was not authenticated. ' + e);\r\n      this.displayLoader = false;\r\n    }\r\n    setTimeout(() =>{\r\n      this.displayCancelButton = true;\r\n    }, 1000);\r\n  }\r\n\r\n  cancelLogin()\r\n  {\r\n    this.displayLoader = true;\r\n    this.authService.logOut()\r\n      .then(() => {\r\n        this.onCancelClick.emit(true);\r\n      });\r\n  }\r\n\r\n  updateCancelLoginButtonStyle(iframeBody)\r\n  {\r\n    this.cancelLoginButtonStyle = (iframeBody.scrollHeight === this.iframe.nativeElement.clientHeight) ? '' : 'cancelLoginScrollLocation';\r\n  }\r\n\r\n  private setErrorMessage(errMsg)\r\n  {\r\n    this.displayErrorMessage = true;\r\n    this.errorMessageString = errMsg;\r\n  }\r\n\r\n  /**\r\n   * todo - for more advanced error handling we can use error codes and display relevant error messages\r\n   */\r\n  private handleLoginErrors()\r\n  {\r\n    this.displayLoader = false;\r\n    this.setErrorMessage('NOTIFICATIONS.auth_no_permissions');\r\n    setTimeout(() => {\r\n      this.cancelLogin();\r\n    }, 5000);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/components/user-login/user-login.component.ts","\r\nimport {ElementRef, HostListener, Directive, Input} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'textarea[auto-resize]'\r\n})\r\n\r\nexport class AutoResizeTextarea {\r\n\r\n  @Input()\r\n  maxRows;\r\n  @Input()\r\n  rowHeight;\r\n\r\n  @HostListener('document:keydown',['$event'])\r\n  onInput(event): void\r\n  {\r\n    let that = this;\r\n    setTimeout(function () {\r\n      that.adjust();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void{\r\n    let that = this;\r\n    setTimeout(function () {\r\n      that.adjust();\r\n    });\r\n  }\r\n\r\n  constructor(public element: ElementRef)\r\n  {\r\n    this.element.nativeElement.style.resize = 'none';\r\n    this.element.nativeElement.style['line-height'] = '1';\r\n    this.element.nativeElement.style['padding-bottom'] = '2px';\r\n    this.element.nativeElement.style['margin-bottom'] = '0';\r\n    this.element.nativeElement.style.height = this.getRowMultiplier();\r\n    this.element.nativeElement.style.overflow = 'auto';\r\n  }\r\n\r\n  adjust(): void\r\n  {\r\n    this.element.nativeElement.style.height = 'auto';\r\n    this.element.nativeElement.style.height = this.getRowMultiplier();\r\n  }\r\n\r\n  private getRowMultiplier()\r\n  {\r\n    let rowsCount = Math.round(this.element.nativeElement.scrollHeight / this.rowHeight);\r\n    return rowsCount > this.maxRows ?\r\n      (this.maxRows * this.rowHeight + 'px') : (rowsCount * this.rowHeight + 'px');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/auto-resize-textarea.ts","import {Directive, Self, OnDestroy, AfterViewInit, ElementRef} from \"@angular/core\";\r\nimport {ConfirmDialog} from \"primeng/components/confirmdialog/confirmdialog\";\r\nimport {ConfirmationService} from \"primeng/components/common/confirmationservice\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {AccessibilityService} from \"../services/infra/accessability.service\";\r\n\r\n/*\r\n* The purpose of this directive is to set and remove tabindex because the dialog msg box is always visible.\r\n* and if we will put it permanently the tab will hit an empty box, and if we put tabindex on the not-visible part\r\n* the order of the navigation will be wrong.\r\n* */\r\n@Directive({\r\n  selector: '[dialog-addon]',\r\n})\r\nexport class DialogAddon implements AfterViewInit, OnDestroy {\r\n\r\n  private dialog: ConfirmDialog;\r\n  private confirmSubscription: Subscription;\r\n\r\n  constructor(@Self() component: ConfirmDialog,\r\n              private confirmationService: ConfirmationService,\r\n              private elementRef: ElementRef,\r\n              private accessibilityService: AccessibilityService)\r\n  {\r\n    this.dialog = component;\r\n    this.confirmSubscription = confirmationService.requireConfirmation$\r\n      .delay(200)\r\n      .subscribe((confirmation)=> {\r\n        if (confirmation.key === this.dialog.key) {\r\n            this.elementRef.nativeElement.setAttribute(\"aria-label\", this.dialog.message);\r\n\r\n            // set focus on the first button of the dialog.\r\n            let lastKeyCode = this.accessibilityService.getLastCode();\r\n            if (lastKeyCode === 'Enter' || lastKeyCode === \"Space\" || lastKeyCode === \"NumpadEnter\") {\r\n              this.accessibilityService.setLastCode(null);\r\n              setTimeout(()=> {\r\n                  let button = this.elementRef.nativeElement.querySelector('button');\r\n                  if (button) {\r\n                    button.classList.add('keyboard-focus');\r\n                    button.focus();\r\n                  }\r\n              });\r\n            }\r\n            else {\r\n              this.removeKeyboardFocus();\r\n            }\r\n          }\r\n      });\r\n  }\r\n\r\n  /*\r\n  * remove the tabindex. - otherwise we will hit at tab navigation\r\n  * */\r\n  ngAfterViewInit() {\r\n    let footer = this.elementRef.nativeElement.querySelector('p-footer');\r\n    if (footer) footer.classList.add('dialog-footer');\r\n\r\n    let that = this; //do not remove\r\n\r\n    // Save original function\r\n    let onHideOriginalFunc = this.dialog.hide;\r\n\r\n    //override original keyDown function\r\n    this.dialog.hide = function () {\r\n      // the dialog is a general component, and we want to keep the message updated\r\n      that.elementRef.nativeElement.removeAttribute(\"tabindex\");\r\n      that.elementRef.nativeElement.removeAttribute(\"aria-label\");\r\n\r\n      //call original onKeyDown function\r\n      onHideOriginalFunc.call(that.dialog);\r\n    };\r\n\r\n\r\n    Object.defineProperty(this.dialog, '_visible', {\r\n      get: function() {\r\n        return this.__visible;\r\n      },\r\n      set: function(isDialogVisible) {\r\n        //return if visibility didn't change\r\n        if(this.__visible === isDialogVisible) return;\r\n\r\n        //set new panel state\r\n        this.__visible = isDialogVisible;\r\n\r\n        that.accessibilityService.toggleNavLimitationOnDialog(this.__visible, that.elementRef.nativeElement);\r\n\r\n        // remove focus on the first button of the dialog.\r\n        if (!this.__visible && that.elementRef) {\r\n          that.removeKeyboardFocus();\r\n        }\r\n      },\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  private removeKeyboardFocus() {\r\n    setTimeout(()=> {\r\n      let button = this.elementRef.nativeElement.querySelector('button');\r\n      if (button) {\r\n        button.classList.remove('keyboard-focus');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.confirmSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/dialog-addon.ts","import {Directive, AfterViewInit, Self, Output, EventEmitter, ElementRef, Input} from \"@angular/core\";\r\nimport {Dropdown} from \"primeng/components/dropdown/dropdown\";\r\nimport * as _ from \"lodash\";\r\n\r\n/**\r\n * Enhancement features for ngPrime dropdown:\r\n * 1. Dropdown behaviour changes - Arrows (Up/Down) will not select item only after Enter/Space\r\n *\r\n * 2. Accessibility:\r\n *    * Tab, Enter and Arrows (Up/Down) navigation are achieved\r\n *    * Screen reader support due to adding WAI-ARIA attributes\r\n *\r\n * 3. Scroll to Element option when needed - in case at the bottom of a scroll div (Css limitation issue)\r\n */\r\n@Directive({\r\n  selector: '[dropdown-addon]',\r\n})\r\nexport class DropdownAddon implements AfterViewInit {\r\n\r\n  dropdown: any;\r\n  lastKeydownEvent: any;\r\n  initialSelection: any;\r\n  isFirstArrow: boolean;\r\n  @Output() onCustomChange = new EventEmitter();\r\n  @Input('dropdown-addon-autoscroll') isAutoScrollToElement: boolean;\r\n\r\n  constructor(@Self() component: Dropdown, private elementRef: ElementRef)\r\n  {\r\n    this.dropdown = component;\r\n    this.isFirstArrow = true;\r\n    this.listenToPanelVisibilityAndEmitChange();\r\n  }\r\n\r\n  ngAfterViewInit()\r\n  {\r\n    let that = this; //do not remove\r\n    // Save original keyDown function\r\n    let onKeydownOriginalFunc = this.dropdown.onKeydown;\r\n    //override original keyDown function\r\n    this.dropdown.onKeydown = function (event) {\r\n\r\n      if (event.altKey || event.metaKey) return;\r\n\r\n      //saving last key event for the setter handling\r\n      that.lastKeydownEvent = event;\r\n\r\n      // if dropdown is closed - on arrow down: open the dropdown\r\n      if(!this.panelVisible && (event.code === 'ArrowDown' || event.code === 'ArrowUp' || event.code === 'Enter')) {\r\n        that.initialSelection = this.selectedOption;\r\n        that.isFirstArrow = false;\r\n        this.show(this.panel, this.container);\r\n\r\n        if (event.code === 'Enter'){\r\n          return;\r\n        }\r\n      }\r\n      else if(event.code === 'Enter' || event.code === 'Escape'){\r\n        // On Enter or on Escape reset isFirstArrow (to be first arrow in the new arrow key-down)\r\n        that.isFirstArrow = true;\r\n      }\r\n\r\n      //call original onKeyDown function\r\n      onKeydownOriginalFunc.call(that.dropdown, event);\r\n    };\r\n\r\n    // At last, add accessibility for the dropdown\r\n    this.addDropdownAccessibility();\r\n  }\r\n\r\n  private listenToPanelVisibilityAndEmitChange() {\r\n    let that = this; //do not remove\r\n    this.dropdown._panelVisible = false; // init it to close\r\n\r\n    Object.defineProperty(this.dropdown, 'panelVisible', {\r\n      get: function() {\r\n        return this._panelVisible;\r\n      },\r\n      set: function(isPanelVisible) {\r\n        that.addListItemAccessibilityOnRuntime(isPanelVisible);\r\n\r\n        //return if panel visibility didn't change\r\n        if(this._panelVisible === isPanelVisible) return;\r\n        //set new panel state\r\n        this._panelVisible = isPanelVisible;\r\n        // on escape: return and set initial selection\r\n        if (that.lastKeydownEvent && that.lastKeydownEvent.code === 'Escape') {\r\n          this.selectedOption = that.initialSelection;\r\n          this.value = that.initialSelection.value;\r\n          that.lastKeydownEvent = null;\r\n          return;\r\n        }\r\n        //on first opening of the panel - save initial selection\r\n        if (isPanelVisible) {\r\n          that.initialSelection = this.selectedOption;\r\n        } else if(this.selectedOption){\r\n          //panel was closed and we want to trigger change event if needed\r\n          let isValueChanged = that.initialSelection ? (that.initialSelection.value !== this.selectedOption.value) : true;\r\n          if (isValueChanged) {\r\n            that.initialSelection = this.selectedOption;\r\n            that.lastKeydownEvent = null;\r\n\r\n            // choose the new selection\r\n            // ngPrime: dropdown.ts: onKeydown(event) like down case + impl as selectItem(event, option)\r\n            this.selectedOptionUpdated = true;\r\n            this.value = this.selectedOption.value;\r\n            this.onModelChange(this.value);\r\n            that.onCustomChange.emit();\r\n          }\r\n        }\r\n\r\n        that.autoScrollToElement(isPanelVisible);\r\n      },\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  private autoScrollToElement(isPanelVisible) {\r\n    if (this.isAutoScrollToElement === true && isPanelVisible) {\r\n      setTimeout(() => {\r\n        let elem = this.elementRef.nativeElement.querySelector('.ui-dropdown-items-wrapper');\r\n        if (elem) elem.scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n      });\r\n    }\r\n  }\r\n\r\n  private addListItemAccessibilityOnRuntime(isPanelVisible) {\r\n    if (isPanelVisible) {\r\n      setTimeout(() => {\r\n        let uiDropdownList = this.elementRef.nativeElement.querySelector('.ui-dropdown-list');\r\n        if (uiDropdownList) {\r\n          uiDropdownList.setAttribute(\"role\", \"menu\");\r\n        }\r\n\r\n        let uiDropdownItems = this.elementRef.nativeElement.querySelectorAll('.ui-dropdown-item');\r\n        if (uiDropdownItems) {\r\n          _.each(uiDropdownItems, (dropdownItem) => {\r\n            dropdownItem.setAttribute(\"role\", \"menuitem\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private addDropdownAccessibility() {\r\n    let uiDropdownPanel = this.elementRef.nativeElement.querySelector('.ui-dropdown-panel');\r\n    if (uiDropdownPanel) uiDropdownPanel.setAttribute(\"role\", \"none\");\r\n\r\n    let uiDropdownItemsWrapper = this.elementRef.nativeElement.querySelector('.ui-dropdown-items-wrapper');\r\n    if (uiDropdownItemsWrapper) uiDropdownItemsWrapper.setAttribute(\"role\", \"none\");\r\n\r\n    let uiHelperHiddenAccessible = this.elementRef.nativeElement.querySelectorAll('.ui-helper-hidden-accessible');\r\n    if (uiHelperHiddenAccessible && uiHelperHiddenAccessible[1]) uiHelperHiddenAccessible[1].setAttribute(\"role\", \"none\");\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/dropdown-addon.ts","import {AfterViewInit, Directive, ElementRef, Input} from \"@angular/core\";\r\n\r\n/**\r\n * auto fix text into an element height\r\n * //todo handle width as well\r\n */\r\n@Directive({\r\n  selector: '[fit-text]',\r\n})\r\nexport class FitText implements AfterViewInit {\r\n\r\n  @Input()\r\n  minFontSize = 10;\r\n  @Input()\r\n  defaultFontSize = 10;\r\n\r\n  readonly element;\r\n\r\n  constructor(el: ElementRef)\r\n  {\r\n    this.element = el.nativeElement;\r\n  }\r\n\r\n  ngAfterViewInit(): void\r\n  {\r\n    if(!this.element) return;\r\n\r\n    while(this.element.clientHeight < this.element.scrollHeight) {\r\n      this.decreaseFontSize();\r\n    }\r\n  }\r\n\r\n  private decreaseFontSize(): void\r\n  {\r\n    let size = this.getCurrentFontSize();\r\n    this.element.style.fontSize = --size + 'px';\r\n  }\r\n\r\n  private getCurrentFontSize(): number\r\n  {\r\n    let fontSize = window.getComputedStyle(this.element, null).getPropertyValue('font-size');\r\n    return fontSize ? parseInt(fontSize) : this.defaultFontSize;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/fit-text.ts","import { NgModule } from '@angular/core';\r\nimport {AutoResizeTextarea} from \"./auto-resize-textarea\";\r\nimport {DropdownAddon} from \"./dropdown-addon\";\r\nimport {SpinnerNumber} from \"./spinner-number\";\r\nimport {TagsChips} from \"./tags-chips\";\r\nimport {TooltipAddon} from \"./tooltip-addon\";\r\nimport {DialogAddon} from \"./dialog-addon\";\r\nimport {TagsAutocomplete} from \"./tags-autocomplete\";\r\nimport {FitText} from \"./fit-text\";\r\nimport {ToggledClickThroughAddon} from \"./toggled-click-through-addon\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AutoResizeTextarea,\r\n    DropdownAddon,\r\n    SpinnerNumber,\r\n    TagsChips,\r\n    TooltipAddon,\r\n    DialogAddon,\r\n    TagsAutocomplete,\r\n    FitText,\r\n    ToggledClickThroughAddon\r\n  ],\r\n  exports: [\r\n    AutoResizeTextarea,\r\n    DropdownAddon,\r\n    SpinnerNumber,\r\n    TagsChips,\r\n    TooltipAddon,\r\n    DialogAddon,\r\n    TagsAutocomplete,\r\n    FitText,\r\n    ToggledClickThroughAddon\r\n  ]\r\n})\r\nexport class SharedDirectives {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/shared-directives.module.ts","/**\r\n * Created by igor.shevach on 7/20/2017.\r\n */\r\nimport {Directive, AfterViewInit, Self, EventEmitter, Input} from \"@angular/core\";\r\nimport {Spinner} from \"primeng/components/spinner/spinner\";\r\nimport {AppLoggerService} from \"../services/infra/app-logger.service\";\r\n\r\n@Directive({\r\n  selector: '[spinner-number]',\r\n})\r\nexport class SpinnerNumber implements AfterViewInit {\r\n\r\n  private spinner: Spinner;\r\n  private inputEl: HTMLInputElement;\r\n\r\n  // hook min/max properties to calculate maxlength value\r\n  @Input()\r\n  set min(value: any) {\r\n     value = Number(value);\r\n     if (this.spinner.min !== value) {\r\n         this.logger.info(\"SpinnerNumber.setMin \" + this.spinner.min + \" value \" + value);\r\n         this.spinner.min = value;\r\n         this.updateInputLength();\r\n     }\r\n  }\r\n\r\n  @Input()\r\n  set max(value: any) {\r\n      value = Number(value);\r\n      if (this.spinner.max !== value) {\r\n          this.logger.info(\"SpinnerNumber.setMax \" + this.spinner.max + \" value \" + value);\r\n          this.spinner.max = value;\r\n          this.updateInputLength();\r\n      }\r\n  }\r\n\r\n  constructor(@Self() component: Spinner,private logger : AppLoggerService)\r\n  {\r\n     this.spinner = component;\r\n  }\r\n\r\n  ngAfterViewInit()\r\n  {\r\n      this.logger.debug(\"SpinnerNumber.ngAfterViewInit\");\r\n\r\n      //remember input element which is 1-st child of span which 1-st child of p-spinner element\r\n      this.inputEl = this.spinner.el.nativeElement.querySelector(\"input\");\r\n\r\n      /*\r\n        spinner has nasty behaviour:\r\n        when completely deleting contents of an input it decides to display spinner.min\r\n      */\r\n      let parseValue = this.spinner.parseValue.bind(this.spinner);\r\n      this.spinner.parseValue = (val: string):number=> {\r\n          if (val.trim() === '') {\r\n              this.logger.debug(\"empty value! -> \" + this.spinner.value);\r\n              return this.spinner.value;\r\n          } else {\r\n              return parseValue(val);\r\n          }\r\n      };\r\n\r\n\r\n      /*\r\n        make sure to sync this.spinner.valueAsString with contents of an input at all times:\r\n        when underlying logic decides not to update valueAsString/value of a spinner\r\n        then input looks completely out of sync\r\n      */\r\n      let formatValue = this.spinner.formatValue.bind(this.spinner);\r\n      this.spinner.formatValue = () => {\r\n          formatValue();\r\n          this.inputEl.value = this.spinner.valueAsString;\r\n      };\r\n\r\n  }//end of ngAfterViewInit\r\n\r\n\r\n  // calculate string length for particular value val\r\n  private getValLength(val: number): number {\r\n      this.spinner.value = val;\r\n      this.spinner.formatValue();\r\n      this.logger.info(\"value \" + val + \" -> \" + this.spinner.valueAsString + \" = \" + this.spinner.valueAsString.length);\r\n      return this.spinner.valueAsString.length;\r\n  };\r\n\r\n  // calculate maxlength property for specific min-max range\r\n  private updateInputLength() {\r\n\r\n      let value = this.spinner.value;\r\n\r\n      let maxlength = Math.max(this.getValLength(this.spinner.min), this.getValLength(this.spinner.max));\r\n\r\n      this.spinner.value = value;\r\n      this.spinner.formatValue();\r\n\r\n      this.logger.info(\"SpinnerNumber.updateInputLength range: \" + this.spinner.min + \" \" + this.spinner.max + \" maxlength: \" + maxlength);\r\n\r\n      this.spinner.maxlength = maxlength;\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/spinner-number.ts","import {Directive, AfterViewInit, Self, ElementRef} from \"@angular/core\";\r\nimport {AutoComplete} from \"primeng/components/autocomplete/autocomplete\";\r\n\r\n@Directive({\r\n  selector: '[tags-autocomplete]',\r\n})\r\nexport class TagsAutocomplete implements AfterViewInit {\r\n\r\n  private enterEvent = {\r\n    which: 13,\r\n    preventDefault: function () {\r\n      return;\r\n    }\r\n  };\r\n\r\n  private escaped = false;\r\n\r\n  autocomplete: any;\r\n\r\n  constructor(@Self() component: AutoComplete, private elementRef: ElementRef) {\r\n    this.autocomplete = component;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    this.changeIsSelected();\r\n    this.modifyChipsOriginalFunctions();\r\n    this.registerUIEvents();\r\n  }\r\n\r\n  private registerUIEvents()\r\n  {\r\n    let element = this.elementRef.nativeElement.querySelectorAll('.ui-autocomplete-input-token>input')[0];\r\n    element.onblur = () =>\r\n    {\r\n      if(this.escaped) {\r\n        element.value = \"\";\r\n        this.autocomplete.highlightOption = '';\r\n        this.autocomplete.hide();\r\n        this.escaped = false;\r\n      } else if (!this.autocomplete.panelVisible) {\r\n        this.autocomplete.onKeydown(this.enterEvent, this.elementRef.nativeElement.querySelectorAll('.ui-autocomplete-input-token>input')[0]);\r\n      }\r\n    };\r\n  }\r\n\r\n  private changeIsSelected()\r\n  {\r\n    this.autocomplete.isSelected = (val) => {\r\n      return false;\r\n    };\r\n  }\r\n\r\n  private modifyChipsOriginalFunctions()\r\n  {\r\n    let that = this;\r\n    this.escaped = false;\r\n\r\n    let originalKeydown = this.autocomplete.onKeydown;\r\n    this.autocomplete.onKeydown = (event, inputEL) => {\r\n      switch (event.which) {\r\n        case 27:\r\n          this.escaped = true;\r\n          break;\r\n        case 13:\r\n        case 186:\r\n        case 188:\r\n            this.autocomplete.highlightOption =\r\n              this.autocomplete.highlightOption ?\r\n                this.autocomplete.highlightOption :\r\n                this.elementRef.nativeElement.querySelectorAll('.ui-autocomplete-input-token>input')[0].value;\r\n            if(this.autocomplete.highlightOption.trim()) {\r\n              this.autocomplete.highlightOption = this.autocomplete.highlightOption.substring(0, 255);  //tags limitation in kaltura server\r\n              this.autocomplete.selectItem(this.autocomplete.highlightOption);\r\n              this.autocomplete.highlightOption = '';\r\n              this.autocomplete.hide();\r\n            }\r\n          event.preventDefault();\r\n          break;\r\n        default:\r\n          originalKeydown.call(that.autocomplete, event, inputEL);\r\n          break;\r\n      }\r\n    };\r\n\r\n    let origSelectItem = this.autocomplete.selectItem;\r\n    this.autocomplete.selectItem = (option) => {\r\n      //first call original func.\r\n      origSelectItem.call(that.autocomplete, option);\r\n      //clearing values to avoid duplication by OnBlur event (due do mouse click)\r\n      this.autocomplete.highlightOption = '';\r\n      this.autocomplete.hide();\r\n    };\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/tags-autocomplete.ts","import {Directive, AfterViewInit, Self, ElementRef} from \"@angular/core\";\r\nimport {Chips} from \"primeng/components/chips/chips\";\r\n\r\n@Directive({\r\n  selector: '[tags-chips]',\r\n})\r\nexport class TagsChips implements AfterViewInit {\r\n\r\n  private enterEvent = {\r\n    which: 13,\r\n    preventDefault: function () {\r\n      return;\r\n    }\r\n  };\r\n  chips: any;\r\n\r\n  constructor(@Self() component: Chips, private elementRef: ElementRef) {\r\n    this.chips = component;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let source = this.elementRef.nativeElement.querySelectorAll('.ui-chips-input-token>input');\r\n    //set max tag length to 255 chars\r\n    if(source[0]) source[0].maxLength = 255;\r\n    //add tag on blur\r\n    this.chips.registerOnTouched(() => {\r\n      //adding new tag 'on blur'\r\n      let blurred = this.elementRef.nativeElement.querySelectorAll('.ui-chips-input-token>input');\r\n      if(blurred[0] && blurred[0]['value']) {\r\n        this.chips.onKeydown(this.enterEvent, source[0]);\r\n      }\r\n    });\r\n    this.modifyChipsOnKeydown();\r\n  }\r\n\r\n  private modifyChipsOnKeydown()\r\n  {\r\n    let that = this;\r\n    let originalKeydown = this.chips.onKeydown;\r\n    this.chips.onKeydown = (event, inputEL) => {\r\n      switch (event.which) {\r\n        case 186:\r\n        case 188:\r\n          originalKeydown.call(that.chips, this.enterEvent, inputEL);\r\n          event.preventDefault();\r\n          break;\r\n        default:\r\n          originalKeydown.call(that.chips, event, inputEL);\r\n          break;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/tags-chips.ts","import {Directive, OnDestroy, HostListener, Self, ElementRef} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../utils/ipcWrapper\";\r\n\r\n\r\n@Directive({\r\n  selector: '[toggled-click-through-addon]',\r\n})\r\nexport class ToggledClickThroughAddon implements OnDestroy {\r\n\r\n  constructor(private elementRef: ElementRef) {\r\n  }\r\n\r\n  @HostListener('mouseover', ['$event.target']) onMouseOver(target) {\r\n    if (this.elementRef.nativeElement.className === target.className) {\r\n      ipcWrapper.sendIPC(\"setIgnoreMouseEvents\",true);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseout', ['$event.target']) onMouseOut(target) {\r\n    ipcWrapper.sendIPC(\"setIgnoreMouseEvents\",false);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    ipcWrapper.sendIPC(\"setIgnoreMouseEvents\",false);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/toggled-click-through-addon.ts","import {Directive, Self, OnDestroy, AfterViewInit, HostListener} from \"@angular/core\";\r\nimport {Tooltip} from \"primeng/components/tooltip/tooltip\";\r\n\r\n@Directive({\r\n  selector: '[tooltip-addon]',\r\n})\r\nexport class TooltipAddon implements AfterViewInit, OnDestroy {\r\n\r\n  tooltip: Tooltip;\r\n\r\n  constructor(@Self() component: Tooltip) {\r\n    this.tooltip = component;\r\n  }\r\n\r\n  //make sure tooltips will be closed on app click (prevents overlap tooltips and dialogs)\r\n  @HostListener('document:click', ['$event'])\r\n  onDocumentClick(){\r\n    if (this.tooltip.container)  {\r\n      this.tooltip.destroy();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit()\r\n  {\r\n    let that = this; // Do not remove\r\n    // Save original create function\r\n    let originalCreateFunction = this.tooltip.create;\r\n    //override original create function\r\n    this.tooltip.create = function () {\r\n      if (this.container)  {\r\n        this.destroy();\r\n      }\r\n      //call original create function\r\n      originalCreateFunction.call(that.tooltip);\r\n    };\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tooltip.deactivate();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/directives/tooltip-addon.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport Duration = moment.Duration;\r\nimport * as _ from 'lodash';\r\n\r\n@Pipe({\r\n  name: 'duration'\r\n})\r\nexport class DurationPipe implements PipeTransform{\r\n\r\n  transform(durationNumber: number) : string {\r\n    if (_.isFinite(durationNumber)) {\r\n      let duration = moment.duration(durationNumber);\r\n      return this.padTo2Digits(duration.hours()) + ':' +  this.padTo2Digits(duration.minutes()) + ':' + this.padTo2Digits(duration.seconds());\r\n    }\r\n    else {\r\n     return '';\r\n    }\r\n  }\r\n\r\n  private padTo2Digits(number: number) {\r\n    return (number < 10 ? '0' : '') + number;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/duration.pipe.ts","import {Pipe} from \"@angular/core\";\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\n@Pipe({name: 'safeHtml'})\r\nexport class SafyPipe {\r\n  constructor(private sanitizer:DomSanitizer){}\r\n\r\n  transform(html) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/safe.pipe.ts","import { NgModule } from '@angular/core';\r\nimport {TimerPipe} from \"./timer.pipe\";\r\nimport {DurationPipe} from \"./duration.pipe\";\r\nimport {TimePipe} from \"./time.pipe\";\r\nimport {TruncatePipe} from \"./truncate.pipe\";\r\nimport {SafyPipe} from \"./safe.pipe\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TimerPipe,\r\n    DurationPipe,\r\n    TimePipe,\r\n    TruncatePipe,\r\n    SafyPipe\r\n  ],\r\n  exports: [\r\n    TimerPipe,\r\n    DurationPipe,\r\n    TimePipe,\r\n    TruncatePipe,\r\n    SafyPipe\r\n  ]\r\n})\r\nexport class SharedPipes {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/shared-pipes.module.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport {SystemDataService} from \"../services/infra/system-data.service\";\r\n\r\n@Pipe({\r\n  name: 'time'\r\n})\r\nexport class TimePipe implements PipeTransform {\r\n\r\n  constructor(private systemData : SystemDataService) {\r\n  }\r\n\r\n  transform(seconds: number, format: string, suffix: string): string\r\n  {\r\n    let time = moment(seconds).locale(this.systemData.getLang()).format(format);\r\n\r\n    if (suffix === 'REMOVE_AM_PM_SUFFIX'){\r\n      time = time.split(' ')[0];\r\n    }\r\n    else if (suffix === 'REMOVE_SPACES'){\r\n      time = time.replace(' ', '').toLowerCase();\r\n    }\r\n\r\n    return time;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/time.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'timer'\r\n})\r\nexport class TimerPipe implements PipeTransform {\r\n\r\n  transform(seconds: number): string\r\n  {\r\n    seconds=Math.round(seconds);\r\n    let hours = Math.floor(seconds / 3600);\r\n    seconds = seconds - hours * 3600;\r\n    let minutes = Math.floor(seconds/ 60);\r\n    seconds = seconds - minutes  * 60;\r\n\r\n    return this.getTimerString(hours, minutes, seconds);\r\n  }\r\n\r\n  getTimerString(hours, minutes, seconds)\r\n  {\r\n    return this.getAsTwoDigits(hours) + ':' + this.getAsTwoDigits(minutes) + ':' + this.getAsTwoDigits(seconds);\r\n  }\r\n\r\n  getAsTwoDigits(number)\r\n  {\r\n    return number < 10 ? '0' + number : number;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/timer.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\nexport class TruncatePipe implements PipeTransform{\r\n\r\n  transform(value: string, ...args) : string {\r\n    let limit = args.length > 0 ? parseInt(args[0], 10) : 20;\r\n    let trail = args.length > 1 ? args[1] : '...';\r\n\r\n    return value.length > limit ? value.substring(0, limit) + trail : value;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/pipes/truncate.pipe.ts","import {Injectable} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport * as _ from \"lodash\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {DeviceSettingsServiceBase}  from \"./device-settings-base.service\"\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\n\r\n@Injectable()\r\nexport class AudioDeviceSettingsService extends DeviceSettingsServiceBase {\r\n\r\n  //\r\n  isCaptureSystemAudioOn = null;\r\n\r\n  selectedAudioDeviceDelay = 0;\r\n\r\n  sinkStartTimeout = 10000;\r\n\r\n  deviceDelayKey = '';\r\n\r\n  constructor(persistencyService: AppPersistentDataService,\r\n              appState: AppStateService,\r\n              log: AppLoggerService,\r\n              appConfig:AppConfigService,\r\n              private devicePreviewService: DevicePreviewService)\r\n  {\r\n    super(persistencyService,appState,log,appConfig)\r\n    this.addSession('audio')\r\n  }\r\n\r\n  set selectedAudioDevice(value: any){\r\n    this.sessions.audio.selectedDevice = value\r\n  }\r\n\r\n  get selectedAudioDevice() : any{\r\n    return this.sessions.audio.selectedDevice\r\n  }\r\n\r\n  set selectedInputType(value: any){\r\n    this.sessions.audio.selectedInputType = value\r\n  }\r\n\r\n  get selectedInputType() : any{\r\n    return this.sessions.audio.selectedInputType\r\n  }\r\n\r\n  get audioInputTypes() : any{\r\n    return this.sessions.audio.InputTypes\r\n  }\r\n  /**\r\n   * always return a new promise for audio settings data\r\n   * @returns {Promise<T>}\r\n   */\r\n  loadAudioUserSettings()\r\n  {\r\n    return this.loadUserSettings('audio')\r\n  }\r\n\r\n  loadAudioDeviceList()\r\n  {\r\n    return ipcWrapper.sendIPC('getAudioDeviceList')\r\n      .then((devices: any) => {\r\n        let filteredDevices = _.filter(devices, (device) => { return !_.isEmpty(device['device_id']); });\r\n        this.log.info('Audio devices loaded: ' + JSON.stringify(filteredDevices));\r\n        return Promise.resolve(filteredDevices);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  //get initial default selection\r\n  getInitialAudioDevice(deviceList)\r\n  {\r\n    this.isCaptureSystemAudioOn = this.appConfig.getConfigData('config.captureEngine.captureSystemAudio') ?\r\n                                  this.appConfig.getConfigData('config.captureEngine.captureSystemAudio') : false;\r\n    return this.getInitialDevice('audio',deviceList)\r\n  }\r\n\r\n  getInitialAudioInputType(selectedDeviceId)\r\n  {\r\n    return this.getInitialInputType('audio',this.audioInputTypes, selectedDeviceId);\r\n  }\r\n\r\n  public onAudioDeviceChange(selectedDevice)\r\n  {\r\n    this.log.info('onAudioDeviceChange ' + selectedDevice.label);\r\n    //make sure audio session id will always be in the sessions ids array to update\r\n    let sessionsIdsToUpdate = _.uniq(_.concat([this.getSessionId('audio')], this.appState.getActiveRecordableSessionsIds()));\r\n    return this.clearAudioDeviceSelections(true)\r\n      .then(() => {\r\n        return this.loadUserSettings('audio');\r\n      })\r\n      .then(() => {\r\n        return this.setSelectedAudioDevice(sessionsIdsToUpdate, { friendly_name: selectedDevice.label, device_id: selectedDevice.value })\r\n      })\r\n      .then((audioDevice) => {\r\n        return this.loadAudioInputTypeList(sessionsIdsToUpdate, audioDevice)\r\n      })\r\n      .then((inputTypes) => {\r\n        this.log.info('loading audio input type list');\r\n        return this.setSelectedAudioInputType(sessionsIdsToUpdate, this.audioInputTypes[0]);\r\n      })\r\n      .then((selectedInputType) => {\r\n        return this.devicePreviewService.refreshSessionsPreview(sessionsIdsToUpdate);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('ERROR changing audio device selection . ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public reloadAudioDeviceDefaultConfiguration()\r\n  {\r\n    return this.persistencyService.get('audio.preview')\r\n      .then((preview)=> {\r\n        //reload audio device only if it was set\r\n        if(preview && preview === 'enabled' && this.sessions['audio'] && this.sessions['audio'].selectedDevice) {\r\n          //label is not relevant here so just using device ID\r\n          return this.onAudioDeviceChange({label: this.sessions['audio'].selectedDevice, value: this.sessions['audio'].selectedDevice});\r\n        } else {\r\n          return Promise.resolve();\r\n        }\r\n\r\n    })\r\n  }\r\n\r\n  public onAudioInputTypeChange(selectedAudioInputType)\r\n  {\r\n    return this.setSelectedAudioInputType(this.appState.getActiveRecordableSessionsIds(), selectedAudioInputType)\r\n      .then(() => {\r\n        return this.devicePreviewService.refreshRecordableSessionsPreview();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to change audio input type. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * update all relevant sessions with new audio device configuration\r\n   * @param sessionIds\r\n   * @param audioDevice\r\n   * @returns {Promise<T>|Promise<R>|Promise<U>}\r\n   */\r\n  setSelectedAudioDevice(sessionIds, audioDevice, saveData = true)\r\n  {\r\n    this.log.info('setSelectedAudioDevice ' + utils.stringifyMsg(sessionIds));\r\n    let promises = [];\r\n    _.forEach(sessionIds, (sessionId) => {\r\n      this.appState.onCallStarted('setSelectedAudioDevice: ' + audioDevice.device_id, sessionId);\r\n      promises.push(ipcWrapper.sendIPC(sessionId + '-setAudioDevice', audioDevice.device_id));\r\n    });\r\n    return Promise.all(promises)\r\n      .then(() => {\r\n        this.log.info('Finished setSelectedAudioDevice calls');\r\n        _.forEach(sessionIds, (sessionId) => {\r\n          this.appState.onCallEnded('setSelectedAudioDevice - SUCCESS', sessionId);\r\n        });\r\n\r\n        this.selectedAudioDevice = audioDevice.device_id;\r\n        if (saveData) {\r\n          this.persistencyService.set('audio.device_id', this.selectedAudioDevice);\r\n        }\r\n        return this.getAudioDeviceDelay(audioDevice.friendly_name);\r\n      })\r\n      .then(() => {\r\n        return this.selectedAudioDevice;\r\n      })\r\n      .catch((err) => {\r\n        _.forEach(sessionIds, (sessionId) => {\r\n          this.appState.onCallEnded('setSelectedAudioDevice - FAILURE', sessionId);\r\n        });\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * retrieve device delay setting for device with given friendly name\r\n   * @param deviceName\r\n   * @returns {Promise<T>|Promise<R>|Promise<U>}\r\n   */\r\n  private getAudioDeviceDelay(deviceName: string) {\r\n\r\n    this.selectedAudioDeviceDelay = 0;\r\n    this.deviceDelayKey = \"config.captureEngine.deviceConfig.\" + deviceName + \".streamOffset\";\r\n    this.log.info('retrieving audio delay for' + deviceName);\r\n    let streamDelay = this.appConfig.getConfigData(this.deviceDelayKey);\r\n    let sinkStartTimeout = this.appConfig.getConfigData(\"config.captureEngine.sinkStartTimeout\");\r\n    this.log.info('obtained audio delay for' + this.selectedAudioDevice + ' (' + deviceName + ') ' + streamDelay);\r\n    this.selectedAudioDeviceDelay = streamDelay || 0;\r\n    this.sinkStartTimeout = sinkStartTimeout || 10000;\r\n    return this.selectedAudioDeviceDelay;\r\n  }\r\n\r\n  /**\r\n   * update audio delay for device\r\n   * param delay\r\n   * @param deviceName\r\n   * @returns {Promise<T>|Promise<R>|Promise<U>}\r\n   */\r\n  setSelectedAudioDeviceDelay(delay: number) {\r\n    this.log.info('setSelectedAudioDeviceDelay: Request for reloading engine config with delay: ' + delay);\r\n    if (this.selectedAudioDeviceDelay == delay) {\r\n      return Promise.resolve();\r\n    }\r\n    this.selectedAudioDeviceDelay = delay;\r\n    return this.appConfig.setConfigData(this.deviceDelayKey,this.selectedAudioDeviceDelay, true)\r\n      .then(() => {\r\n        return this.appState.shutDownSessions();\r\n      })\r\n      .then(() => {\r\n        return this.appState.sendInitNotification();\r\n      });\r\n  }\r\n\r\n  setCaptureSystemAudioState(isCaptureSystemAudioOn: boolean){\r\n    this.log.info('AudioDeviceSettings: Request for reloading engine config with: System Audio: ' + isCaptureSystemAudioOn);\r\n    this.isCaptureSystemAudioOn = isCaptureSystemAudioOn;\r\n    return this.appConfig.setConfigData('config.captureEngine.captureSystemAudio', this.isCaptureSystemAudioOn, true)\r\n      .then(()=>{\r\n        return this.appState.shutDownSessions();\r\n      })\r\n      .then(()=>{\r\n        return this.appState.sendInitNotification();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * for loading input types for audio we currently need only one session id since we are using the same audio device.\r\n   * @param sessionsIds []\r\n   * @param selectedAudioDevice\r\n   * @returns {Promise<Array>}\r\n   */\r\n  loadAudioInputTypeList(sessionsIds, selectedAudioDevice)\r\n  {\r\n    return this.loadDeviceInputTypeList('audio',sessionsIds[0],selectedAudioDevice,'audio')\r\n  }\r\n\r\n  protected filterInputTypes(inputTypes,limits) : any {\r\n    return _.castArray(inputTypes[0])\r\n  }\r\n\r\n  /*\r\n  *  since audio device is shared between sessions defer setting & perissting\r\n  *  type until all promises are resolved\r\n  *  @param sessionsIds []\r\n  * @param inputType\r\n  * @param saveData\r\n  * @returns {Promise}\r\n  * */\r\n  setSelectedAudioInputType(sessionIds, inputType, saveData = true)\r\n  {\r\n    this.log.info('setSelectedAudioInputType: ' + utils.stringifyMsg(sessionIds));\r\n    let promises = _.map(sessionIds, (sessionId) => {\r\n      return this.setSelectedInputType(\r\n        'audio',    //session name\r\n        sessionId,\r\n        inputType,\r\n        false)    // do not update persistency\r\n    });\r\n    return Promise.all(promises)\r\n      .then(() => {\r\n        this.log.info('Finished settings audio input type. ' + utils.stringifyMsg(sessionIds));\r\n        if(saveData) {\r\n          this.persistencyService.set('audio.input_type_id', inputType);\r\n        }\r\n        return inputType;\r\n      });\r\n  }\r\n\r\n  unsetAudioDevice(sessionIds)\r\n  {\r\n    let that = this;\r\n    let promises = _.map(sessionIds, function (sessionId) {\r\n      that.appState.onCallStarted('unsetAudioDevice', sessionId);\r\n      return ipcWrapper.sendIPC(sessionId + '-unsetAudioDevice');\r\n    });\r\n    return Promise.all(promises)\r\n      .then(() => {\r\n        // not removing related sessionIds !!!!!\r\n        _.forEach(sessionIds, function (sessionId) {\r\n          that.appState.onCallEnded('unsetAudioDevice - SUCCESS', sessionId);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        _.forEach(sessionIds, function (sessionId) {\r\n          that.appState.onCallEnded('unsetAudioDevice - FAILURE', sessionId);\r\n        });\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  saveDeviceSelections()\r\n  {\r\n    return super.saveDeviceSelections('audio')\r\n  }\r\n\r\n  clearAudioDeviceSelections(clearPersistency: boolean) :any\r\n  {\r\n    return super.clearDeviceSelections('audio', clearPersistency);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/audio-device-settings.service.ts","import {Injectable} from '@angular/core';\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {AudioDeviceSettingsService} from \"./audio-device-settings.service\";\r\nimport * as _ from 'lodash';\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {DeviceRecoveryService} from \"./device-recovery.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {CaptureDeviceService} from \"./capture-device.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppNotificationsService} from \"../infra/app-notifications.service\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AudioDeviceService extends CaptureDeviceService {\r\n\r\n  //indicates if audio devices available\r\n  audioAvailable: boolean = false;\r\n\r\n  constructor(public appState: AppStateService,\r\n              public audioDeviceSettingsService: AudioDeviceSettingsService,\r\n              public notificationService: AppNotificationsService,\r\n              public log:AppLoggerService,\r\n              public devicePreviewService: DevicePreviewService,\r\n              public persistencyService: AppPersistentDataService,\r\n              public recoveryService: DeviceRecoveryService,\r\n              public appConfig: AppConfigService)\r\n  {\r\n    super(appState, log, audioDeviceSettingsService, recoveryService)\r\n  }\r\n\r\n  getSessionId()\r\n  {\r\n    return super.getSessionId('audio');\r\n  }\r\n\r\n  initAudioDevice()\r\n  {\r\n    this.log.info('initAudioDevice');\r\n    return this.createDeviceSession('audio')\r\n      .then(() => {\r\n        //loading initial device configurations\r\n        return this.loadInitialAudioDeviceConfiguration(this.getSessionId(), true);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will reject if error,\r\n   * will reject with 'NO_AUDIO_DEVICES'\r\n   * @param sessionId\r\n   * @returns {Promise<T>|Promise<R>|Promise<U>}\r\n   */\r\n  loadInitialAudioDeviceConfiguration(sessionId, isAudioSession)\r\n  {\r\n    this.log.info('loadInitialAudioDeviceConfiguration - ' + sessionId);\r\n    return this.initialAudioConfiguration(sessionId)\r\n      .then((startPreview) => {\r\n        if(startPreview) {\r\n          return Promise.all([startPreview, this.tryToRecoverAudioDevice(isAudioSession)]);\r\n        } else {\r\n          return Promise.all([false, true]); //indication the recovery process didn't fail (it wasn't needed)\r\n        }\r\n      })\r\n      .then(([startPreview, recoverySucceeded]): any => {\r\n        if(isAudioSession && startPreview && recoverySucceeded) {\r\n          this.log.info('starting audio device for session - ' + sessionId);\r\n          //will add the session in ACTIVE state\r\n          return this.startAudioDevicePreview();\r\n        } else {\r\n          if(isAudioSession) {\r\n            this.appState.addSession(sessionId, 'audio', this.appState.SESSION_STATE.IN_ACTIVE);\r\n          }\r\n          return Promise.resolve();\r\n        }\r\n      })\r\n      .then(() => {\r\n        return this.audioDeviceSettingsService.saveDeviceSelections();\r\n      })\r\n      .catch((err) => {\r\n        //will add the session in IN_ACTIVE state only for Audio session\r\n        if(isAudioSession) {\r\n          this.appState.addSession(sessionId, 'audio', this.appState.SESSION_STATE.IN_ACTIVE);\r\n          this.recoveryService.addRecoveryReadySession(sessionId, 'audio', false, err);\r\n        }\r\n        return this.rejectAudioPromise('Failed to load initial audio device configuration.', err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will return the selected input type or false if not needed or can't configure device\r\n   * @param sessionId\r\n   * @return {Promise<boolean>}\r\n   */\r\n  private initialAudioConfiguration(sessionId): any\r\n  {\r\n    this.log.info('initialAudioConfiguration');\r\n    this.checkAudioDevicesAvailability();\r\n    //audio device initialization is different than video and screen, once device is set there will be audio.\r\n    //this is the reason for not configuring audio device if we shouldn't enable it.\r\n    return this.shouldInitialPreviewDevice()\r\n      .then((preview) => {\r\n        if(preview) {\r\n          return this.loadAudioDeviceConfiguration([sessionId], false)\r\n            .then((audioDevice) => {\r\n              return this.loadAudioInputTypeConfiguration([sessionId], audioDevice, false);\r\n            });\r\n        } else {\r\n          return Promise.resolve(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will return a boolean value if recovered (indication if need to start device)\r\n   * @param isAudioSession - indicates if recovery is for an audio session and not for visual device that uses audio\r\n   * @return {Promise<boolean>}\r\n   */\r\n  private tryToRecoverAudioDevice(isAudioSession): Promise<boolean>\r\n  {\r\n    this.log.info('tryToRecoverAudioDevice. audioSession: ' + isAudioSession);\r\n    return Promise.all([this.recoveryService.shouldRecoverAudioForRecording(),this.recoveryService.getAudioSessionRecordingFile()])\r\n      .then(([shouldRecover, audioFile]) => {\r\n        if(shouldRecover) {\r\n          //send audio session file only for audio session - we would like to build record for this file only for the audio session\r\n          let audioSessionFile = isAudioSession ? audioFile : null;\r\n          return this.tryToLoadInRecoveryMode('audio', 'audio', audioSessionFile)\r\n            .catch((err) => {\r\n              return Promise.reject(this.recoveryService.DEVICE_STATE.DISCONNECTED);\r\n            });\r\n        } else {\r\n          //although we weren't in recovery process - we set the recovery process for current device to true\r\n          //so we will know device was configured and ready to capture\r\n          this.recoveryService.addRecoveryReadySession(this.getSessionId(), 'audio', true);\r\n          // device should start previewing in a non recovery mode only if we are not during a recording\r\n          // if we are in the middle of a recording, the device was just disconnected when recording started\r\n          return !this.isAppRecording();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will reject with 'NO_AUDIO_DEVICES' if there are no audio devices and it is a must for recovery\r\n   * @param sessionsIds array\r\n   * @returns {Promise<T>|Promise<R>|Promise<U>}\r\n   */\r\n  loadAudioDeviceConfiguration(sessionsIds, saveData = true)\r\n  {\r\n    this.log.info('loadAudioDeviceConfiguration ' + utils.stringifyMsg(sessionsIds));\r\n    return this.audioDeviceSettingsService.loadAudioDeviceList()\r\n      .then((devices) => {\r\n        if(!_.isEmpty(devices)) {\r\n          return this.configureAudioDevice(sessionsIds, devices, saveData);\r\n        } else {\r\n          this.audioDeviceSettingsService.clearAudioDeviceSelections(saveData);\r\n          return Promise.reject('NO_AUDIO_DEVICES');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return this.rejectAudioPromise('Failed to load and set initial audio device.', err);\r\n      });\r\n  }\r\n\r\n  isAudioSettingsDisabled() : boolean\r\n  {\r\n    return this.shouldDisableDeviceSettings() || this.isProcessing();\r\n  }\r\n\r\n  isAudioEnabled(enableAudioOnly)\r\n  {\r\n    let audioEnabled = !_.isEmpty(this.appState.getActiveAudioSession());\r\n    return enableAudioOnly ? audioEnabled : audioEnabled && _.keys(this.appState.getActiveVisualSessions()).length > 0;\r\n  }\r\n\r\n  /**\r\n   * Enabling audio device\r\n   * @returns {Promise<U>|Promise<T>|Promise<R>}\r\n   */\r\n  enableAudioDevice()\r\n  {\r\n    this.log.info('enable audio device');\r\n    let sessionsIds = [this.getSessionId()]; //add audio session id\r\n    // getting all active recordable sessions and all in-active visual session.\r\n    // handling in-active visual session since when de-activating a session in our app we are only stopping its' preview (the session is still alive in our engine)\r\n    // in order for the audio enabling affects those sessions as well - we need to handle them.\r\n    sessionsIds = sessionsIds.concat(this.appState.getActiveRecordableSessionsIds(), _.keys(this.appState.getInActiveVisualSessions()));\r\n    return this.loadAudioDeviceConfiguration(sessionsIds)\r\n      .then((audioDevice) => {\r\n        return this.loadAudioInputTypeConfiguration(sessionsIds, audioDevice);\r\n      })\r\n      .then(() => {\r\n        return this.startAudioDevicePreview();\r\n      })\r\n      .then(() => {\r\n        return this.devicePreviewService.refreshRecordableSessionsPreview();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  shouldDisableAudioButton(sourceOnly = false)\r\n  {\r\n    return !this.audioAvailable ||\r\n        this.isProcessing(sourceOnly) ||\r\n        !this.appState.isSourceStable(this.getSessionId()) ||\r\n          (_.keys(this.appState.getActiveVisualSessions()).length === 0 &&\r\n          !this.appConfig.getConfigData('config.captureApp.audioOnlyRecording'));\r\n  }\r\n\r\n  /**\r\n   * disabling audio device\r\n   * @returns {Promise<U>|Promise<T>|Promise<R>}\r\n   */\r\n  disableAudioDevice()\r\n  {\r\n    this.log.info('disable audio device');\r\n    // getting all active recordable sessions and all in-active visual session.\r\n    // handling in-active visual session since when de-activating a session in our app we are only stopping its' preview (the session is still alive in our engine)\r\n    // in order for the audio disabling affects those sessions as well - we need to handle them.\r\n    let sessionsIds = _.concat(this.appState.getActiveRecordableSessionsIds(), _.keys(this.appState.getInActiveVisualSessions()));\r\n    return this.audioDeviceSettingsService.unsetAudioDevice(sessionsIds)\r\n      .then(() => {\r\n        return this.stopAudioDevicePreview();\r\n      })\r\n      .then(() => {\r\n        return this.devicePreviewService.refreshRecordableSessionsPreview();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private configureAudioDevice(sessionsIds, devices, saveData = true)\r\n  {\r\n    this.log.info(\"configureAudioDevice \" + utils.stringifyMsg(sessionsIds));\r\n    return this.audioDeviceSettingsService.getInitialAudioDevice(devices)\r\n      .then((audioDevice) => {\r\n        this.log.info('setting the following audio device: ' + utils.stringifyMsg(audioDevice));\r\n        return this.audioDeviceSettingsService.setSelectedAudioDevice(sessionsIds, audioDevice, saveData);\r\n      })\r\n      .catch((err) => {\r\n        return this.rejectAudioPromise('Failed to configure initial audio device.', err)\r\n      });\r\n  }\r\n\r\n  private loadAudioInputTypeConfiguration(sessionsIds, audioDevice, saveData = true)\r\n  {\r\n    this.log.info('loadAudioInputTypeConfiguration: ' + utils.stringifyMsg(sessionsIds));\r\n    return this.audioDeviceSettingsService.loadAudioInputTypeList(sessionsIds, audioDevice)\r\n      .then((inputTypes) => {\r\n        if (!_.isEmpty(inputTypes)) {\r\n          return this.configureAudioInputType(sessionsIds, audioDevice, saveData);\r\n        } else {\r\n          return Promise.reject('No audio input types were found for current audio device: ' + audioDevice);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return this.rejectAudioPromise('Failed to load audio input type configuration.', err);\r\n      });\r\n  }\r\n\r\n  configureAudioInputType(sessionsIds, selectedDeviceId, saveData = true)\r\n  {\r\n    this.log.info('configureAudioInputType ' + utils.stringifyMsg(sessionsIds));\r\n    return this.audioDeviceSettingsService.getInitialAudioInputType(selectedDeviceId)\r\n      .then((inputType) => {\r\n        this.log.info('setting the following audio input type: ' + inputType['description']);\r\n        return this.audioDeviceSettingsService.setSelectedAudioInputType(sessionsIds, inputType, saveData);\r\n      })\r\n      .catch((err) => {\r\n        return this.rejectAudioPromise('Failed to configure audio input type.' ,err);\r\n      });\r\n  }\r\n\r\n  startAudioDevicePreview()\r\n  {\r\n    return this.devicePreviewService.startAudioPreviewAndActivateSession(this.getSessionId())\r\n      .then(() => {\r\n        return this.persistencyService.set('audio.preview', \"enabled\");\r\n      })\r\n      .catch((err) => {\r\n        this.notificationService.sendNotification('NOTIFICATIONS.error_audioPreviewStart', 'error');\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  stopAudioDevicePreview()\r\n  {\r\n    return this.devicePreviewService.stopAudioPreviewAndDeActivateSession(this.getSessionId())\r\n      .then(() => {\r\n        return this.persistencyService.set('audio.preview', \"disabled\");\r\n      });\r\n  }\r\n\r\n  //will be ready only if all main sessions devices are in stable state\r\n  isProcessing(sourceOnly = false) : boolean\r\n  {\r\n    let stable = true;\r\n    _.forEach(this.appState.getActiveRecordableSessionsIds(), (sessionId) => {\r\n      stable = stable && this.appState.isSourceStable(sessionId, sourceOnly);\r\n    });\r\n    //make sure there are recordable devices current in preview before enabling the audio button (unless in audioOnly mode)\r\n    return !stable || (_.keys(this.appState.getActiveVisualSessions()).length === 0 &&\r\n                        !this.appConfig.getConfigData('config.captureApp.audioOnlyRecording'));\r\n  }\r\n\r\n  private shouldInitialPreviewDevice()\r\n  {\r\n    return this.audioDeviceSettingsService.loadAudioUserSettings()\r\n      .then((settings) => {\r\n        return (!settings || !settings['preview'] || settings['preview'] === \"enabled\");\r\n      })\r\n      .catch(() => {\r\n        return true;\r\n      });\r\n  }\r\n\r\n  shouldDisableDeviceSettings()\r\n  {\r\n    return !this.audioDeviceSettingsService.selectedAudioDevice ||\r\n      this.audioDeviceSettingsService.audioInputTypes.length === 0;\r\n  }\r\n\r\n  isAppRecording()\r\n  {\r\n    return this.appState.isAppRecording();\r\n  }\r\n\r\n  private checkAudioDevicesAvailability(): any\r\n  {\r\n    //check if audio devices available and set the flag\r\n    return this.audioDeviceSettingsService.loadAudioDeviceList()\r\n      .then((devices) => {\r\n        this.audioAvailable = !_.isEmpty(devices);\r\n      })\r\n      .catch((err) => {\r\n        this.audioAvailable = false;\r\n      })\r\n      //act as finally block\r\n      .then(() => {\r\n        return this.audioAvailable;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will return an audio related error (prefix - AUDIO) so sessions will be able to identify an audio error\r\n   * @param msg\r\n   * @param err\r\n   * @returns {Promise<void>|Promise<T>}\r\n   */\r\n  private rejectAudioPromise(msg, err)\r\n  {\r\n    this.log.error(msg + ' - ' + JSON.stringify(err));\r\n    let errString = _.isObject(err) ? JSON.stringify(err) : err;\r\n    errString = (errString.indexOf('NO_AUDIO_DEVICES') > -1) ? errString : 'AUDIO-' + errString;\r\n    //if recovery failed due to an error different than disconnection or NO_AUDIO_DEVICES during recording - save device settings\r\n    if((err && err !== this.recoveryService.DEVICE_STATE.DISCONNECTED) && !(this.isAppRecording() && errString && errString.indexOf('NO_AUDIO_DEVICES') > -1)) {\r\n      this.deviceSettingsService.saveDeviceSelections('audio');\r\n    }\r\n    return Promise.reject(errString);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/audio-device.service.ts","import { NgModule } from '@angular/core';\r\nimport {AudioDeviceService} from \"./audio-device.service\";\r\nimport {AudioDeviceSettingsService} from \"./audio-device-settings.service\";\r\nimport {DeviceConnectionService} from \"./device-connection.service\";\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\nimport {DeviceRecoveryService} from \"./device-recovery.service\";\r\nimport {DeviceResourcesService} from \"./device-resources.service\";\r\nimport {VideoDeviceService} from \"./video-device.service\";\r\nimport {VideoDeviceSettingsService} from \"./video-device-settings.service\";\r\nimport {InfraModule} from \"shared/services/infra/infra.module\";\r\nimport {MonitoringModule} from \"../monitoring/monitoring.module\";\r\nimport {DefaultSettingsService} from \"./default-settings.service\";\r\nimport {LiveModule} from \"shared/services/live/live.module\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    InfraModule,\r\n    MonitoringModule,\r\n    LiveModule\r\n  ],\r\n  providers: [\r\n    AudioDeviceService,\r\n    AudioDeviceSettingsService,\r\n    DeviceConnectionService,\r\n    DevicePreviewService,\r\n    DeviceRecoveryService,\r\n    DeviceResourcesService,\r\n    VideoDeviceService,\r\n    VideoDeviceSettingsService,\r\n    DefaultSettingsService\r\n  ]\r\n})\r\nexport class CaptureDeviceModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/capture-device.module.ts","\r\n\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {DeviceSettingsServiceBase} from \"./device-settings-base.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {DeviceRecoveryService} from \"./device-recovery.service\";\r\nexport class CaptureDeviceService {\r\n\r\n  constructor(protected appState: AppStateService,\r\n              protected log: AppLoggerService,\r\n              public deviceSettingsService: DeviceSettingsServiceBase,\r\n              protected recoveryService: DeviceRecoveryService)\r\n  {}\r\n\r\n  public getSessionId(sessionName: string)\r\n  {\r\n    return this.deviceSettingsService.getSessionId(sessionName);\r\n  }\r\n\r\n  protected createDeviceSession(sessionName: string)\r\n  {\r\n    this.appState.addLoadingSession();\r\n    this.appState.onCallStarted('createSession', 'createSession-' + sessionName);\r\n    return ipcWrapper.sendIPC('createSession')\r\n      .then((sessionId) => {\r\n        this.appState.onCallEnded('createSession - SUCCESS', 'createSession-' + sessionName);\r\n        this.log.info('**** ' + sessionName + ' session id: ' + sessionId);\r\n        this.deviceSettingsService.getSessionData(sessionName).sessionId = sessionId;\r\n        return this.deviceSettingsService.getSessionData(sessionName);\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('createSession - FAILURE', 'createSession-' + sessionName);\r\n        this.log.error('Error creating ' + sessionName + ' session.' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get recording settings and checking if need to load in recovery mode\r\n   * if a capture file exists from previous recording that didn't end (app exited)\r\n   * build recording session for current capture session with the capture file as a parameter\r\n   * if there is no recover file name\r\n   */\r\n  public tryToLoadInRecoveryMode(sessionName: string, deviceType: string, recoverFileName: string)\r\n  {\r\n    this.log.debug('tryToLoadInRecoveryMode - ' + sessionName);\r\n    return this.recoveryService.canRecoverDeviceForRecording(sessionName)\r\n      .then((canRecover) => {\r\n        if(!canRecover) return Promise.reject(this.recoveryService.DEVICE_STATE.DISCONNECTED);\r\n        if(!recoverFileName) {\r\n          this.log.info('No need to build recording for current recovery request since it is an audio device used by a visual capture device');\r\n          return Promise.resolve();\r\n        } //there is no need to build recording (audio session that is being used by a visual recording)\r\n        //recoverable session with recoverable recoding file\r\n        this.log.info('Loading ' + sessionName + ' device session in recovery mode.');\r\n\r\n        let fileName = recoverFileName.replace(/^.*[\\\\\\/]/, '');\r\n        return this.buildRecordingSession(sessionName, fileName);\r\n      })\r\n      .then(() => {\r\n        this.log.info('Send addRecoveryReadySession notification for successful ' + sessionName + ' recovery preparation.');\r\n        this.recoveryService.addRecoveryReadySession(this.getSessionId(sessionName), sessionName, true);\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Error loading ' + sessionName + ' device in recovery mode.');\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private buildRecordingSession(sessionName: string, filePath)\r\n  {\r\n    this.log.info('Building ' + sessionName + ' device recovery recording session' + this.deviceSettingsService.getSessionData(sessionName).sessionId);\r\n    this.appState.onCallStarted('buildRecord', sessionName + this.deviceSettingsService.getSessionData(sessionName).sessionId);\r\n    return ipcWrapper.sendIPC(this.deviceSettingsService.getSessionData(sessionName).sessionId + '-buildRecord', filePath)\r\n      .then(() => {\r\n        this.appState.onCallEnded('buildRecord - SUCCESS', sessionName + this.deviceSettingsService.getSessionData(sessionName).sessionId);\r\n        return filePath\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('buildRecord - FAILURE', sessionName + this.deviceSettingsService.getSessionData(sessionName).sessionId);\r\n        this.log.error('Failed to build recording for ' + sessionName + ' session: ' + this.deviceSettingsService.getSessionData(sessionName).sessionId + utils.stringifyMsg(err));\r\n        return Promise.reject(this.recoveryService.DEVICE_STATE.FAILED);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/capture-device.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport * as _ from 'lodash';\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\nimport {AudioDeviceService} from \"./audio-device.service\";\r\nimport {DeviceRecoveryService} from \"./device-recovery.service\";\r\nimport {VideoDeviceSettingsService} from \"./video-device-settings.service\";\r\n\r\n@Injectable()\r\nexport class DefaultSettingsService {\r\n\r\n  private readonly MIN_IDLE_TIME = 10; //in minutes\r\n  private idleCounter; //in minutes\r\n  private intervalSub;\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private appState: AppStateService,\r\n              private appConfig: AppConfigService,\r\n              private recoveryService: DeviceRecoveryService,\r\n              private audioDeviceService: AudioDeviceService,\r\n              private appPersistency: AppPersistentDataService,\r\n              private devicePreviewService: DevicePreviewService,\r\n              private videoDeviceSettingsService: VideoDeviceSettingsService)\r\n  {\r\n    this.getBaseIdleTime();\r\n  }\r\n\r\n  start(callback)\r\n  {\r\n    //initial application load - if app is not in recording state, setting default configuration\r\n    this.triggerRestoreDefaultSettings(callback);\r\n    this.intervalSub = Observable.timer(0, 60000).subscribe(t => {\r\n      if (this.idleCounter <= 0) this.triggerRestoreDefaultSettings(callback);\r\n      else this.idleCounter--;\r\n    });\r\n  }\r\n\r\n  restartInterval() {\r\n    this.idleCounter = this.getBaseIdleTime();\r\n  }\r\n\r\n  stop()\r\n  {\r\n    if (this.intervalSub) {\r\n      this.intervalSub.unsubscribe();\r\n      this.intervalSub = null;\r\n    }\r\n  }\r\n\r\n  private triggerRestoreDefaultSettings(callback)\r\n  {\r\n    this.log.info('DefaultSettingsService: triggerRestoreDefaultSettings');\r\n    this.appState.areSessionsReadyForRecording('triggerRestoreDefaultSettings')\r\n      .then(() => {\r\n        this.restoreDefaultSettings()\r\n          .then((restored) => {\r\n            if(restored && callback) callback();\r\n          });\r\n      });\r\n  }\r\n\r\n  private restoreDefaultSettings() :any\r\n  {\r\n    return this.isAppInRecordingState()\r\n      .then(recording => {\r\n        if(recording) {\r\n          this.log.info('DefaultSettingsService: application is during recording, not setting admin default values');\r\n          this.restartInterval();\r\n          return Promise.resolve(false);\r\n        } else {\r\n          this.log.info('DefaultSettingsService: checking if settings need to be reset to admin defaults');\r\n          return this.settingsRestoreProcess();\r\n        }\r\n      });\r\n  }\r\n\r\n  private settingsRestoreProcess()\r\n  {\r\n    this.restartInterval();\r\n\r\n    return this.appPersistency.get('')\r\n      .then((persistentData) => {\r\n        if(!persistentData || !persistentData['defaultSettings'] || _.isEmpty(persistentData) || _.isEmpty(persistentData['defaultSettings'])) {\r\n          this.log.info('DefaultSettingsService: persistent data or defaultSettings data are empty');\r\n          return Promise.resolve(false);\r\n        } else {\r\n          if(this.shouldRestoreAdminDefaults(persistentData)) {\r\n            return this.updateSessionsInPersistentData(persistentData)\r\n              .then(() => { return Promise.resolve(true); });\r\n          } else {\r\n            this.log.info('DefaultSettingsService: there is no need to re-init sessions since no ');\r\n            return Promise.resolve(false);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        this.log.error('DefaultSettingsService: Failed to update devices configurations with default settings. ' + utils.stringifyMsg(e));\r\n        return Promise.resolve(false);\r\n      });\r\n  }\r\n\r\n  private shouldRestoreAdminDefaults(persistentData)\r\n  {\r\n    let defaultSettings = persistentData['defaultSettings'];\r\n    //if sessions count is different - update current sessions\r\n    if(this.extractSessionsNames(persistentData).length !== this.extractSessionsNames(defaultSettings).length)\r\n      return true;\r\n    //if sessions count is equal - check for configuration changes for each session\r\n    let shouldRestore = false;\r\n    _.forEach(this.extractSessionsNames(persistentData), sessionName => {\r\n      shouldRestore = persistentData[sessionName] && defaultSettings[sessionName] &&\r\n        !_.isEqual(persistentData[sessionName], defaultSettings[sessionName]);\r\n      if(shouldRestore)\r\n        return false; //break lodah forEach\r\n    });\r\n    return shouldRestore;\r\n  }\r\n\r\n  private updateSessionsInPersistentData(persistentData)\r\n  {\r\n    this.log.info('DefaultSettingsService: updated devices configuration with default admin settings');\r\n    //using sessions from persistent data obj\r\n    let sessionsNames = this.extractSessionsNames(persistentData);\r\n    //remove persistent data old sessions\r\n    _.forEach(sessionsNames, sessionName => {\r\n      delete persistentData[sessionName];\r\n    });\r\n    //using sessions from default settings object\r\n    let defaultSettings = persistentData['defaultSettings'];\r\n    sessionsNames = this.extractSessionsNames(defaultSettings);\r\n    //add default settings sessions to persistent data\r\n    _.forEach(sessionsNames, sessionName => {\r\n      persistentData[sessionName] = defaultSettings[sessionName];\r\n    });\r\n    //update persistent data object\r\n    return this.appPersistency.set('all', persistentData)\r\n      .then(() => {\r\n        //shutdown sessions\r\n        this.log.info('DefaultSettingsService: re-init sessions after restoring default admin settings');\r\n        return this.shutDownAndReInitSessions();\r\n      });\r\n\r\n  }\r\n\r\n  private extractSessionsNames(dataObject)\r\n  {\r\n    let sessionsNames = [];\r\n    _.forEach(dataObject, (value, key) => {\r\n      if(key.startsWith('session') || key.startsWith('audio')) {\r\n        sessionsNames.push(key);\r\n      }\r\n    });\r\n    return sessionsNames;\r\n  }\r\n\r\n  private shutDownAndReInitSessions()\r\n  {\r\n    //can be called on app load before session are active\r\n    if(_.isEmpty(this.appState.getActiveSessions()) && _.isEmpty(this.appState.getInActiveSessions())){\r\n      this.log.info('DefaultSettingsService: there is no need to reinint sesson since non is active');\r\n      return Promise.resolve();\r\n    } else {\r\n      return this.appState.areSessionsReadyForRecording('DefaultSettingsService')\r\n        .catch(() => { }) //shut down sessions any way...\r\n        .then(() => {\r\n          return this.devicePreviewService.unregisterFromAudioNotification();\r\n        })\r\n        .then(() => {\r\n          this.recoveryService.resetRecoverySessions();\r\n          return this.appState.shutDownSessions()\r\n            .then(() => {\r\n              return this.videoDeviceSettingsService.clearSessions();\r\n            })\r\n            .then(() => {\r\n              this.appState.sendInitNotification();\r\n            })\r\n            .catch((err) => {\r\n              this.log.error('DefaultSettingsService: failed to shut down active sessions. ' + utils.stringifyMsg(err));\r\n              return Promise.reject(err);\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  private getBaseIdleTime()\r\n  {\r\n    let baseIdleTime = this.appConfig.getConfigData('config.captureApp.restoreDefaultSettings.appIdleMin');\r\n    return baseIdleTime && baseIdleTime > this.MIN_IDLE_TIME ? baseIdleTime : this.MIN_IDLE_TIME;\r\n  }\r\n\r\n  //checking persistent data and not appState since it is being used also on application start (sessions are not ready yet)\r\n  private isAppInRecordingState()\r\n  {\r\n    return this.appPersistency.get('recording')\r\n      .then(recData => {\r\n        return !_.isEmpty(recData) && !_.isEmpty(recData['details']) && !_.isEmpty(recData['details']['files']);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('DefaultSettingsService: Failed to read recovery persistent data. ' + utils.stringifyMsg(err));\r\n        return true;\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/default-settings.service.ts","import {Injectable} from '@angular/core';\r\nimport {Subject} from \"rxjs\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from \"lodash\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppNotificationsService} from \"../infra/app-notifications.service\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {DeviceRecoveryService} from \"./device-recovery.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {VideoDeviceService} from \"./video-device.service\";\r\n\r\n@Injectable()\r\nexport class DeviceConnectionService\r\n{\r\n  readonly CONNECTED = 'connected';\r\n  readonly DISCONNECTED = 'disconnected';\r\n  /**\r\n   * notify on each device connection state change\r\n   * will send and object of: {deviceId: xxx , state: connected / disconnected}\r\n   * @type {BehaviorSubject}\r\n   */\r\n  private deviceConnectionState = new BehaviorSubject({});\r\n  deviceConnectionState$ = this.deviceConnectionState.asObservable();\r\n  /**\r\n   * disconnection events queue\r\n   * @type {Array}\r\n   */\r\n  private eventsQueue = [];\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private config: AppConfigService,\r\n              private appState: AppStateService,\r\n              private recoveryService: DeviceRecoveryService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private notificationService: AppNotificationsService,\r\n              private translate: TranslateService,\r\n              private videoDeviceService:VideoDeviceService)\r\n  {\r\n    this.addListeners();\r\n  }\r\n\r\n  getConnectionState()\r\n  {\r\n    return this.deviceConnectionState.getValue();\r\n  }\r\n\r\n  /**\r\n   * listen to connect / disconnect events from engine.\r\n   * currently sending app notifications only for in-use devices\r\n   */\r\n  private addListeners()\r\n  {\r\n    ipcWrapper.registerForNotification('on-device-status-change', (data: any) => {\r\n      if (_.isString(data)) {\r\n        data = JSON.parse(data)\r\n      }\r\n      this.log.info('on-device-status-change notification was fired from engine. ' + utils.stringifyMsg(data));\r\n      switch (data.state)\r\n      {\r\n        case 'Added':\r\n        case 'unMirrored':\r\n          this.sendDeviceConnectionStateNotification(data['device_id'], this.CONNECTED);\r\n          break;\r\n        case 'Removed':\r\n        case 'mirrored':\r\n          this.sendDeviceConnectionStateNotification(data['device_id'], this.DISCONNECTED);\r\n          break;\r\n        case 'Active':\r\n          this.log.info('on-device-status-change notification was fired from engine. returning from ctl-alt-del');\r\n          this.addDeviceConnectionEvent({ 'deviceId': 'display', 'state': 'false', 'event': 'ctl-alt-del','inUse': true});\r\n          break;\r\n        case 'Inactive':\r\n          this.log.info('on-device-status-change notification was fired from engine. ctl-alt-del');\r\n          this.addDeviceConnectionEvent({ 'deviceId': 'display', 'state': 'true', 'event': 'ctl-alt-del','inUse': true});\r\n          break;\r\n        default:\r\n          this.log.error('on-device-status-change unrecognized state. ' + data['state']);\r\n          break;\r\n      }\r\n    });\r\n    ipcWrapper.registerForNotification('power-sleep', (data : any) => {\r\n      this.log.info('power-sleep notification was fired from engine. ' + utils.stringifyMsg(data));\r\n      this.addDeviceConnectionEvent({ 'deviceId': 'display', 'state': data, 'event' : 'sleep','inUse': true});\r\n    });\r\n\r\n    // User-switch does not terminate current session, which means app continues to run and hold devices\r\n    // mostly relevant for PersonalCapture (KalturaCapture)\r\n    // to prevent this we just shut down the app.\r\n    // timeing is not an issue since the \"old\" windows session continues to run\r\n    ipcWrapper.registerForNotification('user-switch', (data : any) => {\r\n      this.log.info('user-switch notification was fired from engine. quitting app ' + utils.stringifyMsg(data));\r\n      return ipcWrapper.sendIPC('signOutApp')\r\n        .catch((err) => {\r\n          this.log.error('Failed to sign out.' + utils.stringifyMsg(err));\r\n        });\r\n    });\r\n\r\n    ipcWrapper.registerForNotification('rdp-connection', (data: any) => {\r\n      this.log.info('rdp-connection notification was fired from engine. ' + utils.stringifyMsg(data));\r\n\r\n      if(data) {\r\n        this.notificationService.sendNotification(\"NOTIFICATIONS.warn_remoteDesktopConnection\", 'warn');\r\n      } else {\r\n        this.notificationService.sendNotification(\"NOTIFICATIONS.info_remoteDesktopConnection\", 'info');\r\n      }\r\n    });\r\n\r\n    //device accessibility (privacy state) change event\r\n    ipcWrapper.registerForNotification('device-accessibility-change', (data : any) => {\r\n      if (_.isString(data)) {\r\n        data = JSON.parse(data)\r\n      }\r\n      this.log.info('device-accessibility-change notification was fired from engine. ' + utils.stringifyMsg(data));\r\n\r\n\r\n      let sessionsDataPromises = []\r\n      if(data['device_type'] === 'audio') {\r\n        sessionsDataPromises = ['audio']\r\n      } else {\r\n        sessionsDataPromises = _.concat(this.appState.getSessionsNames(true), this.appState.getSessionsNames(false))\r\n        _.remove(sessionsDataPromises,\r\n          sessionName=>{\r\n            return sessionName === 'audio' || this.videoDeviceService.getCaptureDeviceTypeBySessionId(sessionName) === 'screen'\r\n          })\r\n      }\r\n\r\n      sessionsDataPromises = _.map(sessionsDataPromises,sessionName=>this.persistencyService.get(sessionName))\r\n\r\n      Promise.all(sessionsDataPromises) //waiting for all data to return\r\n        .then((sessionsDataResults) => {\r\n          //report device dis/connection to all devices of the type regardless it's connection status.\r\n          // care only for device status\r\n          const deviceIds = _.map(sessionsDataResults,(sessionData)=> sessionData['device_id'])\r\n          _.forEach(deviceIds,(device_d) => {\r\n            this.sendDeviceConnectionStateNotification(device_d, data['state'] === 'allow' ? this.CONNECTED : this.DISCONNECTED);\r\n          })\r\n        })\r\n    });\r\n  }\r\n\r\n  private sendDeviceConnectionStateNotification(deviceId, state)\r\n  {\r\n    this.log.info('sendDeviceConnectionStateNotification. device_id ' + deviceId + ' state: ' + state);\r\n    let sessionNames = [];\r\n    let sessionsDataPromises = [];\r\n    _.forEach(_.concat(this.appState.getSessionsNames(true), this.appState.getSessionsNames(false)), (sessionName) => {\r\n      sessionsDataPromises.push(this.persistencyService.get(sessionName));\r\n      sessionNames.push(sessionName);\r\n    });\r\n    Promise.all(sessionsDataPromises) //waiting for all data to return\r\n      .then((sessionsDataResults) => {\r\n        let appType = this.config.getConfigData('config.shared.appType');\r\n        let primarySessionName = this.config.getConfigData('config.captureApp.primarySessionName');\r\n        let disconnectedDevicesDesc = [];\r\n\r\n        _.forEach(sessionsDataResults, (sessionData, index) => {\r\n          //if current session device was disconnected\r\n          if(!_.isEmpty(sessionData) && (!this.appState.isAppRecording() || sessionData['preview'] === 'enabled') && deviceId === sessionData['device_id']) {\r\n            disconnectedDevicesDesc.push(utils.getDisplayNameForSessionName(appType, primarySessionName, sessionNames[index]));\r\n          }\r\n        });\r\n\r\n        _.forEach(disconnectedDevicesDesc, (deviceType) => {\r\n          this.notifyDeviceConnectionStateChange(state, deviceType);\r\n          this.addDeviceConnectionEvent({'deviceId': deviceId, 'state': state, 'inUse': true});\r\n        });\r\n\r\n        if(_.isEmpty(disconnectedDevicesDesc)) {\r\n          this.addDeviceConnectionEvent({'deviceId': deviceId, 'state': state, 'inUse': false});\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load app persistent data for device connection state. ' + utils.stringifyMsg(err));\r\n        //since it is better for the application for stop instead of crash when device connection state changes, sending\r\n        //notification what-so-ever\r\n        this.addDeviceConnectionEvent({'deviceId': deviceId, 'state': state, 'inUse': true});\r\n      });\r\n  }\r\n\r\n  public notifyDeviceConnectionStateChange(state, deviceType = '')\r\n  {\r\n    this.translate.get('COMMON.' + deviceType).subscribe((source: string) => {\r\n      if(state === this.DISCONNECTED) {\r\n        this.notificationService.sendNotificationWithParams(\"NOTIFICATIONS.error_deviceDisconnected\", {'captureType': source} ,'error');\r\n      } else {\r\n        this.notificationService.sendNotificationWithParams(\"NOTIFICATIONS.info_deviceReconnected\", {'captureType': source}, 'info');\r\n      }\r\n    });\r\n  }\r\n\r\n  private addDeviceConnectionEvent(event)\r\n  {\r\n    this.eventsQueue.push(event);\r\n    this.log.info('addDeviceConnectionEvent(): current events queue: ' + utils.stringifyMsg(this.eventsQueue));\r\n    //if it is the only event - fire it\r\n    if(this.eventsQueue.length === 1) {\r\n      this.fireNextDeviceConnectionEvent();\r\n    }\r\n  }\r\n\r\n  private inProgress = false;\r\n\r\n  private fireNextDeviceConnectionEvent()\r\n  {\r\n    if(this.inProgress) {\r\n      this.log.info('fireNextDeviceConnectionEvent(): in progress flag is still on, waiting for previous event to end.');\r\n      utils.delayPromise(1000)\r\n        .then(() => {\r\n          this.fireNextDeviceConnectionEvent()\r\n        });\r\n    } else {\r\n      this.inProgress = true;\r\n      this.log.info('fireNextDeviceConnectionEvent(): current event queue: ' + utils.stringifyMsg(this.eventsQueue));\r\n      if(this.eventsQueue.length > 0) {\r\n        this.appState.sessionsReturnedFromConnectionStateChange('fireNextDeviceConnectionEvent')\r\n          .then(() => {\r\n            this.appState.setConnectionStateChangeLock('fireNextDeviceConnectionEvent', true);\r\n            let event = this.eventsQueue.shift();\r\n            this.log.info('fireNextDeviceConnectionEvent(): fired connection event: ' + utils.stringifyMsg(event));\r\n            this.deviceConnectionState.next(event); //fire the event\r\n            this.log.info('fireNextDeviceConnectionEvent(): Device connection service: free in progress lock');\r\n            this.inProgress = false;\r\n            this.fireNextDeviceConnectionEvent();\r\n          });\r\n      } else {\r\n        this.log.info('fireNextDeviceConnectionEvent(): No events in queue. Device connection service: free in progress lock');\r\n        this.inProgress = false;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-connection.service.ts","import {Injectable} from '@angular/core';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport * as _ from \"lodash\";\r\nimport {Subject, BehaviorSubject} from \"rxjs\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\n\r\n/**\r\n * Device Preview Service will display and hide device stream.\r\n * Also, only current previewing devices are considered to be active devices that will be recorded\r\n */\r\n@Injectable()\r\nexport class DevicePreviewService {\r\n\r\n  //audio level\r\n  private audioLeverSubject = new BehaviorSubject(0);\r\n  audioLeverSubject$ = this.audioLeverSubject.asObservable();\r\n  //event for repositioning preview element\r\n  private repositionPreview = new Subject();\r\n  repositionPreview$ = this.repositionPreview.asObservable();\r\n\r\n  //indicates if to auto resume audio preview when visual devices are active\r\n  private autoResumeAudio = false;\r\n\r\n  public captureZoneType: 'FULL_SCREEN' | 'SELECT_AREA' = 'FULL_SCREEN';\r\n\r\n  constructor(private appState: AppStateService, private log: AppLoggerService) {}\r\n\r\n  setPreviewPosition(sessionId, position)\r\n  {\r\n    this.log.info('setVideoPosition: ' + sessionId);\r\n    position = this.validateElementPosition(position);\r\n    return ipcWrapper.sendIPC(sessionId + '-setVideoPosition', position.top, position.left, position.width, position.height)\r\n      .then(() => {\r\n        this.log.info('setVideoPosition - success: ' + sessionId + ' ' + (position ? utils.stringifyMsg(position) : 'no position'));\r\n      })\r\n      .catch((err) => {\r\n        this.log.warn('setVideoPosition - failure: ' + sessionId);\r\n        return err;\r\n      });\r\n  }\r\n\r\n  startPreviewAndActivateSession(sessionId, name, type)\r\n  {\r\n    this.log.info('DevicePreviewService: startPreviewAndActivateSession');\r\n    this.appState.onCallStarted('startPreview', sessionId);\r\n    return this.getStartPreviewRelevantPromise(sessionId)\r\n      .then(() => {\r\n        this.appState.onCallEnded('startPreview - SUCCESS', sessionId);\r\n        //add session to active session so it will be recorded\r\n        this.appState.addSession(sessionId, name, this.appState.SESSION_STATE.ACTIVE);\r\n        return sessionId;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('startPreview - FAILURE', sessionId, err);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  stopPreviewAndDeactivateSession(sessionId, deactivateSession = true)\r\n  {\r\n    this.log.info('stopPreviewAndDeactivateSession(): ' + sessionId + ' ' + deactivateSession);\r\n    this.appState.onCallStarted('stop preview', sessionId);\r\n    return ipcWrapper.sendIPC(sessionId + '-stopPreview')\r\n      .then(() => {\r\n        this.appState.onCallEnded('stop preview - SUCCESS', sessionId);\r\n        if(deactivateSession) this.appState.removeActiveSession(sessionId);\r\n        return sessionId;\r\n      })\r\n      .catch((err) => {\r\n        //todo error handling\r\n        if(err === 'session ended') {\r\n          this.log.warn('stopPreviewAndDeactivateSession: Failed to stop and deactivate session since it was already ended: ' + sessionId);\r\n          return sessionId;\r\n        }\r\n        this.appState.onCallEnded('stop preview - FAILURE', sessionId, err);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  refreshDevice(sessionId, name, type)\r\n  {\r\n    let that = this;\r\n    if(!_.isEmpty(that.appState.getActiveSessions()[sessionId])) {\r\n      return that.stopPreviewAndDeactivateSession(sessionId, false)\r\n        .then(() => {\r\n          return that.startPreviewAndActivateSession(sessionId, name, type);\r\n        })\r\n        .catch((err) => {\r\n          that.log.error('Failed refreshing device: ' + sessionId + '. ' + utils.stringifyMsg(err));\r\n          return Promise.reject(err);\r\n        });\r\n    } else {\r\n      //no need to refresh, device is not previewing (will be refreshed when will start preview)\r\n      return Promise.resolve();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * stopping all devices preview without removing their sessions\r\n   * @return {Promise<boolean>}\r\n   */\r\n  stopPreviewAll() :any\r\n  {\r\n    this.appState.onCallStarted('stop preview all', JSON.stringify(Object.keys(this.appState.getActiveSessions())));\r\n    return ipcWrapper.sendIPC('stopPreviewAll')\r\n      .then(() => {\r\n        this.appState.onCallEnded('stop preview all - SUCCESS', JSON.stringify(Object.keys(this.appState.getActiveSessions())));\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        //todo error handling\r\n        this.appState.onCallEnded('stop preview all - FAILURE', JSON.stringify(Object.keys(this.appState.getActiveSessions())), err);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * starting all devices preview without adding their sessions\r\n   * @return {Promise<boolean>}\r\n   */\r\n  startPreviewAll()\r\n  {\r\n    let that = this;\r\n    that.appState.onCallStarted('start preview all', JSON.stringify(Object.keys(that.appState.getActiveSessions())));\r\n    return ipcWrapper.sendIPC('startPreviewAll')\r\n      .then(() => {\r\n        that.appState.onCallEnded('start preview all - SUCCESS', JSON.stringify(Object.keys(that.appState.getActiveSessions())));\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        //todo error handling\r\n        that.appState.onCallEnded('start preview all - FAILURE', JSON.stringify(Object.keys(that.appState.getActiveSessions())), err);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  hideAll()\r\n  {\r\n    this.appState.onCallStarted('setVideoPositionAll (hide all)', JSON.stringify(Object.keys(this.appState.getActiveVisualSessions())));\r\n    let hideAllPromises = [];\r\n    _.forEach(Object.keys(this.appState.getActiveVisualSessions()), (sessionId) => {\r\n      hideAllPromises.push(this.setPreviewPosition(sessionId, {top: 0, left : 0, width: 0, height: 0}))\r\n    });\r\n    return Promise.all(hideAllPromises)\r\n      .then(() => {\r\n        this.appState.onCallEnded('setVideoPositionAll (hide all) - SUCCESS', JSON.stringify(Object.keys(this.appState.getActiveVisualSessions())));\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('setVideoPositionAll (hide all) - FAILURE', JSON.stringify(Object.keys(this.appState.getActiveVisualSessions())), err);\r\n        return err;\r\n      });\r\n  }\r\n\r\n  refreshSessionsPreview(sessions)\r\n  {\r\n    return this.stopPreviewSome(sessions)\r\n      .then(() => {\r\n        this.log.info('All sessions preview were stopped');\r\n        return this.startPreviewSome(sessions);\r\n      })\r\n      .then(() => {\r\n        this.log.info('All sessions preview started');\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(err);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  refreshRecordableSessionsPreview()\r\n  {\r\n    return this.refreshSessionsPreview(this.appState.getActiveRecordableSessionsIds())\r\n  }\r\n\r\n  startPreviewSome(sessionsArray)\r\n  {\r\n    if(!_.isEmpty(sessionsArray)) {\r\n      this.appState.onCallStarted('start preview some', JSON.stringify(sessionsArray));\r\n      return ipcWrapper.sendIPC('startPreviewSome', sessionsArray)\r\n        .then(() => {\r\n          this.appState.onCallEnded('start preview some - SUCCESS', JSON.stringify(sessionsArray));\r\n          return true;\r\n        })\r\n        .catch((err) => {\r\n          //todo error handling\r\n          this.appState.onCallEnded('start preview some - FAILURE', JSON.stringify(sessionsArray), err);\r\n          return Promise.reject(err);\r\n        });\r\n    } else {\r\n      return Promise.resolve(false);\r\n    }\r\n  }\r\n\r\n  stopPreviewSome(sessionsArray)\r\n  {\r\n    if(!_.isEmpty(sessionsArray)) {\r\n      this.appState.onCallStarted('stop preview some', JSON.stringify(sessionsArray));\r\n      return ipcWrapper.sendIPC('stopPreviewSome', sessionsArray)\r\n        .then(() => {\r\n          this.appState.onCallEnded('stop preview some - SUCCESS', JSON.stringify(sessionsArray));\r\n          return true;\r\n        })\r\n        .catch((err) => {\r\n          //todo error handling\r\n          this.appState.onCallEnded('stop preview some - FAILURE', JSON.stringify(sessionsArray), err);\r\n          return Promise.reject(err);\r\n        });\r\n    } else {\r\n      return Promise.resolve({});\r\n    }\r\n  }\r\n\r\n  startAudioPreviewAndActivateSession(audioSessionId: string)\r\n  {\r\n    this.log.info('Registering for audio notifications');\r\n    return this.startPreviewAndActivateSession(audioSessionId, 'audio', 'audio')\r\n      .then(() => {\r\n        ipcWrapper.registerForNotification('audio-level', (audioLevels : any) => {\r\n          // if we have only one channel we still want the UI to use both bars\r\n          if(audioLevels.Channel1 === 0){\r\n            audioLevels.Channel1 = audioLevels.Channel0;\r\n          }\r\n          this.audioLeverSubject.next(audioLevels);\r\n        });\r\n      });\r\n  }\r\n\r\n  stopAudioPreviewAndDeActivateSession(audioSessionId)\r\n  {\r\n    if(!_.isEmpty(this.appState.getActiveAudioSession())) {\r\n      this.log.info('un-registering from audio notifications');\r\n      return this.stopPreviewAndDeactivateSession(audioSessionId)\r\n        .then(() => {\r\n          ipcWrapper.unregisterForNotification('audio-level');\r\n          this.audioLeverSubject.next(0);\r\n        });\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  unregisterFromAudioNotification()\r\n  {\r\n    this.audioLeverSubject.next(0);\r\n    return ipcWrapper.unregisterForNotification('audio-level');\r\n  }\r\n\r\n  repositionActiveSessionsPreview()\r\n  {\r\n    this.repositionPreview.next();\r\n  }\r\n\r\n  /**\r\n   * make sure no pixel sized image will be shown (in case element is not yet rendered)\r\n   * @param position\r\n   * @returns {{left: number, top: number, width: number, height: number}}\r\n   */\r\n  private validateElementPosition(position)\r\n  {\r\n    if(!position.width || !position.height || position.left < 0 || position.top < 0) {\r\n      return {left: 0, top: 0, width: 0, height: 0};\r\n    } else {\r\n      return {left: position.left, top: position.top, width: position.width, height: position.height};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * checks if need to stop audio notifications due to no active visual sessions\r\n   */\r\n  public checkIfToStopAudioPreview(audioSessionId)\r\n  {\r\n    //if there are no recordable session (in audioOnly mode - audio session will be includes do we would like to know if it is enabled (active))\r\n    if((this.appState.getActiveRecordableSessionsIds()).length === 0\r\n      && !_.isEmpty(this.appState.getActiveAudioSession())) {\r\n      this.autoResumeAudio = true;\r\n      return this.stopAudioPreviewAndDeActivateSession(audioSessionId)\r\n    } else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * checks if need to start audio notifications due to active visual sessions addition\r\n   */\r\n  public checkIfToStartAudioPreview(audioSessionId)\r\n  {\r\n    if(this.autoResumeAudio) {\r\n      this.autoResumeAudio = false;\r\n      this.startAudioPreviewAndActivateSession(audioSessionId);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * return start preview promise only if need to hold capture device resources\r\n   * in recording manager there is a free resource call on init sessions, in this service we adjust the device visual\r\n   * capture state with the app window visibility\r\n   * @param sessionId\r\n   * @return {any}\r\n   */\r\n  private getStartPreviewRelevantPromise(sessionId): any\r\n  {\r\n    if(this.appState.getApplicationWindowState() === this.appState.WINDOW_STATE.VISIBLE || this.appState.isAppRecording()) {\r\n      return ipcWrapper.sendIPC(sessionId + '-startPreview');\r\n    } else {\r\n      this.log.info('DevicePreviewService: There is no need to start preview for: ' + sessionId);\r\n      return this.setPreviewPosition(sessionId, {left: 0, top: 0, width: 0, height: 0});\r\n    }\r\n  }\r\n\r\n  public resetToFullScreenCapture() {\r\n    this.captureZoneType = 'FULL_SCREEN';\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-preview.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {VideoDeviceSettingsService} from \"./video-device-settings.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport * as _ from \"lodash\";\r\nimport {AudioDeviceSettingsService} from \"./audio-device-settings.service\";\r\nimport {BehaviorSubject, Subject} from \"rxjs\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\n\r\n@Injectable()\r\nexport class DeviceRecoveryService {\r\n\r\n  readonly DEVICE_STATE: any = {\r\n    DISCONNECTED : 'disconnected',\r\n    FAILED: 'failed_recovery',\r\n    NONE: 'none'\r\n  };\r\n\r\n  recoverySessions = [];\r\n  /**\r\n   * notify on recovery ready\r\n   * @type {BehaviorSubject}\r\n   */\r\n  private recoverySessionsReady = new Subject<boolean>();\r\n  recoverySessionsReadyPromise = this.recoverySessionsReady.asObservable().toPromise();\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private appConfig: AppConfigService,\r\n              private deviceSettingsService: VideoDeviceSettingsService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private audioDeviceSettingsService: AudioDeviceSettingsService)\r\n  {\r\n  }\r\n\r\n  /**\r\n   * adding session to recovery sessions.\r\n   * if session is an audio session - add it only if current recording is an audio only recoridng\r\n   * @param sessionId\r\n   * @param sessionName\r\n   * @param isReady\r\n   * @param reason\r\n   */\r\n  addRecoveryReadySession(sessionId, sessionName, isReady, reason = '')\r\n  {\r\n    let recoverySession = {sessionId: sessionId, name: sessionName, recoveryReady: isReady, reason: reason};\r\n    this.persistencyService.get('recording')\r\n      .then((recData) => {\r\n        if(_.isEmpty(recData) || _.isEmpty(recData['details']) || _.isEmpty(recData['details']['files'])) {\r\n          this.log.debug('recover-service: recording data is empty: ' + utils.stringifyMsg(recData));\r\n          this.recoverySessionsReady.next(false);\r\n          this.recoverySessionsReady.complete();\r\n        } else {\r\n          //add session to recovery sessions only if needed\r\n          if(recData['details'] &&\r\n              //if audio only - add audio session / else if not audio only - add only none audio sessions\r\n            ((recData['details']['isAudioOnly'] && sessionName === 'audio') || (!recData['details']['isAudioOnly']) && sessionName !== 'audio')) {\r\n            this.addOrUpdateRecoverySession(recoverySession);\r\n            this.log.info('Recovery ready session was added: ' + sessionId + ' name: ' + sessionName + ' is ready: ' + isReady + ' reason: ' + reason + '. ' +\r\n              ' Number of currently ready sessions: ' + this.recoverySessions.length + '. Waiting for ' + Object.keys(recData['details']['files']).length + ' sessions');\r\n          }\r\n          if (this.recoverySessions.length === Object.keys(recData['details']['files']).length) {\r\n            this.log.info('All recoverable sessions were loaded: ' + utils.stringifyMsg(this.recoverySessions));\r\n            this.recoverySessionsReady.next(true);\r\n            this.recoverySessionsReady.complete();\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load recording data from app persistent data. ' + utils.stringifyMsg(err));\r\n        this.recoverySessionsReady.next(false);\r\n        this.recoverySessionsReady.complete();\r\n      });\r\n  }\r\n\r\n  resetRecoverySessions()\r\n  {\r\n    this.log.info('resetting recovery sessions');\r\n    this.recoverySessionsReady = new Subject<boolean>();\r\n    this.recoverySessionsReadyPromise = this.recoverySessionsReady.asObservable().toPromise();\r\n    this.recoverySessions.length = 0;\r\n  }\r\n\r\n  canRecoverDeviceForRecording(sessionName)\r\n  {\r\n    if (sessionName === 'audio') {\r\n      return this.canRecoverAudioForRecording();\r\n    } else {\r\n      return this.canRecoverSessionForRecording(sessionName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * will return the file name\r\n   * @param sessionName\r\n   * @return {any}\r\n   */\r\n  shouldRecoverVisualDeviceForRecording(sessionName)\r\n  {\r\n    if(sessionName !== 'audio') {\r\n      return this.shouldRecoverSessionForRecording(sessionName);\r\n    } else {\r\n      return Promise.reject('DeviceRecoveryService: shouldRecoverVisualDeviceForRecording - audio session is not a visual session');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loads user settings and compares them to current device configuration.\r\n   * since when device first loaded it tries to use its' settings from app persistent data, if\r\n   * previous settings were valid - the device uses them.\r\n   * since capture recording session also includes audio settings - we need to check those too\r\n   */\r\n  private canRecoverSessionForRecording(sessionName)\r\n  {\r\n    let canRecover = false;\r\n    return this.deviceSettingsService.loadUserSettings(sessionName)\r\n      .then((sessionSettings) => {\r\n        canRecover = (sessionSettings && sessionSettings['device_id'] && sessionSettings['input_type_id'] &&\r\n        sessionSettings['device_id'] === this.deviceSettingsService.getSessionData(sessionName).selectedDevice &&\r\n        !_.isEmpty(sessionSettings['encoder_config']) &&\r\n        sessionSettings['encoder_config'].profile === this.deviceSettingsService.getSessionData(sessionName).selectedEncoderProfile &&\r\n        sessionSettings['encoder_config'].bitrate === this.deviceSettingsService.getSessionData(sessionName).selectedBitrate &&\r\n        sessionSettings['encoder_id'] === this.deviceSettingsService.getSessionData(sessionName).selectedEncoder );\r\n\r\n        if(!canRecover) {\r\n          this.log.warn('DeviceRecoveryService: Selected ' + sessionName + ' does not equal to persistent data ' + sessionName + '.');\r\n        } else {\r\n          this.log.info('DeviceRecoveryService: Selected ' + sessionName + ' equals to persistent data ' + sessionName + '.');\r\n        }\r\n\r\n        this.log.info('DeviceRecoveryService: Persistent data ' + sessionName + ': ' + (!_.isEmpty(sessionSettings) ? utils.stringifyMsg(sessionSettings) : '{}'));\r\n        this.logSelectedDevice(sessionName);\r\n        return this.shouldRecoverAudioForRecording()\r\n          .then((shouldRecoverAudio) => {\r\n            return shouldRecoverAudio ? this.canRecoverAudioForRecording() : true;\r\n          });\r\n      })\r\n      .then((audioRecovery) => {\r\n        if(!audioRecovery) this.log.error(\"Can't load audio in recovery mode\");\r\n        return canRecover && audioRecovery;\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to decide if can load ' + sessionName + ' in recovery mode. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * returns relevant session video file path if should recover for current recording session name\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  private shouldRecoverSessionForRecording(sessionName)\r\n  {\r\n    this.log.debug('shouldRecoverSessionForRecording: ' + sessionName);\r\n    return Promise.all([this.persistencyService.get(sessionName), this.persistencyService.get('recording')])\r\n      .then(([session, recording]) => {\r\n        if (!_.isEmpty(session) && session['preview'] === 'enabled' &&\r\n          !_.isEmpty(recording) && _.isObject(recording) && !_.isEmpty(recording['details']) &&\r\n          !_.isEmpty(recording['details']['files']) &&  !_.isEmpty(recording['details']['files'][sessionName])) {\r\n          return recording['details']['files'][sessionName];\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to decide if to should load ' + sessionName + ' in recovery mode for recording. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public shouldRecoverAudioForRecording()\r\n  {\r\n    let isAudioDeviceValid = false;\r\n    let audioRecordingFilePath = null;\r\n    return Promise.all([this.persistencyService.get('audio'), this.getAudioSessionRecordingFile()])\r\n      .then(([audioSession, audioFilePath]) => {\r\n        isAudioDeviceValid = audioSession && audioSession['preview'] && audioSession['preview'] === 'enabled' && audioSession['device_id'];\r\n        audioRecordingFilePath = audioFilePath;\r\n        return this.checkIfAtLeastOneVisualDeviceShouldBeRecovered();\r\n      })\r\n      .then((shouldRecoverVisuals) => {\r\n        //audio should be enabled + has a device id AND any other capture session should need to be recovered\r\n        return (isAudioDeviceValid &&\r\n                  (shouldRecoverVisuals ||\r\n                      (audioRecordingFilePath && this.appConfig.getConfigData('config.captureApp.audioOnlyRecording'))));\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to determine if should recover audio or not. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public getAudioSessionRecordingFile()\r\n  {\r\n    return this.persistencyService.get('recording')\r\n      .then((recording) => {\r\n        //if an audio only recording\r\n        if (!_.isEmpty(recording) && recording['details'] && recording['details']['isAudioOnly']) {\r\n          return recording['details']['files']['audio'];\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to get audio only recording file. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      })\r\n  }\r\n\r\n  /**\r\n   * go over all sessions in persistent data file and check if can be recovered\r\n   * @returns {Promise<boolean>}\r\n     */\r\n  private checkIfAtLeastOneVisualDeviceShouldBeRecovered()\r\n  {\r\n    let shouldRecoverPromises = [];\r\n    let shouldRecover = false;\r\n    return this.persistencyService.get('')\r\n      .then(persistentDataObj => {\r\n        _.forEach(_.keys(persistentDataObj), key => {\r\n          if(key.startsWith('session')) {\r\n            shouldRecoverPromises.push(this.shouldRecoverSessionForRecording(key));\r\n          }\r\n        });\r\n        return Promise.all(shouldRecoverPromises)\r\n      })\r\n      .then((recoverables) => {\r\n        _.forEach(recoverables, recoverable => {\r\n          if(recoverable)\r\n            shouldRecover = true;\r\n        });\r\n        return shouldRecover;\r\n      });\r\n  }\r\n\r\n  private canRecoverAudioForRecording()\r\n  {\r\n    let that = this;\r\n    return that.audioDeviceSettingsService.loadAudioUserSettings()\r\n      .then((audioSettings) => {\r\n        let canRecover = (audioSettings && audioSettings['device_id'] && audioSettings['input_type_id'] &&\r\n                          audioSettings['device_id'] === that.audioDeviceSettingsService.selectedAudioDevice) ||\r\n                          !audioSettings || (audioSettings && audioSettings['preview'] === 'disabled');\r\n\r\n        if(!canRecover) {\r\n          this.log.warn('DeviceRecoveryService: Selected audio does not equal to persistent data audio.');\r\n        } else {\r\n          this.log.info('DeviceRecoveryService: Selected audio equals to persistent data audio.');\r\n        }\r\n\r\n        this.log.info('DeviceRecoveryService: Persistent data audio: ' + (!_.isEmpty(audioSettings) ? utils.stringifyMsg(audioSettings) : '{}'));\r\n        this.log.info('DeviceRecoveryService: Selected audio: ' + that.audioDeviceSettingsService.selectedAudioDevice + ' ' +\r\n          utils.stringifyMsg(that.audioDeviceSettingsService.selectedInputType));\r\n\r\n        return canRecover;\r\n      })\r\n      .catch((err) => {\r\n        that.log.error('Failed to decide if can load audio in recovery mode. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private logSelectedDevice(sessionName)\r\n  {\r\n    let sessionData = this.deviceSettingsService.getSessionData(sessionName);\r\n    if(sessionData) {\r\n      let dataString = 'DeviceRecoveryService: Selected ' + sessionName + ': ';\r\n      dataString += sessionData.selectedDevice ? sessionData.selectedDevice : 'No seleced device id.';\r\n      dataString += (sessionData.selectedInputType && sessionData.selectedInputType['description']) ?\r\n        sessionData.selectedInputType['description'] : 'No selected input type description.';\r\n      dataString += sessionData.selectedEncoderProfile ? sessionData.selectedEncoderProfile : 'No selected encoder profile.';\r\n      dataString += sessionData.selectedBitrate ? sessionData.selectedBitrate : 'No selected bitrate.';\r\n      dataString += sessionData.selectedEncoder ? sessionData.selectedEncoder : 'No selected encoder.'\r\n      this.log.info(dataString);\r\n    } else {\r\n      this.log.info('DeviceRecoveryService: Failed to get data from selected ' + sessionName + ' device object.');\r\n    }\r\n  }\r\n\r\n  private addOrUpdateRecoverySession(newSession)\r\n  {\r\n    this.log.info('addOrUpdateRecoverySession: ' + utils.stringifyMsg(newSession));\r\n    let updateIndex = -1;\r\n    _.forEach(this.recoverySessions, (session, index) => {\r\n      if(session.sessionId === newSession.sessionId) {\r\n        updateIndex = index;\r\n        return false; //break lodash for each\r\n      }\r\n    });\r\n    if(updateIndex > -1) {\r\n\r\n      this.log.info('addOrUpdateRecoverySession: session already exists. ' +\r\n        'Old session data: ' + utils.stringifyMsg(this.recoverySessions[updateIndex]) +\r\n        '. New session data: ' + utils.stringifyMsg(newSession));\r\n\r\n      this.recoverySessions[updateIndex] = newSession;\r\n    } else {\r\n      this.recoverySessions.push(newSession);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-recovery.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\n\r\ninterface CaptureResourceTask {\r\n  action: string;\r\n  param: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class DeviceResourcesService {\r\n\r\n  readonly RESOURCES_STATE = {\r\n    FREE: 'free', //resources are free and can be used by other applications\r\n    IN_USE: 'in_use' //resources are being used by the capture application\r\n  };\r\n  /**\r\n   * indication of current resources state. initial state will be IN_USE\r\n   */\r\n  currentResourceState;\r\n  /**\r\n   * locking free resource state\r\n   */\r\n  private freeResourcesLock = false;\r\n\r\n  /**\r\n   * acts as a queue of actions\r\n   */\r\n  private captureResourceTasks = [];\r\n\r\n  /**\r\n   * is resource capturing action in progress\r\n   */\r\n  private actionInProgress = false;\r\n\r\n\r\n  constructor(private appState: AppStateService,\r\n              private log: AppLoggerService,\r\n              private configService: AppConfigService,\r\n              private devicePreviewService: DevicePreviewService)\r\n  {\r\n    let initialVisible = !this.configService.getConfigData('config.captureApp.silentStart');\r\n    this.currentResourceState = initialVisible ? this.RESOURCES_STATE.IN_USE : this.RESOURCES_STATE.FREE;\r\n    let winVisibility = initialVisible ? 'visible' : 'not-visible';\r\n    this.appState.setApplicationWindowState(winVisibility);\r\n    this.registerWindowVisibilityChanges();\r\n  }\r\n\r\n  private addCaptureResourceTask(captureResourceTask: CaptureResourceTask)\r\n  {\r\n    this.captureResourceTasks.push(captureResourceTask);\r\n    //if there are no actions waiting (except from the current one), execute immediately\r\n    if(this.captureResourceTasks.length === 1) this.executeNextAction();\r\n  }\r\n\r\n  private executeNextAction()\r\n  {\r\n    if (this.actionInProgress) return;\r\n\r\n    this.actionInProgress = true;\r\n    let captureResourceTask: CaptureResourceTask = this.captureResourceTasks.shift();\r\n    this.getRelevantResourceActionPromise(captureResourceTask.action, captureResourceTask.param)\r\n      .catch((err) => {\r\n        this.log.error('DeviceResourcesService: failed to execute: ' + captureResourceTask.action + ' action.' + utils.stringifyMsg(err));\r\n      })\r\n      .then(() => { //acts as a finally block\r\n        this.actionInProgress = false;\r\n        //call next action in line...\r\n        if(this.captureResourceTasks.length > 0)\r\n          this.executeNextAction();\r\n      });\r\n  }\r\n\r\n  private getRelevantResourceActionPromise(action, param)\r\n  {\r\n    return action === this.appState.WINDOW_STATE.VISIBLE.toString() ?\r\n      this.getCaptureResources(param) :\r\n      this.freeCaptureResources(param);\r\n  }\r\n\r\n  private registerWindowVisibilityChanges()\r\n  {\r\n    this.log.info('DeviceResourcesService: onWindowVisibilityChanges');\r\n    ipcWrapper.registerForNotification('on-window-status-change', (visibility: any) => {\r\n      this.appState.setApplicationWindowState(visibility['state']);\r\n      let currentWindowState = this.appState.getApplicationWindowState();\r\n      this.log.info('DeviceResourcesService: handling on-window-status-change ' + currentWindowState);\r\n      //if an action is needed\r\n      if((currentWindowState === this.appState.WINDOW_STATE.VISIBLE && !this.freeResourcesLock) ||\r\n          (currentWindowState === this.appState.WINDOW_STATE.HIDDEN)) {\r\n\r\n        this.addCaptureResourceTask({action: currentWindowState.toString(), param: false})\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * make sure our app will be able to use its' capture resources, starts all devices preview if needed\r\n   * @return {any}\r\n   */\r\n  public getCaptureResources(removeFreeResLock = true)\r\n  {\r\n    this.log.info('DeviceResourcesService: getCaptureResources');\r\n    if(removeFreeResLock) this.freeResourcesLock = false; //remove lock only if explicitly requested\r\n    if(this.currentResourceState === this.RESOURCES_STATE.FREE) {\r\n      this.currentResourceState = this.RESOURCES_STATE.IN_USE; //to block duplicate calls\r\n      return this.devicePreviewService.startPreviewSome(Object.keys(this.appState.getActiveVisualSessions()))\r\n        .then(() => {\r\n          this.log.info('DeviceResourcesService: successfully started devices preview and got resources');\r\n        })\r\n        .catch((err) => {\r\n          this.log.error('DeviceResourcesService: Failed to get capture devices resources. ' + utils.stringifyMsg(err));\r\n          this.currentResourceState = this.RESOURCES_STATE.FREE;\r\n          return Promise.reject(err);\r\n        });\r\n    } else {\r\n      this.log.info('DeviceResourcesService: resources are already in use by our application.');\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * freeing all capture resources is needed\r\n   * @param forceAndLock boolean if to free resource regardless of window state and make resources state persistent until\r\n   * app call will change their state (ignore window visibility changes)\r\n   * @return {any}\r\n   */\r\n  public freeCaptureResources(forceAndLock = false)\r\n  {\r\n    this.log.info('DeviceResourcesService: freeCaptureResources');\r\n    if(this.appState.isAppRecording()) {\r\n      this.log.info('DeviceResourcesService: application is recording - not freeing resources');\r\n      return Promise.resolve();\r\n    }\r\n    if(forceAndLock) this.freeResourcesLock = forceAndLock; //noly enabling the lock (disabling it with an explicit call to getResources...)\r\n    if(forceAndLock || this.currentResourceState === this.RESOURCES_STATE.IN_USE &&\r\n      this.appState.getApplicationWindowState() === this.appState.WINDOW_STATE.HIDDEN) { //duplicate check for hidden window for external use\r\n\r\n      this.currentResourceState = this.RESOURCES_STATE.FREE; //to block duplicate calls\r\n      return this.devicePreviewService.stopPreviewSome(Object.keys(this.appState.getActiveVisualSessions()))\r\n        .then(() => {\r\n          this.log.info('DeviceResourcesService: successfully closed devices preview and freed resources');\r\n        })\r\n        .catch((err) => {\r\n          this.log.error('DeviceResourcesService: Failed to free capture devices resources. ' + utils.stringifyMsg(err));\r\n          this.currentResourceState = this.RESOURCES_STATE.IN_USE;\r\n          return Promise.reject(err);\r\n        });\r\n\r\n    } else {\r\n      this.log.info('DeviceResourcesService: resources are already free.');\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-resources.service.ts","/**\r\n * Created by rnd-classroom on 10/8/2017.\r\n */\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {Injector} from '@angular/core';\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport * as _ from 'lodash';\r\nimport {utils} from \"../../../utils/utils\";\r\n\r\nconst  mediaTypeMappings = {\r\n  'audio' : 'Audio',\r\n  'video' : 'Video',\r\n  'screen' : 'Video'\r\n}\r\n\r\nexport class DeviceSettingsServiceBase {\r\n\r\n  // holds per session data\r\n  // key is sessionName\r\n  protected sessions: any = {};\r\n  protected limits: any = {}\r\n\r\n  constructor(protected persistencyService: AppPersistentDataService,\r\n              protected appState: AppStateService,\r\n              protected log: AppLoggerService,\r\n              protected appConfig:AppConfigService)\r\n  {}\r\n\r\n  protected addSession(sessionName: string){\r\n    this.sessions[sessionName] = {\r\n      InputTypes :[],\r\n      selectedInputType: null\r\n    }\r\n  }\r\n\r\n  public getSessionId(sessionName: string)\r\n  {\r\n    if (!this.getSessionData(sessionName)){\r\n      return null;\r\n    }\r\n    return this.getSessionData(sessionName).sessionId;\r\n  }\r\n\r\n  public getPrimarySessionId() {\r\n    let primarySessionName = this.appConfig.getConfigData('config.captureApp.primarySessionName');\r\n    return this.getSessionId(primarySessionName);\r\n  }\r\n\r\n  /*\r\n  *\r\n  * */\r\n  private getPersistedMediaType(selectedDeviceId, inputTypes: {description:string}[], userSettings ,defaultValue : any) {\r\n    let persistedInputType = defaultValue;\r\n    if (userSettings && userSettings['device_id'] === selectedDeviceId && userSettings['input_type_id'] && !_.isEmpty(userSettings['input_type_id'])) {\r\n      persistedInputType = userSettings['input_type_id'];\r\n\r\n      // REMOVEME: persistency format upgrade: string field changed to object.\r\n      // former 'description' made an 'id'\r\n      if (_.isString(persistedInputType)) {\r\n        persistedInputType = _.find(inputTypes, (type) => _.eq(JSON.parse(type.description).id, persistedInputType))\r\n        if(persistedInputType) {\r\n          this.log.info('upgraded - found type: ' + utils.stringifyMsg(persistedInputType));\r\n        }\r\n      } else {\r\n        /**\r\n         *   check if in recovery mode.\r\n         *   if not keep persisted type only if matching type found\r\n         */\r\n        if(!this.appState.isAppRecording()) {\r\n          persistedInputType = _.find(inputTypes, (type) => _.eq(type.description, persistedInputType.description))\r\n        }\r\n      }\r\n\r\n      if(!persistedInputType)\r\n        persistedInputType = defaultValue\r\n    }\r\n    this.log.info('getPersistedMediaType input type ' + utils.stringifyMsg(persistedInputType));\r\n    return persistedInputType\r\n  }\r\n\r\n  getInitialInputType(sessionName: string, inputTypes, selectedDeviceId)\r\n  {\r\n    return this.loadUserSettings(sessionName)\r\n      .then((Settings) => {\r\n        return this.getPersistedMediaType(selectedDeviceId, inputTypes, Settings, inputTypes[0]);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load initial input type for ' + sessionName + ' ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * always return a new promise for settings data\r\n   * @returns {Promise<T>}\r\n   */\r\n  private loadDeviceUserSettings(sessionName): any\r\n  {\r\n    return Promise.all([Promise.resolve(this.appConfig.getConfigData('config.captureApp.limits')),this.persistencyService.get(sessionName)])\r\n      .then((result) => {\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        this.log.warn('Failed to load user settings for ' + sessionName + ' device. ' + utils.stringifyMsg(err));\r\n        return [{}, {}];\r\n      });\r\n  }\r\n\r\n  /**\r\n   * always return a new promise for settings data\r\n   * @returns {Promise<T>}\r\n   */\r\n  loadUserSettings(sessionName: string)\r\n  {\r\n    return this.loadDeviceUserSettings(sessionName)\r\n      .then((results) => {\r\n        this.limits =  results[0]\r\n        return results[1];\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get initial device selection\r\n   * @param deviceList\r\n   * @param userSettings\r\n   * @return {Promise<T>|Promise<U>|Promise<R>}\r\n   */\r\n  private getInitialDeviceSelection(sessionName: string, deviceList: any[], userSettings: any): any\r\n  {\r\n    return this.getAllSessionsPersistentData(sessionName)\r\n      .then((persistentDataArray) => {\r\n        //remove all undefined elements in the array.\r\n        persistentDataArray = _.compact(persistentDataArray);\r\n        //remove current session persistent data\r\n        persistentDataArray.splice(0, 1);\r\n        //default selection\r\n        let selectedDevice = deviceList[0]; //todo impl. default selection algorithm.\r\n        //check user settings\r\n        if(userSettings && userSettings['device_id'] && !this.isDeviceInUse(userSettings['device_id'], sessionName, persistentDataArray)) {\r\n          for (let key in deviceList) {\r\n            if(deviceList[key].device_id === userSettings['device_id']) {\r\n              selectedDevice = deviceList[key];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        this.log.info('getInitialDeviceSelection:' + utils.stringifyMsg(selectedDevice));\r\n        return selectedDevice;\r\n      });\r\n  }\r\n\r\n  getAllSessionsPersistentData(mySession)\r\n  {\r\n    // get session names\r\n    let sessions: string[] = this.getSessionsNames();\r\n    // remove our sessionName\r\n    _.pull(sessions, mySession);\r\n    // first push our session\r\n    let promises = [this.persistencyService.get(mySession)];\r\n    _.each(sessions, (s)=>{\r\n      promises.push(this.persistencyService.get(s));\r\n    });\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  //get initial default selection\r\n  getInitialDevice(sessionName: string, deviceList)\r\n  {\r\n    return this.loadUserSettings(sessionName)\r\n      .then((Settings) => {\r\n        return this.getInitialDeviceSelection(sessionName, deviceList, Settings)\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load initial device of type ' + sessionName + ' ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * set selected video|screen type in device recording session\r\n   * @param sessionId\r\n   * @param selectedInputType (input type description which used as its' unique id)\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  setSelectedInputType(sessionName,sessionId, selectedInputType, saveData: boolean = true)\r\n  {\r\n    let media = sessionName === 'audio' ? mediaTypeMappings['audio'] : mediaTypeMappings['video']; //video / screen types are the same\r\n    this.appState.onCallStarted('setSelected' + media + 'InputType', sessionId);\r\n    return ipcWrapper.sendIPC(sessionId + `-set${media}InputType`, selectedInputType.description)\r\n      .then(() => {\r\n        this.appState.onCallEnded('setSelected' + media + 'InputType - SUCCESS', sessionId);\r\n        this.sessions[sessionName].selectedInputType = selectedInputType\r\n        if(saveData) {\r\n          this.persistencyService.set(sessionName + '.input_type_id', this.sessions[sessionName].selectedInputType);\r\n        }\r\n        return this.sessions[sessionName].selectedInputType;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('setSelected' + media + 'InputType - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * set selected device in device recording session\r\n   * @param sessionId\r\n   * @param device\r\n   * @param saveData\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  setSelectedDevice(sessionName: string,\r\n                    sessionId: string,\r\n                    device: any,\r\n                    saveData: boolean = true)\r\n  {\r\n    return this.setSelectedDeviceInternal(sessionName,sessionId, device)\r\n      .then((device) => {\r\n        this.sessions[sessionName].selectedDevice = device;\r\n        if(saveData) {\r\n          this.persistencyService.set(sessionName + '.device_id', device);\r\n        }\r\n        return device;\r\n      });\r\n  }\r\n  /**\r\n   * set selected device in device recording session\r\n   * @param sessionId\r\n   * @param device\r\n   * @param type device type\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  private setSelectedDeviceInternal(sessionName,sessionId, device) : any\r\n  {\r\n    let mediaType = sessionName === 'audio' ? mediaTypeMappings['audio'] : mediaTypeMappings['video']; //video / screen types are the same\r\n    this.appState.onCallStarted('setSelected Device: ' + device, sessionId);\r\n    return ipcWrapper.sendIPC(sessionId + `-set${mediaType}Device`, device)\r\n      .then(() => {\r\n        this.appState.onCallEnded(`setSelected ${sessionName} Device - SUCCESS`, sessionId);\r\n        return device;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded(`setSelected ${sessionName} Device - FAILURE`, sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  // Set configuration\r\n  isDeviceInUse(device: string, sessionNameToExclude: string, otherSessionsPersistentData: any[]): boolean{\r\n    let inUse = false;\r\n    //check for other sessions current usage\r\n    _.each(this.sessions, (session, sessionName)=>{\r\n      if (session.selectedDevice === device && sessionNameToExclude != sessionName){\r\n        inUse = true;\r\n      }\r\n    });\r\n    //check for other sessions future usage\r\n    _.each(otherSessionsPersistentData, (data) =>{\r\n      if (data['device_id'] === device){\r\n        inUse = true;\r\n      }\r\n    });\r\n    return inUse;\r\n  }\r\n\r\n  getSessionData(sessionName)\r\n  {\r\n    return this.sessions[sessionName];\r\n  }\r\n\r\n  getSessionDataById(sessionId): any\r\n  {\r\n    let ret = null;\r\n    this.getSessionsNames().forEach((sessionName)=> {\r\n      if (this.sessions[sessionName].sessionId === sessionId){\r\n        ret = this.sessions[sessionName];\r\n      }\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  getSessionNameById(sessionId): string\r\n  {\r\n    let ret = null;\r\n    this.getSessionsNames().forEach((sessionName)=> {\r\n      if (this.sessions[sessionName].sessionId === sessionId){\r\n        ret = sessionName;\r\n      }\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  getSessionsNames(): string[]\r\n  {\r\n    return _.keys(this.sessions);\r\n  }\r\n\r\n  setDeviceInUse(sessionName: string, device: string)\r\n  {\r\n    this.sessions[sessionName].selectedDevice = device;\r\n  }\r\n\r\n  /**\r\n   * loads a list of input type for requested device\r\n   * filtering out un relevant resolution / fps and other properties\r\n   * also reorder according to input type 'grade'\r\n   * @param sessionId\r\n   * @param selectedDevice\r\n   * @param limits\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  protected loadDeviceInputTypeList(sessionName,sessionId, selectedDevice,type): any\r\n  {\r\n    let mediaType = mediaTypeMappings[type]\r\n    let limits = this.limits[type]\r\n    this.appState.onCallStarted('load' + mediaType + 'InputTypeList for ' + selectedDevice, sessionId);\r\n    return ipcWrapper.sendIPC(sessionId + `-get${mediaType}InputTypeList`, selectedDevice)\r\n      .then((inputTypes) => {\r\n        this.appState.onCallEnded('load' + mediaType + 'InputTypeList - SUCCESS', sessionId);\r\n\r\n        return this.filterInputTypes(inputTypes,limits);\r\n      })\r\n      .then((inputTypes) => {\r\n        this.sessions[sessionName].InputTypes = _.clone(inputTypes);\r\n        return this.sessions[sessionName].InputTypes;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('load' + mediaType + 'InputTypeList - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  protected filterInputTypes(inputTypes,limits) : any{\r\n     throw new Error('not implemented')\r\n  }\r\n\r\n  saveDeviceSelections(sessionName: string) : any{\r\n    return Promise.all([\r\n      this.persistencyService.set(sessionName + '.device_id', this.sessions[sessionName].selectedDevice),\r\n      this.persistencyService.set(sessionName + '.input_type_id', this.sessions[sessionName].selectedInputType || {}) ])\r\n  }\r\n\r\n  clearDeviceSelections(sessionName : string, clearPersistency: boolean = false) : any\r\n  {\r\n    return this.persistencyService.get(sessionName)\r\n      .then((sessionObj) => {\r\n        let previewState = sessionObj && sessionObj['preview'] ? sessionObj['preview'] : 'disabled';\r\n        this.sessions[sessionName].selectedDevice = null;\r\n        this.sessions[sessionName].selectedInputType = null;\r\n        //settings a new session presistency object with last preview state - only settings was cleared\r\n        return clearPersistency ? this.persistencyService.set(sessionName, {preview: previewState}) : Promise.resolve(true);\r\n      });\r\n  }\r\n\r\n\r\n   // encoder configuration\r\n\r\n  /**\r\n   * loads a list of device encoders for the device that was set earlier\r\n   * @param sessionId, type (sessionName)\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  loadDeviceEncoderList(sessionId, sessionName: string): any\r\n  {\r\n    let media = sessionName === 'audio' ? mediaTypeMappings['audio'] : mediaTypeMappings['video']; //video / screen types are the same\r\n    this.appState.onCallStarted('load' + media + 'EncoderList', sessionId);\r\n    return ipcWrapper.sendIPC(sessionId + `-get${media}EncoderList`)\r\n      .then((encoders : any) => {\r\n        this.appState.onCallEnded('load' + media + 'EncoderList - SUCCESS', sessionId);\r\n        return encoders;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('load' + media + 'EncoderList - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * loads a list of video encoders for the video|screen device that was set earlier\r\n   * @param sessionId\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  loadEncoderList(sessionName: string, sessionId)\r\n  {\r\n    return this.loadDeviceEncoderList(sessionId, sessionName)\r\n      .then((encoders : any) => {\r\n        this.sessions[sessionName].Encoders = _.clone(encoders);\r\n        // loading the list might yield a different result,\r\n        // so make sure not to use something that does not exist anymore\r\n        return this.getInitialEncoder(sessionName, this.sessions[sessionName].Encoders);\r\n      })\r\n      .then((encoder) => {\r\n        this.sessions[sessionName].selectedEncoder = encoder;\r\n        return this.sessions[sessionName].Encoders;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * getting initial input type\r\n   * if user already set one - take user selection (if exists)\r\n   * if not take one according to configured parameters\r\n   * @param inputTypes\r\n   * @returns {string|(()=>string)|any}\r\n   */\r\n\r\n\r\n  getInitialEncoder(sessionName: string, encoders: any[])\r\n  {\r\n    let that = this;\r\n    return that.loadUserSettings(sessionName)\r\n      .then((settings) => {\r\n        return this.getInitialEncoderSelection(encoders, settings);\r\n      })\r\n      .catch((err) => {\r\n        that.log.error('Failed to load initial encoder ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param encoders\r\n   * @param userSettings\r\n   * @return {any}\r\n   */\r\n  getInitialEncoderSelection(encoders, userSettings): any\r\n  {\r\n    //default selection\r\n    let selectedEncoder = encoders[0].encoder_id; //todo impl. default selection algorithm.\r\n    //check user settings\r\n    if(userSettings && userSettings['encoder_id']) {\r\n      for (let key in encoders) {\r\n        if(encoders[key].encoder_id === userSettings['encoder_id']) {\r\n          selectedEncoder = userSettings['encoder_id'];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return selectedEncoder;\r\n  }\r\n\r\n  /**\r\n   * set selected encoder in device recording session\r\n   * @param sessionId\r\n   * @param encoder\r\n   * @param sessionName\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  private setSelectedDeviceEncoder(sessionId: string, encoder: string, sessionName: string) : any\r\n  {\r\n    let media = sessionName === 'audio' ? mediaTypeMappings['audio'] : mediaTypeMappings['video']; //video / screen types are the same\r\n    this.appState.onCallStarted('setSelected' + media + 'Encoder: ' + encoder, sessionId);\r\n    return ipcWrapper.sendIPC(`${sessionId}-set${media}Encoder`, encoder)\r\n      .then(() => {\r\n        this.appState.onCallEnded('setSelected' + media + 'Encoder - SUCCESS', sessionId);\r\n        return encoder;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('setSelected' + media + 'Encoder - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  // EncoderConfig: { number bitrate; string profile ('base','high','main'); string mode ('vbr','cbr') }\r\n  setSelectedDeviceEncoderConfig(sessionId: string, encoderConfig: any, sessionName: string) : any\r\n  {\r\n    let media = sessionName === 'audio' ? mediaTypeMappings['audio'] : mediaTypeMappings['video']; //video / screen types are the same\r\n    this.appState.onCallStarted('setSelected' + media + 'EncoderConfig: ' + JSON.stringify(encoderConfig), sessionId);\r\n    return ipcWrapper.sendIPC(sessionId + `-set${media}EncoderConfig`, encoderConfig)\r\n      .then(() => {\r\n        this.appState.onCallEnded('setSelected' + media + 'EncoderConfig - SUCCESS', sessionId);\r\n        return encoderConfig;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('setSelected' + media + 'EncoderConfig - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * set selected encoder in recording session\r\n   * @param sessionId\r\n   * @param encoder\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  setSelectedEncoder(sessionName, sessionId, encoder, saveData = true)\r\n  {\r\n    return this.setSelectedDeviceEncoder(sessionId, encoder, sessionName)\r\n      .then((encoder) => {\r\n        this.sessions[sessionName].selectedEncoder = encoder;\r\n        if(saveData) {\r\n          this.persistencyService.set( sessionName + '.encoder_id', encoder);\r\n        }\r\n        return encoder;\r\n      });\r\n  }\r\n\r\n  protected generateEncoderConfig(sessionName) : any  {\r\n      throw new Error('not-implemented')\r\n  }\r\n\r\n  // EncoderConfig: { number bitrate; string profile ('base','high','main'); string mode ('vbr','cbr') }\r\n  setSelectedEncoderConfig(sessionName, sessionId, saveData = true)\r\n  {\r\n    return this.setSelectedDeviceEncoderConfig(sessionId, this.generateEncoderConfig(sessionName), sessionName)\r\n      .then((encoderConfig) => {\r\n        if(saveData) {\r\n          this.persistencyService.set( sessionName + '.encoder_config', encoderConfig);\r\n        }\r\n        return encoderConfig;\r\n      });\r\n  }\r\n\r\n  getSessionNameByDeviceId(device_id: any) {\r\n    let retSessionName;\r\n\r\n    _.each(this.sessions, (session, sessionName)=>{\r\n      if (session.selectedDevice === device_id) {\r\n        retSessionName = sessionName;\r\n        return false; // breaks lodash loop\r\n      }\r\n    });\r\n\r\n    return retSessionName;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/device-settings-base.service.ts","import {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from \"lodash\";\r\nimport {Subject} from \"rxjs\";\r\nimport {Injectable} from '@angular/core';\r\nimport {DeviceSettingsServiceBase}  from \"./device-settings-base.service\"\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\n\r\n@Injectable()\r\nexport class VideoDeviceSettingsService extends DeviceSettingsServiceBase  {\r\n\r\n  //holds device list objects for current settings load (needed for device bounds property)\r\n  private deviceObjects = {};\r\n\r\n  readonly Bitrates: any[] = [\r\n    {label: '1000 Kbps', value: '1000000'},\r\n    {label: '1500 Kbps', value: 1500 * 1000},\r\n    {label: '2000 Kbps', value: 2000 * 1000},\r\n    {label: '2500 Kbps', value: 2500 * 1000},\r\n    {label: '3000 Kbps', value: 3000 * 1000},\r\n    {label: '4000 Kbps', value: 4000 * 1000},\r\n    {label: '4500 Kbps', value: 4500 * 1000},\r\n    {label: '5000 Kbps', value: 5000 * 1000},\r\n    {label: '5500 Kbps', value: 5500 * 1000},\r\n    {label: '6000 Kbps', value: 6000 * 1000}];\r\n\r\n  private encoderProfiles: any[] = [\r\n    {label: 'Base', value: 'Base'},\r\n    {label: 'Main', value: 'Main'},\r\n    {label: 'High', value: 'High'}];\r\n\r\n\r\n\r\n  constructor(persistencyService: AppPersistentDataService,\r\n              appState: AppStateService,\r\n              log: AppLoggerService,\r\n              appConfig:AppConfigService,\r\n              private devicePreviewService: DevicePreviewService)\r\n  {\r\n    super(persistencyService,appState,log,appConfig);\r\n    this.addDefaultSessionsObjects();\r\n  }\r\n\r\n  loadVideoBitrateList(sessionId)\r\n  {\r\n    return Promise.resolve(_.clone(this.Bitrates));\r\n  }\r\n\r\n  loadVideoProfileList(sessionId)\r\n  {\r\n    return this.getEncoderProfiles();\r\n  }\r\n\r\n  public getDeviceData(deviceId: any)\r\n  {\r\n    return this.deviceObjects[deviceId];\r\n  }\r\n\r\n  public getDeviceDataBySessionId(sessionId: any)\r\n  {\r\n    let sessionData = this.getSessionDataById(sessionId);\r\n    let deviceData = this.getDeviceData(sessionData.selectedDevice);\r\n\r\n    return deviceData;\r\n  }\r\n\r\n  public getDeviceTypeById(deviceId: any)\r\n  {\r\n    return (this.deviceObjects[deviceId] && this.deviceObjects[deviceId].capture_type.toLowerCase() == 'screen') ? 'screen' : 'video';\r\n  }\r\n\r\n  public getDeviceTypeBySessionName(sessionName: any)\r\n  {\r\n    return this.getDeviceTypeById(this.getSessionData(sessionName).selectedDevice);\r\n  }\r\n\r\n  /**\r\n   * return all video device settings for settings component\r\n   * @param sessionName\r\n   * @param defaultDeviceType\r\n   */\r\n  public getVideoDeviceSettings(sessionName, defaultDeviceType)\r\n  {\r\n    let sessionId = this.getSessionId(sessionName);\r\n    //get device list\r\n    return this.registerForDeviceListLoading(sessionName, defaultDeviceType)\r\n      .then((captureDevices) => {\r\n        this.log.info('loading ' + sessionName + ' device list');\r\n        return captureDevices;\r\n      })\r\n      .then((captureDevices) => {\r\n        return Promise.all(\r\n          [\r\n            Promise.resolve(captureDevices),\r\n            this.loadEncoderList(sessionName, sessionId),\r\n            this.loadVideoBitrateList(sessionId),\r\n            this.loadVideoProfileList(sessionId)\r\n          ]);\r\n      });\r\n  }\r\n\r\n  //handling loadDeviceList requests in order to make sure they will be executed sync.\r\n  private loadDeviceListRequests = [];\r\n  //loading device list lock\r\n  private loadingDeviceList = false;\r\n\r\n  public registerForDeviceListLoading(sessionName: string, defaultDeviceType: string): Promise<any>\r\n  {\r\n    this.log.info('registerForDeviceListLoading: ' + sessionName + ', ' + defaultDeviceType);\r\n    let deviceListRequest = new Subject<boolean>();\r\n    let deviceListRequestPromise = deviceListRequest.asObservable().toPromise();\r\n    this.loadDeviceListRequests.push({sessionName: sessionName, defaultDeviceType: defaultDeviceType, observerPromise: deviceListRequest});\r\n    this.loadDeviceListSync();\r\n    return deviceListRequestPromise;\r\n  }\r\n\r\n  private loadDeviceListSync()\r\n  {\r\n    this.log.info('loadDeviceListSync triggered');\r\n    if(!this.loadingDeviceList && this.loadDeviceListRequests.length > 0) {\r\n      let request = this.loadDeviceListRequests.shift();\r\n      if(request) {\r\n        this.log.info('loadDeviceListSync calling to loadDeviceList and locking device list requests');\r\n        this.loadDeviceList(request.sessionName, request.defaultDeviceType, request.observerPromise);\r\n        this.loadingDeviceList = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadDeviceList(sessionName: string, defaultDeviceType: string, observerPromise: any)\r\n  {\r\n    this.log.info('loadDeviceList: sessionName: ' + sessionName + ' defaultDeviceType: ' + defaultDeviceType);\r\n    ipcWrapper.sendIPC('getVideoDeviceList')\r\n      .then((devices: any[]) => {\r\n        //reset device list\r\n        this.deviceObjects = {};\r\n        //filtering devices with empty device_id\r\n        devices = _.filter(devices, (device) => {\r\n          return !_.isEmpty(device['device_id']);\r\n        });\r\n\r\n        this.log.info('devices loaded: ' + JSON.stringify(devices));\r\n\r\n        for (let i in devices) {\r\n          this.deviceObjects[devices[i].device_id] = devices[i];\r\n        }\r\n        return devices;\r\n      })\r\n      .then((devices) => {\r\n        return Promise.all([this.getAllSessionsPersistentData(sessionName), Promise.resolve(devices)]);\r\n      })\r\n      .then(([persistencyData,devices]) => {\r\n        let ourSessionPersistencyData =  persistencyData[0];\r\n        persistencyData.splice(0, 1);\r\n\r\n        // remove sessions where device_id is not set\r\n        persistencyData = _.filter(persistencyData, (pd)=>{\r\n          return !(_.isNil(pd) ||(!_.isNil(pd) && _.isNil(pd['device_id'])));\r\n        })\r\n\r\n        let ordered = _.sortBy(devices, (d)=>{\r\n          return (d.capture_type === defaultDeviceType) ? 0 : 1;\r\n        });\r\n\r\n        // remove devices in use by other sessions\r\n        let filtered = _.filter(ordered, (d)=>{\r\n          return (!this.isDeviceInUse(d.device_id, sessionName, persistencyData));\r\n        })\r\n\r\n        // get devices in use from persistencyData\r\n        let devicesInUse: string[];\r\n        if (persistencyData && persistencyData.length>0) {\r\n          devicesInUse = _.map(persistencyData, (x) => {\r\n            return x['device_id'];\r\n          });\r\n        }\r\n        devicesInUse = _.filter(devicesInUse, (d)=> { return _.isNil(d) });\r\n\r\n        // filter out devices used by other sessions ( by persistancy ) - this is important for startup\r\n        let filtered2 = _.filter(filtered, (d)=>{\r\n          return (_.findIndex(devicesInUse, function(pd) { return pd == d; }) == -1 );\r\n        })\r\n\r\n        // set the device so the 2nd session wont use it\r\n        if (filtered2.length > 0 && !_.isNil(ourSessionPersistencyData) && !_.isNil(ourSessionPersistencyData['device_id']) &&\r\n          (this.appState.isAppRecording() || _.find(devices, ['device_id', ourSessionPersistencyData['device_id']]))) { //(in addition - if app is not recoding and our persistency device doesn't exist - don't set it as in use)\r\n          this.setDeviceInUse(sessionName, ourSessionPersistencyData['device_id']);\r\n        }\r\n        else if(!_.isNil(filtered2) && !_.isNil(filtered2[0]) &&!_.isNil(filtered2[0].device_id)){\r\n          this.setDeviceInUse(sessionName, filtered2[0].device_id);\r\n        }\r\n\r\n        observerPromise.next(filtered2);\r\n        observerPromise.complete();\r\n\r\n        this.log.info('defaultDeviceType freeing device list requests lock and calling next request if needed');\r\n        this.loadingDeviceList = false;\r\n        this.loadDeviceListSync();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n        this.log.error('defaultDeviceType freeing device list requests lock and calling next request if needed');\r\n        this.loadingDeviceList = false;\r\n        this.loadDeviceListSync();\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * loads a list of input type for requested device\r\n   * filtering out un relevant resolution / fps and other video properties\r\n   * also reorder according to input type 'grade'\r\n   * @param sessionId\r\n   * @param selectedDevice\r\n   * @returns {Promise<TResult>}\r\n   */\r\n  loadInputTypeList(sessionName, sessionId, selectedDevice, type)\r\n  {\r\n    return this.loadDeviceInputTypeList(sessionName,\r\n      sessionId,\r\n      selectedDevice,\r\n      type)\r\n  }\r\n\r\n  protected filterInputTypes(inputTypes,limits) {\r\n    return utils.filterAndSortInputs(inputTypes,limits);\r\n  }\r\n\r\n  getEncoderProfiles()\r\n  {\r\n    return ipcWrapper.sendIPC('getOsData')\r\n      .then(osData => {\r\n        let versionParts = osData['osVersion'].split('.');\r\n        // win ver <= 7\r\n        if (Number(versionParts[0]) < 7 && Number(versionParts[1]) < 2){\r\n          this.encoderProfiles = [\r\n            {label: 'Base', value: 'Base'},\r\n            {label: 'Main', value: 'Main'}];\r\n        }\r\n        return _.clone(this.encoderProfiles);\r\n      })\r\n      .catch((err) => {\r\n        return _.clone(this.encoderProfiles);\r\n      });\r\n  }\r\n\r\n  getInitialBitrate(sessionName: string, bitrates: any[])\r\n  {\r\n    return this.loadUserSettings(sessionName)\r\n      .then((settings) => {\r\n        return this.getInitialBitrateInternal(bitrates, settings);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load initial bitrate for ' + sessionName + ' ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get initial device bitrate\r\n   * @param bitrates\r\n   * @param userSettings\r\n   * @return {any}\r\n   */\r\n  private getInitialBitrateInternal(bitrates, userSettings): any\r\n  {\r\n    //default selection\r\n    let selectedBitrate = bitrates[2].value; //todo impl. default selection algorithm.\r\n    //check user settings\r\n    if(userSettings && userSettings['encoder_config'] && userSettings['encoder_config']['bitrate']) {\r\n      selectedBitrate = userSettings['encoder_config']['bitrate'];\r\n    }\r\n    return selectedBitrate;\r\n  }\r\n\r\n  getInitialEncoderProfile(sessionName: string, encoderProfiles: any[])\r\n  {\r\n    return this.loadUserSettings(sessionName)\r\n      .then((settings) => {\r\n        return this.getInitialEncoderProfileInternal(encoderProfiles, settings);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load initial encoder profile for ' + sessionName + ' ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * get initial encoder profile\r\n   * @param encoderProfiles\r\n   * @param userSettings\r\n   * @return {Promise<T>|Promise<U>|Promise<R>}\r\n   */\r\n  private getInitialEncoderProfileInternal(encoderProfiles, userSettings) : any\r\n  {\r\n    let selectedProfile = encoderProfiles[0].value; //todo impl. default selection algorithm.\r\n    //check user settings\r\n    if(userSettings && userSettings['encoder_config'] && userSettings['encoder_config']['profile']) {\r\n      selectedProfile = userSettings['encoder_config']['profile'];\r\n    }\r\n    return selectedProfile;\r\n  }\r\n\r\n// EncoderConfig: { number bitrate; string profile ('base','high','main'); string mode ('vbr','cbr') }\r\n  private generateVideoEncoderConfig(selectedBitrate, selectedEncoderProfile)\r\n  {\r\n    let encoderConfig = {};\r\n    encoderConfig['bitrate'] = parseInt(selectedBitrate);\r\n    encoderConfig['brmode'] = 'cbr';\r\n    encoderConfig['profile'] = selectedEncoderProfile;\r\n    return encoderConfig;\r\n  }\r\n\r\n  protected generateEncoderConfig(sessionName) : any  {\r\n    return this.generateVideoEncoderConfig(this.sessions[sessionName].selectedBitrate, this.sessions[sessionName].selectedEncoderProfile)\r\n  }\r\n\r\n  public loadInitialVideoDeviceSettings(sessionName: string, defaultDeviceType: string)\r\n  {\r\n    return this.setInitialDevice(sessionName, defaultDeviceType)\r\n      .then(() => {\r\n        return this.setInitialDeviceEncoder(sessionName);\r\n      })\r\n      .then(() => {\r\n        return this.setInitialInputType(sessionName, this.getSessionData(sessionName).selectedDevice)\r\n      })\r\n      .then(() => {\r\n        return this.setInitialDeviceEncoderConfig(sessionName);\r\n      })\r\n      .then(() => {\r\n        return this.resetToFullScreenCapture(sessionName, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * return initial selected video device\r\n   */\r\n  public setInitialDevice(sessionName: string, defaultDeviceType: string)\r\n  {\r\n    this.log.info('setInitialDevice - ' + sessionName);\r\n    return this.registerForDeviceListLoading(sessionName, defaultDeviceType)\r\n      .then((devices) => {\r\n        if(!_.isEmpty(devices)) {\r\n          return this.configureInitialDevice(sessionName, devices);\r\n        } else {\r\n          this.clearDeviceSelections(sessionName, false);\r\n          return this.noDevicesPromiseReject();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load and set initial video device. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public setInitialDeviceEncoder(sessionName: string)\r\n  {\r\n    this.log.info('setInitialDeviceEncoder - ' + sessionName);\r\n    return this.loadEncoderList(sessionName, this.getSessionId(sessionName))\r\n      .then((encoders) => {\r\n        return this.configureInitialEncoder(sessionName, encoders);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to setInitialDeviceEncoder for ' + sessionName + '. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public setInitialInputType(sessionName: string, captureDevice)\r\n  {\r\n    this.log.info('setInitialInputType - ' + captureDevice)\r\n    return this.loadInputTypeList(sessionName, this.getSessionId(sessionName), captureDevice, this.getDeviceTypeById(captureDevice))\r\n      .then((inputTypes) => {\r\n        if(!_.isEmpty(inputTypes)) {\r\n          return this.configureInitialInputType(sessionName, inputTypes, captureDevice);\r\n        } else {\r\n          return Promise.reject('No input types were found for current ' + sessionName + ' device: ' + captureDevice);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to load and set initial ' + captureDevice + ' input type. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public setInitialDeviceEncoderConfig(sessionName: string, saveDate = false)\r\n  {\r\n    this.log.info('setInitialDeviceEncoderConfig - ' + sessionName);\r\n    return this.loadVideoBitrateList(this.getSessionId(sessionName))\r\n      .then((bitrates) => {\r\n        return this.configureInitialBitrate(sessionName, bitrates);\r\n      })\r\n      .then(() => {\r\n        return this.loadVideoProfileList(this.getSessionId(sessionName))\r\n      })\r\n      .then((encoderProfiles) => {\r\n        return this.configureInitialEncoderProfile(sessionName, encoderProfiles);\r\n      })\r\n      .then(() => {\r\n        return this.setSelectedEncoderConfig(sessionName, this.getSessionId(sessionName), saveDate);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * returns the selection list default selection, if the list contains the current selected input type value\r\n   * (of the requested option) it will return that value. otherwise it will return the first list element value\r\n   * @param inputProperty\r\n   * @param selectionList\r\n   * @param reset\r\n   * @returns {any}\r\n   */\r\n  public getDefaultSelection(sessionName, inputs,inputProperty,  reset:boolean=false) {\r\n    if (!reset)\r\n    {\r\n      let input = _.find(inputs,  [inputProperty , this.getSessionData(sessionName).selectedInputType[inputProperty]]);\r\n      if (input) {\r\n        return input[inputProperty];\r\n      }\r\n    }\r\n\r\n    return inputs[0][inputProperty];\r\n  }\r\n\r\n  public identifyDevice(selectedDevice, sessionName)\r\n  {\r\n    let device = this.getDeviceData(selectedDevice);\r\n    if(device['bounds']) {\r\n      ipcWrapper.sendIPC('identify-device', { deviceBounds: device['bounds'], sessionName: sessionName });\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  public shouldShowDeviceIndication(sessionName)\r\n  {\r\n    return this.getSessionData(sessionName) &&\r\n      this.getSessionData(sessionName).selectedDevice &&\r\n      this.getDeviceTypeBySessionName(sessionName) === 'screen';\r\n  }\r\n\r\n  private configureInitialDevice(sessionName: string, devices: any)\r\n  {\r\n    this.log.info('configureInitialDevice - ' + sessionName);\r\n    return this.getInitialDevice(sessionName, devices)\r\n      .then((selectedDevice) => {\r\n        selectedDevice = selectedDevice.device_id\r\n        this.log.info('setting the following ' + sessionName + ' device: ' + selectedDevice);\r\n\r\n        return this.setSelectedDevice(sessionName, this.getSessionId(sessionName), selectedDevice, false);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to configure initial ' + sessionName + ' device ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      })\r\n  }\r\n\r\n  private configureInitialEncoder(sessionName: string, encoders)\r\n  {\r\n    this.log.info('configureInitialEncoder - ' + sessionName);\r\n    return this.getInitialEncoder(sessionName, encoders)\r\n      .then((selectedEncoder) => {\r\n        this.log.info('setting the following ' + sessionName + ' encoder: ' + selectedEncoder);\r\n        return this.setSelectedEncoder(sessionName, this.getSessionId(sessionName), selectedEncoder, false);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to configure initial ' + sessionName + ' device ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      })\r\n  }\r\n\r\n  private configureInitialInputType(sessionName: string, inputTypes, selectedDeviceId)\r\n  {\r\n    this.log.info('configureInitialInputType - ' + sessionName);\r\n    return this.getInitialInputType(sessionName, inputTypes, selectedDeviceId)\r\n      .then((inputType) => {\r\n        this.log.info('setting then following ' + sessionName + ' input type: ' + inputType['description']);\r\n        return this.setSelectedInputType(sessionName, this.getSessionId(sessionName), inputType, false);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to configure ' + sessionName + ' initial input type ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      })\r\n  }\r\n\r\n\r\n  private configureInitialBitrate(sessionName: string, bitrates)\r\n  {\r\n    this.log.info('configureInitialBitrate - ' + sessionName);\r\n    return this.getInitialBitrate(sessionName, bitrates)\r\n      .then((bitrate) => {\r\n        this.log.info('setting then following ' + sessionName + ' bitrate: ' + bitrate);\r\n        return this.setSelectedBitrate(sessionName, this.getSessionId(sessionName), bitrate);\r\n      })\r\n  }\r\n\r\n  private configureInitialEncoderProfile(sessionName: string, encoderProfiles)\r\n  {\r\n    this.log.info('configureInitialEncoderProfile - ' + sessionName);\r\n    return this.getInitialEncoderProfile(sessionName, encoderProfiles)\r\n      .then((encoderProfile) => {\r\n        this.log.info('setting then following ' + sessionName + ' encoderProfiles: ' + encoderProfile);\r\n        return this.setSelectedEncoderProfile(sessionName, this.getSessionId(sessionName), encoderProfile);\r\n      })\r\n  }\r\n\r\n  private noDevicesPromiseReject()\r\n  {\r\n    return Promise.reject('NO_VIDEO_DEVICES');\r\n  }\r\n\r\n  saveDeviceSelections(sessionName: string) : any\r\n  {\r\n    return Promise.all([\r\n      super.saveDeviceSelections(sessionName),\r\n      this.persistencyService.set(sessionName + '.encoder_id', this.sessions[sessionName].selectedEncoder),\r\n      this.persistencyService.set(sessionName + '.encoder_config',\r\n        this.generateVideoEncoderConfig(this.sessions[sessionName].selectedBitrate,\r\n          this.sessions[sessionName].selectedEncoderProfile))\r\n    ])\r\n  }\r\n\r\n  public clearDeviceSelections(sessionName: string, clearPersistency: boolean = false) :any\r\n  {\r\n    this.sessions[sessionName].selectedEncoder = null;\r\n    this.sessions[sessionName].selectedBitrate = null;\r\n    this.sessions[sessionName].selectedEncoderProfile = null;\r\n    this.setSessionRegion(sessionName, null);\r\n    return this.resetToFullScreenCapture(sessionName, false)\r\n      .catch(() => {})\r\n      .then(() => { // do this any way\r\n        return super.clearDeviceSelections(sessionName, clearPersistency)\r\n      });\r\n  }\r\n\r\n  clearSessions() {\r\n    this.log.info('Clearing sessions data');\r\n    this.sessions = {};\r\n    return this.addDefaultSessionsObjects();\r\n  }\r\n\r\n  public setSelectedBitrate(sessionName, sessionId, bitrate)\r\n  {\r\n    this.sessions[sessionName].selectedBitrate = bitrate;\r\n    return Promise.resolve(this.sessions[sessionName].selectedBitrate);\r\n  }\r\n\r\n  public setSelectedEncoderProfile(sessionName, sessionId, encoderProfile)\r\n  {\r\n    this.sessions[sessionName].selectedEncoderProfile = encoderProfile;\r\n    return Promise.resolve(this.sessions[sessionName].selectedEncoderProfile);\r\n  }\r\n\r\n  public onDeviceChange(sessionName: string, sessionId: string, selectedDevice: string,\r\n                        selectedEncoder: string, selectedBitrate: string, selectedEncoderProfile: string)\r\n  {\r\n    return this.clearDeviceSelections(sessionName, true)\r\n      .then(() => {\r\n        return this.setSelectedDevice(sessionName, sessionId, selectedDevice)\r\n      })\r\n      .then(() => {\r\n        return this.identifyDevice(selectedDevice, sessionName);\r\n      })\r\n      .then(() => {\r\n        return this.loadEncoderList(sessionName, sessionId);\r\n      })\r\n      .then((encoders) => {\r\n        return this.setSelectedEncoder(sessionName, sessionId, selectedEncoder);\r\n      })\r\n      .then(() => {\r\n        return this.loadInputTypeList(sessionName, sessionId, selectedDevice, this.getDeviceTypeById(selectedDevice));\r\n      })\r\n      .then((inputTypes) => {\r\n        this.log.info('loaded ' + sessionName + ' input type list');\r\n        return this.getInitialInputType(sessionName, inputTypes, selectedDevice);\r\n      })\r\n      .then((initialInputType) => {\r\n        return this.setSelectedInputType(sessionName, sessionId, initialInputType);\r\n      })\r\n      .then(() => {\r\n        return this.setSelectedBitrate(sessionName, sessionId, selectedBitrate);\r\n      })\r\n      .then(() => {\r\n        return this.setSelectedEncoderProfile(sessionName, sessionId, selectedEncoderProfile);\r\n      })\r\n      .then(() => {\r\n        return this.setSelectedEncoderConfig(sessionName, sessionId);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will reload device configuration and limits and sets the same device with new default configurations\r\n   * @param sessionName\r\n   * @param sessionId\r\n   * @param selectedDevice\r\n   */\r\n  public reloadDeviceDefaultConfiguration(sessionName: string)\r\n  {\r\n    let sessionId = this.getSessionId(sessionName);\r\n    let selectedDevice = this.sessions[sessionName].selectedDevice;\r\n    let isSessionEnabled = false;\r\n    return !selectedDevice ? Promise.resolve() : //there is no need to reload the device if it doesn't exist\r\n      this.clearDeviceSelections(sessionName, true)\r\n        .then(() => {\r\n          return this.loadUserSettings(sessionName);\r\n        })\r\n        .then((settigns) => {\r\n          isSessionEnabled = settigns.preview && settigns.preview === 'enabled' ? true : false;\r\n          return isSessionEnabled ?\r\n            this.devicePreviewService.stopPreviewAndDeactivateSession(sessionId) : Promise.resolve();\r\n        })\r\n        .then(() => {\r\n          return this.setSelectedDevice(sessionName, sessionId, selectedDevice)\r\n        })\r\n        .then(() => {\r\n          return this.loadEncoderList(sessionName, sessionId);\r\n        })\r\n        .then(() => {\r\n          return this.setSelectedEncoder(sessionName, sessionId, this.sessions[sessionName].selectedEncoder);\r\n        })\r\n        .then(() => {\r\n          return this.loadInputTypeList(sessionName, sessionId, selectedDevice, this.getDeviceTypeById(selectedDevice));\r\n        })\r\n        .then((inputTypes) => {\r\n          this.log.info('loaded ' + sessionName + ' input type list');\r\n          return this.getInitialInputType(sessionName, inputTypes, selectedDevice);\r\n        })\r\n        .then((initialInputType) => {\r\n          return this.setSelectedInputType(sessionName, sessionId, initialInputType);\r\n        })\r\n        .then(() => {\r\n          return this.setInitialDeviceEncoderConfig(sessionName, true);\r\n        })\r\n        .then(() => {\r\n          return this.resetToFullScreenCapture(sessionName, false);\r\n        })\r\n        .then(() => {\r\n          return isSessionEnabled ?\r\n            this.devicePreviewService.startPreviewAndActivateSession(sessionId, sessionName, this.getDeviceTypeById(sessionId)) :\r\n            Promise.resolve();\r\n        });\r\n  }\r\n\r\n//set selected input type according to all input selected parameters\r\n  public onCsChange(sessionName:string, sessionId:string, selectedInputType:string)\r\n  {\r\n    return this.setSelectedInputType(sessionName, sessionId, selectedInputType)\r\n      .then(() => {\r\n        return this.devicePreviewService.refreshDevice(sessionId, sessionName, this.getDeviceTypeBySessionName(sessionName));\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  public onBitrateChange(sessionName:string, sessionId:string, selectedBitrate:string)\r\n  {\r\n    return this.setSelectedBitrate(sessionName, sessionId, selectedBitrate)\r\n      .then(() => {\r\n        this.setSelectedEncoderConfig(sessionName, sessionId);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  public onEncoderProfileChange(sessionName:string, sessionId:string, selectedEncoderProfile:string)\r\n  {\r\n    return this.setSelectedEncoderProfile(sessionName, sessionId, selectedEncoderProfile)\r\n      .then(() => {\r\n        this.setSelectedEncoderConfig(sessionName, sessionId);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error(utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  getDeviceEncoders(sessionName){\r\n    return this.sessions[sessionName].Encoders;\r\n  }\r\n\r\n  getSelectedEncoder(sessionName){\r\n    return this.sessions[sessionName].selectedEncoder\r\n  }\r\n\r\n  /**\r\n   * save the state of the session capture region area (Full screen/ region)\r\n   *\r\n   * @param sessionName\r\n   * @param bounds: {}, null, undefined = Full Screen\r\n   *                { x, y, width, height} = region\r\n   */\r\n  setSessionRegion(sessionName: string, bounds: any)\r\n  {\r\n    this.sessions[sessionName]['region'] = bounds;\r\n  }\r\n\r\n  getSessionRegion(sessionName: string)\r\n  {\r\n    return this.sessions[sessionName] ? this.sessions[sessionName]['region'] : null;\r\n  }\r\n\r\n  /**\r\n   * change the screen recording and preview area + add rect to mark the location where we capture.\r\n   * @param sessionName\r\n   * @param engineBounds   =  { width, height, x, y}  or {} to clear.\r\n   * @param electronBounds\r\n   * @returns Promis\r\n   */\r\n  setVideoCaptureRegion(sessionName: string, engineBounds: any, electronBounds: any)\r\n  {\r\n    let captureBounds = engineBounds;\r\n    let sessionId = this.getSessionId(sessionName);\r\n    let selectionSquarePromise;\r\n    let error;\r\n\r\n    if(sessionId && this.getDeviceTypeBySessionName(sessionName) === 'screen') {\r\n\r\n      if (!_.isEmpty(engineBounds) && !_.isEmpty(electronBounds)) {\r\n        selectionSquarePromise = ipcWrapper.sendIPC('getScreenScaleFactorByPlatform', electronBounds)\r\n          .then((scaleFactor: number) => {\r\n            if(scaleFactor) {\r\n              captureBounds = { // removing the border width for not to capture selection square borders\r\n                width:  Math.floor(engineBounds.width - (4 * scaleFactor)),\r\n                height: Math.floor(engineBounds.height - (4 * scaleFactor)),\r\n                x:  Math.floor(engineBounds.x + (2 * scaleFactor)),\r\n                y:  Math.floor(engineBounds.y + (2 * scaleFactor)),\r\n              };\r\n\r\n              this.log.info('VideoDeviceService CaptureRegion: show-selection-square for sessionName: ' + sessionName + ', electronBounds: ' + utils.stringifyMsg(electronBounds));\r\n              return ipcWrapper.sendIPC('show-selection-square', { bounds: electronBounds, sessionName: sessionName });\r\n            }\r\n            else {\r\n              return Promise.resolve({});\r\n            }\r\n          })\r\n      }\r\n      else {\r\n        selectionSquarePromise = ipcWrapper.sendIPC('hide-selection-square', sessionName);\r\n      }\r\n\r\n      return selectionSquarePromise\r\n        .then(()=>{\r\n          this.appState.onCallStarted('setVideoCaptureRegion', sessionId);\r\n          this.log.info('VideoDeviceService CaptureRegion: ' + sessionId + '-setVideoCaptureRegion for sessionName: ' + sessionName + ', bounds: ' + utils.stringifyMsg(engineBounds));\r\n          return ipcWrapper.sendIPC(sessionId + '-setVideoCaptureRegion', captureBounds);\r\n        })\r\n        .then(() => {\r\n          this.appState.onCallEnded('setVideoCaptureRegion - SUCCESS', sessionId);\r\n          this.log.info('VideoDeviceService: CaptureRegion was successfully defined to sessionName: '  + sessionName + ' ' + sessionId + ' ' + (!_.isEmpty(engineBounds) ? utils.stringifyMsg(engineBounds): 'Full screen'));\r\n          this.setSessionRegion(sessionName, { engineBounds, electronBounds });\r\n        })\r\n        .then(() => {\r\n          return this.devicePreviewService.refreshDevice(sessionId, sessionName, this.getDeviceTypeBySessionName(sessionName));\r\n        })\r\n        .catch(err => {\r\n          this.appState.onCallEnded('setVideoCaptureRegion - FAILURE', sessionId, err);\r\n          this.log.error('VideoDeviceService: CaptureRegion: Failed to set region for sessionName: '\r\n            + sessionName + ' ' + (!_.isEmpty(engineBounds) ? utils.stringifyMsg(engineBounds): 'Full screen') + ' error: ' + utils.stringifyMsg(err));\r\n          return Promise.reject(err);\r\n        });\r\n    } else {\r\n      this.log.info('setVideoCaptureRegion is not implemented for the following capture type: ' + this.getDeviceTypeBySessionName(sessionName));\r\n      return Promise.resolve(sessionId);\r\n    }\r\n  }\r\n\r\n  resetToFullScreenCapture(sessionName: string, updatePersistency: boolean) {\r\n    this.devicePreviewService.resetToFullScreenCapture();\r\n    return this.setVideoCaptureRegion(sessionName, {}, null)\r\n      .then(() => {\r\n        return updatePersistency ? this.persistencyService.set(sessionName + '.captureRegion', {}) : Promise.resolve({});\r\n      });\r\n  }\r\n\r\n  resetPersistencyOfScreenCapture() {\r\n    return this.appState.getVisualSessionsFromPersistentData()\r\n      .then( sessions => {\r\n        let resetPromises = [];\r\n        _.forEach(_.keys(sessions), sessionName => {\r\n          resetPromises.push(this.persistencyService.set(sessionName + '.captureRegion', {}));\r\n        });\r\n        return Promise.all(resetPromises);\r\n      })\r\n  }\r\n\r\n  getAllActiveDevicesObjects()\r\n  {\r\n    let devices = [];\r\n    _.forEach(this.sessions, (sessionObj, sessionName) => {\r\n      if(this.appState.getActiveRecordableSessionsIds().indexOf(this.getSessionId(sessionName)) > -1) {\r\n        devices.push(this.getDeviceData(sessionObj.selectedDevice));\r\n      }\r\n    });\r\n    return devices;\r\n  }\r\n\r\n  private addDefaultSessionsObjects()\r\n  {\r\n    this.appState.getVisualSessionsNamesAndDefaultTypesForInit()\r\n      .then(sessions => {\r\n        _.forEach(_.keys(sessions), sessionName => {\r\n          this.addSession(sessionName);\r\n        });\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/video-device-settings.service.ts","import {AppStateService} from \"../infra/app-state.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport * as _ from \"lodash\";\r\nimport {DeviceRecoveryService} from \"./device-recovery.service\";\r\nimport {AppNotificationsService} from \"../infra/app-notifications.service\";\r\nimport {DevicePreviewService} from \"./device-preview.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {VideoDeviceSettingsService} from \"./video-device-settings.service\";\r\nimport {AudioDeviceService} from \"./audio-device.service\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {AppMonitoringAgentErrorDataService, MONITOR_ERROR_TYPE, MONITORED_SOURCE_TYPE} from \"../monitoring/app-monitoring-agent-error-data.service\";\r\nimport {CaptureDeviceService} from \"./capture-device.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {LiveManagerService} from \"../live/live-manager.service\";\r\n\r\n\r\n@Injectable()\r\nexport class VideoDeviceService extends CaptureDeviceService{\r\n\r\n  CAPTURE_TYPE = {\r\n    SCREEN: 'screen',\r\n    VIDEO: 'video'\r\n  };\r\n\r\n  constructor(public appState: AppStateService,\r\n              public log: AppLoggerService,\r\n              public recoveryService: DeviceRecoveryService,\r\n              public notificationService: AppNotificationsService,\r\n              public devicePreviewService: DevicePreviewService,\r\n              public deviceSettingsService: VideoDeviceSettingsService,\r\n              public audioDeviceService: AudioDeviceService,\r\n              public appMonitoringAgentData: AppMonitoringAgentErrorDataService,\r\n              private config: AppConfigService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private liveManagerService: LiveManagerService)\r\n  {\r\n    super(appState, log, deviceSettingsService, recoveryService);\r\n  }\r\n\r\n  /**\r\n   * creates capture device recording session\r\n   * configure device\r\n   * try to load in recovery mode\r\n   */\r\n  public initDevice(sessionName: string, defaultDeviceType: string)\r\n  {\r\n    return this.createSessionAndConfigureDevice(sessionName, defaultDeviceType)\r\n      .then(() => {\r\n        //on success init of a device, we need to clear all relevat errors\r\n        this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.DEVICE_ERROR, this.captureTypeToMonitoringSource(sessionName));\r\n        //since during device init we are init audio as well. on success we need to clear all relevant errors\r\n        this.appMonitoringAgentData.clearError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.AUDIO);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * running device recovery process\r\n   * @return {Promise<boolean>} if device should start preview or not\r\n   */\r\n  public deviceRecoveryProcess(sessionName: string)\r\n  {\r\n    this.log.debug('deviceRecoveryProcess');\r\n    return this.recoveryService.shouldRecoverVisualDeviceForRecording(sessionName)\r\n      .then((recoverFileName) => {\r\n        if(recoverFileName) {\r\n          //recovery is needed - try to recover device\r\n          return this.persistencyService.get(sessionName + '.captureRegion')\r\n            .then((engineAndElectronBounds)=>{\r\n              if (!_.isEmpty(engineAndElectronBounds) && !_.isEmpty(engineAndElectronBounds['engineBounds']) && !_.isEmpty(engineAndElectronBounds['electronBounds'])) {\r\n                return this.setVideoCaptureRegion(sessionName, engineAndElectronBounds['engineBounds'], engineAndElectronBounds['electronBounds'])\r\n              }\r\n            }).then(()=>{\r\n              return this.persistencyService.get('recording.details.liveData.' + sessionName);\r\n            }).then((liveData)=>{\r\n              return liveData ? this.liveManagerService.addLiveConfig(liveData, this.getSessionId(sessionName)) : Promise.resolve();\r\n            }).then(()=>{\r\n              return this.tryToLoadInRecoveryMode(sessionName, this.getCaptureDeviceTypeBySessionName(sessionName), recoverFileName)\r\n            }).then(() => {\r\n              return true;\r\n            });\r\n        } else {\r\n          //although we weren't in recovery process - we set the recovery process for current device to true\r\n          //so we will know device was configured and ready to capture\r\n          this.recoveryService.addRecoveryReadySession(this.getSessionId(sessionName), sessionName, true);\r\n          this.deviceSettingsService.saveDeviceSelections(sessionName);\r\n          // If recovery is not needed - Reset persistency to full screen capture state\r\n          return this.persistencyService.set(sessionName + '.captureRegion', {})\r\n            .then(() => {\r\n              // device should start previewing in a non recovery mode only if we are not during a recording\r\n              // if we are in the middle of a recording, the device was just disconnected when recording started\r\n              return !this.appState.isAppRecording();\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if(err && err !== this.recoveryService.DEVICE_STATE.DISCONNECTED) {\r\n          //if recovery failed due to an error different than disconnection save device settings\r\n          this.deviceSettingsService.saveDeviceSelections(sessionName);\r\n          return this.persistencyService.set(sessionName + '.captureRegion', {})\r\n            .catch(() => { return true}).then(() => { return Promise.reject(err); });\r\n        }\r\n        //disconnection\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public startDevicePreviewAndActivateSession(sessionName: string, location: any)\r\n  {\r\n    this.log.info('startDevicePreview: ' + utils.stringifyMsg(location));\r\n    return this.devicePreviewService.setPreviewPosition(this.getSessionId(sessionName), location)\r\n      .then(() => {\r\n        return this.devicePreviewService.startPreviewAndActivateSession(this.getSessionId(sessionName), sessionName, this.getCaptureDeviceTypeBySessionName(sessionName));\r\n      })\r\n      .then(() => {\r\n        return this.devicePreviewService.checkIfToStartAudioPreview(this.audioDeviceService.getSessionId());\r\n      })\r\n      .then(() => {\r\n        this.persistencyService.set(sessionName + '.preview', \"enabled\");\r\n        return this.deviceSettingsService.saveDeviceSelections(sessionName);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to startPreview - ' + sessionName + '. ' + utils.stringifyMsg(err));\r\n        this.notificationService.sendNotification('NOTIFICATIONS.error_' + sessionName + 'PreviewStart', 'error');\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public stopDevicePreviewAndDeactivateSession(sessionName: string)\r\n  {\r\n    this.log.info('stopDevicePreviewAndDeactivateSession(): ' + sessionName);\r\n    return this.devicePreviewService.stopPreviewAndDeactivateSession(this.getSessionId(sessionName))\r\n      .then(() => {\r\n        return this.devicePreviewService.checkIfToStopAudioPreview(this.audioDeviceService.getSessionId());\r\n      })\r\n      .then(() => {\r\n        this.persistencyService.set(sessionName + '.preview', \"disabled\");\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to stopPreview - ' + sessionName + '. ' + utils.stringifyMsg(err));\r\n        this.notificationService.sendNotification('NOTIFICATIONS.error_' + sessionName + 'PreviewStart', 'error');\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  hideDevicePreview(sessionName)\r\n  {\r\n    return this.updateDevicePreviewLocation(sessionName, {left: 0, top: 0, width: 0, height: 0});\r\n  }\r\n\r\n  stopPreviewAll() {\r\n    return this.devicePreviewService.stopPreviewAll();\r\n  }\r\n\r\n  stopAllVisualPreviewsExceptSessionName(exceptSessionName) {\r\n    this.log.info('stopAllVisualPreviewsExceptSessionName(): ' + exceptSessionName);\r\n    let sessionsArray = [];\r\n    _.forEach(this.appState.getActiveVisualSessions(), (value, key) => {\r\n      if (!exceptSessionName || this.getSessionNameById(key) !== exceptSessionName) {\r\n        sessionsArray.push(key);\r\n      }\r\n    });\r\n\r\n    if (!_.isEmpty(sessionsArray)) {\r\n      return this.devicePreviewService.stopPreviewSome(sessionsArray);\r\n    }\r\n    else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  public updateDevicePreviewLocation(sessionName: string, location: any)\r\n  {\r\n    return this.devicePreviewService.setPreviewPosition(this.getSessionId(sessionName), location)\r\n      .catch((err) => {\r\n        this.log.error('Failed to update ' + sessionName + ' device preview position. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  public isDevicePreviewing(sessionName: string) : boolean\r\n  {\r\n    return this.getSessionId(sessionName) && !_.isEmpty(this.appState.getActiveSessions()[this.getSessionId(sessionName)]);\r\n  }\r\n\r\n  public isDeviceStable(sessionName: string, sourceOnly = false) : boolean\r\n  {\r\n    return this.appState.isSourceStable(this.getSessionId(sessionName), sourceOnly);\r\n  }\r\n\r\n  public shouldInitialPreviewDevice(sessionName: string)\r\n  {\r\n    this.log.info('shouldInitialPreviewDevice - ' + sessionName);\r\n    return this.deviceSettingsService.loadUserSettings(sessionName)\r\n      .then((settings) => {\r\n        return (!settings || !settings['preview'] || settings['preview'] === \"enabled\");\r\n      })\r\n      .catch(() => {\r\n        return true;\r\n      });\r\n  }\r\n\r\n  public repositionsDevicePreview(sessionName: string, position: any)\r\n  {\r\n    this.log.info('repositionsDevicePreview - ' + sessionName);\r\n    this.shouldInitialPreviewDevice(sessionName)\r\n      .then((preview) => {\r\n        if(preview) {\r\n          this.log.info('need to reposition ' + sessionName + ' Device Preview');\r\n          return this.devicePreviewService.setPreviewPosition(this.getSessionId(sessionName), position);\r\n        }\r\n      });\r\n  }\r\n\r\n  public shouldDisableDeviceConfiguration(sessionName: string, sourceOnly = false)\r\n  {\r\n    return  !this.isDeviceStable(sessionName, sourceOnly) ||\r\n            !this.deviceSettingsService.getSessionData(sessionName) ||\r\n            !this.deviceSettingsService.getSessionData(sessionName).selectedDevice ||\r\n            !this.deviceSettingsService.getSessionData(sessionName).InputTypes ||\r\n            this.deviceSettingsService.getSessionData(sessionName).InputTypes.length === 0;\r\n  }\r\n\r\n  /**\r\n   * if device initial configuration was successful - start device\r\n   * if in recovery mode - build recording session accordingly\r\n   * if in regular mode - start previewing device\r\n   * @returns {Promise<boolean>} if to start device preview or not\r\n   */\r\n  public startDevice(sessionName, previewPosition)\r\n  {\r\n    //check if need to load in recovery mode\r\n    //if so try to load in recovery mode\r\n    return this.shouldInitialPreviewDevice(sessionName)\r\n      .then((shouldPreview) => {\r\n        if(shouldPreview) {\r\n          return Promise.all([shouldPreview, this.deviceRecoveryProcess(sessionName)]);\r\n        } else {\r\n          return Promise.all([shouldPreview, true]); //indication the recovery process didn't fail (it wasn't needed)\r\n        }\r\n      })\r\n      .then(([startPreview, recoverySucceeded]) => {\r\n        if(startPreview && recoverySucceeded) {\r\n          this.log.debug('starting ' + sessionName + ' device preview after successful recovery process');\r\n          return this.startDevicePreviewAndActivateSession(sessionName, previewPosition);\r\n        } else {\r\n          //everything went OK however this device should be disabled\r\n          this.appState.addSession(this.getSessionId(sessionName), sessionName, this.appState.SESSION_STATE.IN_ACTIVE);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public getCaptureDeviceTypeBySessionName(sessionName: string)\r\n  {\r\n    if(this.deviceSettingsService.getSessionData(sessionName)) {\r\n      return this.deviceSettingsService.getDeviceTypeBySessionName(sessionName);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getCaptureDeviceTypeBySessionId(sessionId: string) {\r\n    if(this.deviceSettingsService.getSessionDataById(sessionId)) {\r\n      return this.deviceSettingsService.getDeviceTypeById(this.deviceSettingsService.getSessionDataById(sessionId).selectedDevice);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getSessionNameById(sessionId: string) {\r\n      return this.deviceSettingsService.getSessionNameById(sessionId);\r\n  }\r\n\r\n  private createSessionAndConfigureDevice(sessionName: string, defaultDeviceType: string)\r\n  {\r\n    this.log.debug('createSessionAndConfigureDevice - ' + sessionName);\r\n    return this.createDeviceSession(sessionName)\r\n      .then(() => {\r\n        //loading initial device configurations\r\n        return this.loadInitialDeviceConfiguration(sessionName, defaultDeviceType);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * will be rejected if an error will happen.\r\n   * will return 'NO_VIDEO_DEVICES' / 'NO_SCREEN_DEVICE if no video / screen devices were connected\r\n   */\r\n  private loadInitialDeviceConfiguration(sessionName: string, defaultDeviceType: string)\r\n  {\r\n    this.log.debug('loadInitialVideoDeviceConfiguration - ' + sessionName);\r\n    return this.deviceSettingsService.loadInitialVideoDeviceSettings(sessionName, defaultDeviceType)\r\n      .then(() => {\r\n        this.log.info('loadInitialSharedAudioConfiguration - ' + sessionName);\r\n        return this.audioDeviceService.loadInitialAudioDeviceConfiguration(this.getSessionId(sessionName), false);\r\n      })\r\n      .catch((err) => {\r\n        if(err && _.isString(err) && err.indexOf('NO_AUDIO_DEVICES') > -1) {\r\n          return this.recoveryService.shouldRecoverAudioForRecording()\r\n            .then((recover) => {\r\n              if(recover) {\r\n                this.log.error('Failed loading initial video device configuration. ' + utils.stringifyMsg(err));\r\n                return Promise.reject(err);\r\n              } else {\r\n                this.log.info(sessionName + ' session was loaded without any audio device since there are no audio devices connected');\r\n                this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.AUDIO, 'NOTIFICATIONS.error_audioDevices');\r\n                this.notificationService.sendNotification('NOTIFICATIONS.error_audioDevices', 'warn');\r\n                return Promise.resolve();\r\n              }\r\n            });\r\n        } else {\r\n          return Promise.reject(err);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * device error handling\r\n   * @param err\r\n   * @param elementPosition\r\n   * @return {Promise<TResult>}\r\n   */\r\n\r\n  public handleDeviceInitError(sessionName: string, err, elementPosition)\r\n  {\r\n    let shouldStartPreview = true;\r\n    let errString = _.isObject(err) ? JSON.stringify(err) : err;\r\n    //no device error handling\r\n    if(errString.indexOf('NO_SCREEN_DEVICES') > -1 ||\r\n      errString.indexOf('NO_VIDEO_DEVICES') > -1 ||\r\n      errString.indexOf('NO_AUDIO_DEVICES') > -1) {\r\n      //handle no device error\r\n      shouldStartPreview = this.handleNoDeviceError(errString);\r\n    } else if(errString.indexOf(this.recoveryService.DEVICE_STATE.DISCONNECTED) > -1 ||\r\n      errString.indexOf(this.recoveryService.DEVICE_STATE.FAILED) > -1 ||\r\n      errString.indexOf('AUDIO-' + this.recoveryService.DEVICE_STATE.DISCONNECTED) > -1) {\r\n      //handle recovery failures\r\n      shouldStartPreview = this.handleRecoveryError(sessionName, errString);\r\n    } else if(errString.indexOf('AUDIO-') > -1) {\r\n      //handle audio device errors\r\n      shouldStartPreview = this.handleAudioInitializationError(sessionName, errString);\r\n    } else {\r\n      //handle screen / video device errors\r\n      shouldStartPreview = this.handleRecordableInitializationError(sessionName, errString);\r\n    }\r\n    //if failed before even start to check if need to recover\r\n    return this.finalizeErrorHandling(sessionName, errString, shouldStartPreview, elementPosition);\r\n  }\r\n\r\n  private handleNoDeviceError(errString)\r\n  {\r\n    let shouldStartPreview = true;\r\n    if(errString.indexOf('NO_SCREEN_DEVICES') > -1) {\r\n      this.log.warn('No screen devices were detected');\r\n      shouldStartPreview = false;\r\n      this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.SCREEN, 'NOTIFICATIONS.error_screenDevices');\r\n      this.notificationService.sendNotification('NOTIFICATIONS.error_screenDevices', 'warn');\r\n    } else if(errString.indexOf('NO_VIDEO_DEVICES') > -1) {\r\n      shouldStartPreview = false;\r\n      this.log.warn('No video devices were detected');\r\n      this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.VIDEO, 'NOTIFICATIONS.error_videoDevices');\r\n      this.notificationService.sendNotification('NOTIFICATIONS.error_videoDevices', 'warn');\r\n    } else if(errString.indexOf('NO_AUDIO_DEVICES') > -1) {\r\n      this.log.warn('No audio devices were detected');\r\n      shouldStartPreview = false; //disable capture device preview when audio doesn't exist\r\n      this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.AUDIO, 'NOTIFICATIONS.error_audioDevices');\r\n      this.notificationService.sendNotification('NOTIFICATIONS.error_audioDevices', 'warn');\r\n    }\r\n    return shouldStartPreview;\r\n  }\r\n\r\n  private handleRecoveryError(sessionName: string, errString)\r\n  {\r\n    let shouldStartPreview = true;\r\n    if(errString.indexOf(this.recoveryService.DEVICE_STATE.DISCONNECTED) > -1) {\r\n      //if capture device was disconnected - do not preview it\r\n      if(errString.indexOf('AUDIO-') === -1) {\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, this.captureTypeToMonitoringSource(sessionName),\r\n                                              'NOTIFICATIONS.error_deviceDisconnected', {'captureType': this.captureTypeToMonitoringSource(sessionName)});\r\n        this.log.error('Failed to recover ' + sessionName + ' device due to a device disconnection.');\r\n      } else {\r\n        this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.AUDIO,\r\n                                              'NOTIFICATIONS.error_deviceDisconnected', {'captureType': 'Audio'});\r\n        this.log.error('Failed to recover ' + sessionName + ' device due to a disconnection in audio.');\r\n      }\r\n      shouldStartPreview = false;\r\n    } else if(errString.indexOf(this.recoveryService.DEVICE_STATE.FAILED) > -1) {\r\n      shouldStartPreview = false;\r\n      this.log.error('Failed to recover ' + sessionName + ' device.');\r\n      let notificationText = 'NOTIFICATIONS.' +\r\n        (sessionName !== this.config.getConfigData('config.captureApp.primarySessionName') ?\r\n          'error_secondaryDeviceRecovery' : 'error_primaryDeviceRecovery');\r\n      this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, this.captureTypeToMonitoringSource(sessionName), notificationText);\r\n      this.notificationService.sendNotification(notificationText, 'error');\r\n    }\r\n    return shouldStartPreview;\r\n  }\r\n\r\n  ///@todo - this is bad to do stuff based on session name\r\n  private handleAudioInitializationError(sessionName: string, errString)\r\n  {\r\n    this.log.error('Failed to initialize audio device. ' + errString);\r\n    let notification = 'NOTIFICATIONS.' +\r\n      (sessionName !== this.config.getConfigData('config.captureApp.primarySessionName') ?\r\n        'error_audioForSecondary' : 'error_audioForPrimary');\r\n    this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, MONITORED_SOURCE_TYPE.AUDIO, notification);\r\n    this.notificationService.sendNotification(notification , 'error');\r\n    return false;\r\n  }\r\n\r\n  private handleRecordableInitializationError(sessionName: string, errString)\r\n  {\r\n    this.log.error('Failed to initialize ' + sessionName + ' device. ' + errString);\r\n    let notification = 'NOTIFICATIONS.' +\r\n      (sessionName !== this.config.getConfigData('config.captureApp.primarySessionName') ?\r\n        'error_secondaryDevice' : 'error_primaryDevice');\r\n    this.appMonitoringAgentData.setError(MONITOR_ERROR_TYPE.DEVICE_ERROR, this.captureTypeToMonitoringSource(sessionName), notification);\r\n    this.notificationService.sendNotification(notification , 'error');\r\n    return false;\r\n  }\r\n\r\n  private finalizeErrorHandling(sessionName: string, errString, shouldStartPreview, elementPosition)\r\n  {\r\n    return this.recoveryService.shouldRecoverVisualDeviceForRecording(sessionName)\r\n      .then((shouldRecover) => {\r\n        if(shouldRecover) {\r\n          this.log.error('Send addRecoveryReadySession notification for failed ' + sessionName + ' recovery preparation.');\r\n          this.recoveryService.addRecoveryReadySession(this.getSessionId(sessionName), sessionName, false, errString);\r\n        } else {\r\n          //if we shouldn't recover sessions, need to save current selection since they are presented to the user\r\n          shouldStartPreview = false; //no recovery was needed so no need to display the device\r\n          this.deviceSettingsService.saveDeviceSelections(sessionName);\r\n        }\r\n        return shouldStartPreview;\r\n      })\r\n      .catch((err) => {\r\n        this.log.warn('Failed to decide if ' + sessionName + ' device should be in recovery mode,' +\r\n          ' handling error like it should not. ' + utils.stringifyMsg(err));\r\n        return shouldStartPreview;\r\n      })\r\n      .then((shouldStartPreview) => {\r\n        return this.handleDevicePreviewAfterFailure(sessionName, shouldStartPreview, elementPosition);\r\n      });\r\n  }\r\n\r\n  private handleDevicePreviewAfterFailure(sessionName: string, shouldStartPreview, elementPosition)\r\n  {\r\n    if(shouldStartPreview) {\r\n      this.log.info('Trying to start ' + sessionName + ' device after failed device initialization');\r\n      return this.startDevicePreviewAndActivateSession(sessionName, elementPosition)\r\n        .catch((err) => {\r\n          this.log.error('Failed to start ' + sessionName + ' device preview');\r\n          this.notificationService.sendNotification('NOTIFICATIONS.error_' + sessionName + 'PreviewStart', 'error');\r\n          this.appState.addSession(this.getSessionId(sessionName), sessionName, this.appState.SESSION_STATE.IN_ACTIVE);\r\n        });\r\n    } else {\r\n      //start preview will remove current session from the loading sessions object\r\n      //here we need to do it ourselves, also, since we already created the session. we need to add it to  the active\r\n      //sessions with a 'failed' state.\r\n      if(this.getSessionId(sessionName)) {\r\n        this.appState.addSession(this.getSessionId(sessionName), sessionName, this.appState.SESSION_STATE.IN_ACTIVE);\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  private captureTypeToMonitoringSource(sessionName: string)\r\n  {\r\n    return this.getCaptureDeviceTypeBySessionName(sessionName) === this.CAPTURE_TYPE.SCREEN ? MONITORED_SOURCE_TYPE.SCREEN : MONITORED_SOURCE_TYPE.VIDEO;\r\n  }\r\n\r\n  setVideoCaptureRegion(sessionName: string, engineBounds: any, electronBounds: any)\r\n  {\r\n    return this.deviceSettingsService.setVideoCaptureRegion(sessionName, engineBounds, electronBounds);\r\n  }\r\n\r\n  resetToFullScreenCapture(sessionName: string, updatePersistency: boolean) {\r\n    return this.deviceSettingsService.resetToFullScreenCapture(sessionName, updatePersistency);\r\n  }\r\n\r\n  /**\r\n   * set liveData persistency object to contain the live streaming duration and stopped date\r\n   * @param sessionName\r\n   */\r\n  stopLiveStreaming(sessionName: string)\r\n  {\r\n    this.persistencyService.get('recording.recordingTime')\r\n      .then((recDuration) => {\r\n        this.persistencyService.set('recording.details.liveData.' + sessionName, {\r\n          duration: recDuration,\r\n          updatedAt: (new Date().getTime() / 1000)\r\n        });\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/capture-device/video-device.service.ts","import {Injectable, ElementRef} from \"@angular/core\";\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {PanelsService} from \"./panels.service\";\r\nimport {Subject} from \"rxjs\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport * as _ from \"lodash\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\n\r\n@Injectable()\r\nexport class AccessibilityService {\r\n\r\n  private lastElement: any;\r\n  private dialogElement: HTMLElement;\r\n  private lockNavOnDialog: boolean;\r\n  private lastCode: string;\r\n\r\n  private accessibilityAlert = new Subject<{}>();\r\n  accessibilityAlert$ = this.accessibilityAlert.asObservable();\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private translate: TranslateService,\r\n              private panelsService: PanelsService) {}\r\n\r\n\r\n  markNavigation (event:KeyboardEvent) {\r\n    if (event.code === \"Tab\") {\r\n      this.lastCode = event.code;\r\n\r\n      // remove the previous outline focus\r\n      if (this.lastElement) {\r\n        this.lastElement.classList.remove('keyboard-focus');\r\n      }\r\n\r\n      // should we lock focus on a dialog?\r\n      if (this.lockNavOnDialog && !event.target['parentElement'].classList.contains('dialog-footer')) {\r\n        // if we are in an open dialog choose the the first button in the footer and focus on it.\r\n        this.lastElement = this.dialogElement.querySelector('button');\r\n        this.lastElement.classList.add('keyboard-focus');\r\n        this.lastElement.focus();\r\n      }\r\n      // skip body\r\n      else if (event.target['tagName'].toLowerCase() === 'body') {\r\n        let isItemWasSelected = this.selectFirstItem(event);\r\n        if (!isItemWasSelected) {\r\n          setTimeout(() => {\r\n            this.selectFirstItem(event);\r\n          },200);\r\n        }\r\n      }\r\n      // regular tab element focus\r\n      else {\r\n        this.lastElement = event.target;\r\n\r\n        if (this.lastElement) {\r\n          this.lastElement.classList.add('keyboard-focus');\r\n        }\r\n      }\r\n    }\r\n    else if (event.code === \"Enter\" || event.code === \"Space\" || event.code === \"NumpadEnter\") {\r\n      this.lastCode = event.code;\r\n\r\n      // remove the previous outline focus\r\n      if (this.lastElement) {\r\n        this.lastElement.classList.remove('keyboard-focus');\r\n      }\r\n\r\n      // on Enter/Space/NumpadEnter if we hit body, refocus on last element (make sure that element ask not to be focus twice)\r\n      if (event.target['tagName'].toLowerCase() === 'body' && (this.lastElement &&!this.lastElement.classList.contains('focus-once'))) {\r\n        this.forceFocusOnLastElement();\r\n      }\r\n      else if (this.lastElement && this.lastElement.tagName.toLowerCase() === 'button' && !this.lastElement.classList.contains('focus-once')) {\r\n        this.lastElement = event.target;\r\n        this.forceFocusOnLastElement();\r\n      }\r\n      else if (this.lastElement && this.lastElement.tagName.toLowerCase() === 'a') {\r\n        this.lastElement = event.target;\r\n        this.forceFocusOnLastElement(event.code === \"Space\"); // trigger click on 'a' when hitting Space (only space needed the fix)\r\n      }\r\n    }\r\n    else if (event.code === \"Escape\") {\r\n      if (event.target instanceof HTMLInputElement) {\r\n        event.target.blur();\r\n        if (this.lastElement === event.target) {\r\n          this.lastElement.classList.remove('keyboard-focus');\r\n        }\r\n      }\r\n      else {\r\n        let currentPanel = this.panelsService.getCurrentPanel();\r\n        if (currentPanel && currentPanel['active']) {\r\n          currentPanel['active'] = false;\r\n          this.panelsService.updateCurrentPanel(currentPanel);\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private forceFocusOnLastElement(triggerClick: boolean = false) {\r\n    setTimeout(() => {\r\n      this.lastElement.classList.add('keyboard-focus');\r\n      if (triggerClick){\r\n        this.lastElement.click();\r\n      }\r\n      else {\r\n        this.lastElement.focus();\r\n      }\r\n    }, 400);\r\n  }\r\n\r\n  private selectFirstItem(event) {\r\n    let nextTabTargets = event.target['querySelectorAll']('button, a, input, select, area, textarea, object');\r\n    nextTabTargets = Array.prototype.filter.call( nextTabTargets, function( elem ) {\r\n      return elem.tabIndex != -1; // when specify no tab navigation do not choose him as option \r\n    });\r\n    if (nextTabTargets.length > 0) {\r\n      this.lastElement = nextTabTargets[0];\r\n      this.lastElement.classList.add('keyboard-focus');\r\n      this.lastElement.focus();\r\n    }\r\n\r\n    return nextTabTargets.length > 0;\r\n  }\r\n\r\n  toggleNavLimitationOnDialog(lock: boolean, element?: HTMLElement){\r\n    this.lockNavOnDialog = lock;\r\n    this.dialogElement = element;\r\n  }\r\n\r\n  getLastCode() {\r\n    return this.lastCode;\r\n  }\r\n\r\n  setLastCode(value) {\r\n    this.lastCode = value;\r\n  }\r\n\r\n  /**\r\n   * Add Accessibility alert to be read by screen reader\r\n   * @param i18nText i18n text\r\n   * @param alertDuration long (5 sec) or short (2 sec)\r\n   * @param localization params\r\n   */\r\n  setAccessibilityAlert(i18nText, alertDuration='short', params=null)\r\n  {\r\n    this.getTranslationSub(i18nText, params).subscribe((res: string) => {\r\n      this.accessibilityAlert.next({alert: res, duration: alertDuration});\r\n    });\r\n  }\r\n\r\n  private getTranslationSub(i18nText, params)\r\n  {\r\n    return params ? this.translate.get(i18nText, params) : this.translate.get(i18nText);\r\n  }\r\n\r\n  /* Scroll up and clear focus classes*/\r\n  clearFocusAndScrollUp(element, divSelectorToScroll) {\r\n    let elem = element.nativeElement.querySelector(divSelectorToScroll);\r\n    if (elem) {\r\n      elem.scrollTop = 0;\r\n    }\r\n    let elements = Array.from(element.nativeElement.querySelectorAll('.keyboard-focus'));\r\n    _.forEach(elements, (elem: HTMLElement) => {\r\n      elem.classList.remove('keyboard-focus');\r\n    });\r\n  }\r\n\r\n  setFocusOnMainWindow() {\r\n    return ipcWrapper.sendIPC('setFocusOnMainWindow');\r\n  }\r\n\r\n  setFocusOnThisElement(elementRef: ElementRef) {\r\n    elementRef.nativeElement.classList.add('keyboard-focus');\r\n    elementRef.nativeElement.focus();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/accessability.service.ts","import { Injectable } from '@angular/core';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from \"lodash\";\r\nimport {AppConsts} from \"../../../personal/app.consts\";\r\n\r\n@Injectable()\r\nexport class AppConfigService\r\n{\r\n\r\n  private static readonly MAX_COUNTDOWN_IN_SEC = 10800;\r\n  private static readonly PRIMARY_SESSION_NAME = 'session0';\r\n\r\n  public static configObject = {'config': {}};\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public static loadConfigData()\r\n  {\r\n    return ipcWrapper.sendIPC('getConfig', 'config')\r\n      .then((config) => {\r\n        this.configObject = {'config' : _.clone(config)};\r\n        this.validateConfigObjectValues();\r\n      });\r\n  }\r\n\r\n  public getConfigData(path) : any\r\n  {\r\n    return _.get(AppConfigService.configObject, path);\r\n  }\r\n\r\n  public setConfigData(path:string, value:any, reloadEngineConfiguration: boolean = false, saveToDisk: boolean = true): Promise<any>\r\n  {\r\n    //update internal config object only with data that we want to save to disk (maintain data integrity)\r\n    if(saveToDisk)\r\n      _.set(AppConfigService.configObject, path, value);\r\n    return ipcWrapper.sendIPC('setConfig', path, value, reloadEngineConfiguration, saveToDisk);\r\n  }\r\n\r\n  private static validateConfigObjectValues()\r\n  {\r\n    if(this.configObject.config['captureApp']['scheduling']) {\r\n      this.validateSchedulingSection();\r\n    }\r\n    this.validateCapturePreSets();\r\n    this.validateMultiSessionsProperties();\r\n  }\r\n\r\n  private static validateSchedulingSection()\r\n  {\r\n    let schedulingConfigObj = this.configObject.config['captureApp']['scheduling'];\r\n    if (!Number.isInteger(schedulingConfigObj.viewEventsAheadDay) || schedulingConfigObj.viewEventsAheadDay > 30){\r\n      this.configObject.config['captureApp']['scheduling']['viewEventsAheadDay'] = 14;\r\n    }\r\n    if (!Number.isInteger(schedulingConfigObj.intervalSec) || schedulingConfigObj.intervalSec < 300){\r\n      this.configObject.config['captureApp']['scheduling']['intervalSec'] = 300;\r\n    }\r\n    if (!Number.isInteger(schedulingConfigObj.countdownInSec) || schedulingConfigObj.countdownInSec < 300){\r\n      this.configObject.config['captureApp']['scheduling']['countdownInSec'] = 600;\r\n    }\r\n    if (!Number.isInteger(schedulingConfigObj.extendEventInSec) || schedulingConfigObj.extendEventInSec < 300){\r\n      this.configObject.config['captureApp']['scheduling']['extendEventInSec'] = 300;\r\n    }\r\n    if (!Number.isInteger(schedulingConfigObj.displayExtendEventInSec) || schedulingConfigObj.displayExtendEventInSec > 600){\r\n      this.configObject.config['captureApp']['scheduling']['displayExtendEventInSec'] = 600;\r\n    }\r\n    if (schedulingConfigObj.countdownInSec > this.MAX_COUNTDOWN_IN_SEC){\r\n      this.configObject.config['captureApp']['scheduling']['countdownInSec'] = this.MAX_COUNTDOWN_IN_SEC;\r\n    }\r\n    if (!Number.isInteger(schedulingConfigObj.eventEndNotificationInSec) || schedulingConfigObj.eventEndNotificationInSec > 900){\r\n      this.configObject.config['captureApp']['scheduling']['eventEndNotificationInSec'] = 600;\r\n    }\r\n  }\r\n\r\n  private static validateCapturePreSets() {\r\n    let captureZoneSelectionPresets = this.configObject.config['captureApp']['captureZoneSelectionPresets'];\r\n    let validPresets = [];\r\n\r\n    if (_.isArray(captureZoneSelectionPresets)) {\r\n      _.each(captureZoneSelectionPresets, (dimensions) => {\r\n        // check if values are bigger than minimum app size\r\n        if (_.isNumber(dimensions.width) && dimensions.width >= AppConsts.MINIMUM_APP_WIDTH && _.isNumber(dimensions.height) && dimensions.height >= AppConsts.MINIMUM_APP_HEIGHT ){\r\n          validPresets.push(dimensions);\r\n        }\r\n      });\r\n      validPresets = _.sortBy(validPresets, [function(dimensions) { return dimensions.width * dimensions.height; }]);\r\n\r\n      if (validPresets.length === 0) {\r\n        validPresets.push({ width: 800, height: 600})\r\n      }\r\n    }\r\n    else {\r\n      validPresets.push({ width: 800, height: 600})\r\n    }\r\n    this.configObject.config['captureApp']['captureZoneSelectionPresets'] = validPresets;\r\n  }\r\n\r\n  private static validateMultiSessionsProperties()\r\n  {\r\n    if(!this.configObject.config['captureApp']['maxNumberOfInputs'] ||\r\n      this.configObject.config['captureApp']['maxNumberOfInputs'] > 4 ||\r\n      this.configObject.config['captureApp']['maxNumberOfInputs'] < 1)\r\n    {\r\n      this.configObject.config['captureApp']['maxNumberOfInputs'] = 4;\r\n    }\r\n    if(!this.configObject.config['captureApp']['defaultSessionsConfiguration'] ||\r\n      this.configObject.config['captureApp']['defaultSessionsConfiguration'].length < 1 ||\r\n      this.configObject.config['captureApp']['defaultSessionsConfiguration'].length > 4) {\r\n      this.configObject.config['captureApp']['defaultSessionsConfiguration'] = [\"screen\",\"video\"];\r\n    }\r\n    if(!this.configObject.config['captureApp']['primarySessionName']) {\r\n      this.configObject.config['captureApp']['primarySessionName'] = this.PRIMARY_SESSION_NAME;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-config.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {utils} from \"../../../utils/utils\";\r\n\r\n@Injectable()\r\nexport class AppLoggerService {\r\n\r\n  constructor(){}\r\n\r\n  debug(msg)\r\n  {\r\n    return ipcWrapper.sendIPC('NativeLogger_Debug', utils.stringifyMsg(msg));\r\n  }\r\n\r\n  info(msg)\r\n  {\r\n    console.log(utils.stringifyMsg(msg));\r\n    return ipcWrapper.sendIPC('NativeLogger_Info', utils.stringifyMsg(msg));\r\n  }\r\n\r\n  warn(msg)\r\n  {\r\n    console.log(utils.stringifyMsg(msg));\r\n    return ipcWrapper.sendIPC('NativeLogger_Warn', utils.stringifyMsg(msg));\r\n  }\r\n\r\n  error(msg)\r\n  {\r\n    console.log(utils.stringifyMsg(msg));\r\n    return ipcWrapper.sendIPC('NativeLogger_Error', utils.stringifyMsg(msg));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-logger.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {AppConfigService} from \"./app-config.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from \"lodash\";\r\n\r\n@Injectable()\r\nexport class AppNotificationsService {\r\n\r\n  /**\r\n   * array of current notifications {message: text, severity: error/warn/success/info}\r\n   * @type {Array}\r\n   */\r\n  notifications = [];\r\n\r\n  constructor(private translate: TranslateService, private appConfig: AppConfigService)\r\n  {\r\n    this.registerForNotificationCloseEvents();\r\n  }\r\n\r\n  sendNotification(msg, severity, url ='')\r\n  {\r\n    let display = this.shouldDisplayNotification(severity);\r\n    //show info and scheduling msgs only is configured to do so\r\n    if(display) {\r\n      this.translate.get(msg).subscribe((res: string) => {\r\n        this.sendIPCNotification({message: res, url: url, severity: severity});\r\n      });\r\n    }\r\n  }\r\n\r\n  sendNotificationWithParams(msg, params, severity)\r\n  {\r\n    let display = this.shouldDisplayNotification(severity);\r\n    //show info and scheduling msgs only is configured to do so\r\n    if(display) {\r\n      this.translate.get(msg, params).subscribe((res: string) => {\r\n        this.sendIPCNotification({message: res, severity: severity});\r\n      });\r\n    }\r\n  }\r\n\r\n  private sendIPCNotification(notification)\r\n  {\r\n    if(this.isNewNotification(notification)) {\r\n      this.notifications.push(notification);\r\n      ipcWrapper.sendIPC('app-notification', notification);\r\n    }\r\n  }\r\n\r\n  private shouldDisplayNotification(severity)\r\n  {\r\n    let conf = this.appConfig.getConfigData('config.captureApp');\r\n    //show info and scheduling msgs only is configured to do so\r\n    return (severity === 'warn' || severity === 'error' ||\r\n      (conf && conf['allowInfoNotifications'] && conf['allowInfoNotifications'] === true));\r\n  }\r\n\r\n  private registerForNotificationCloseEvents()\r\n  {\r\n    ipcWrapper.registerForNotification('app-notification-closed', (data: any) => {\r\n      let removed = _.remove(this.notifications, (n) => {\r\n        return data.notification['severity'] === n['severity'] &&\r\n          data.notification['message'] === n['message'];\r\n      });\r\n    });\r\n  }\r\n\r\n  private isNewNotification(notification)\r\n  {\r\n    return !_.find(this.notifications,\r\n      {severity: notification['severity'],\r\n        message: notification['message']}\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-notifications.service.ts","import { Injectable } from '@angular/core';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\n\r\n@Injectable()\r\nexport class AppPersistentDataService\r\n{\r\n  constructor() {\r\n  }\r\n\r\n  public get(path)\r\n  {\r\n    return ipcWrapper.sendIPC('getPersistency', path);\r\n  }\r\n\r\n  public set(path, data)\r\n  {\r\n    return ipcWrapper.sendIPC('setPersistency', path, data);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-persistent-data.service.ts","import { Injectable } from '@angular/core';\r\nimport {Subject, BehaviorSubject} from \"rxjs\";\r\nimport * as _ from 'lodash';\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {AppPersistentDataService} from \"./app-persistent-data.service\";\r\nimport {AppConfigService} from \"./app-config.service\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AppStateService {\r\n\r\n  readonly DEFAULT_CAPTURE_TYPE = 'video';\r\n\r\n  readonly REC_STATE = {\r\n    IN_PROCESS: 'in_process',\r\n    LOADING: 'loading',\r\n    STABLE: 'stable'\r\n  };\r\n\r\n  readonly SESSION_STATE = {\r\n    ACTIVE : 'active',\r\n    IN_ACTIVE : 'in_active'\r\n  };\r\n  readonly WINDOW_STATE = {\r\n    VISIBLE : 'visible',\r\n    HIDDEN : 'not-visible'\r\n  };\r\n  readonly SESSION_LOAD_WAIT_STATE = {\r\n    NEXT_TIME :  'next_time',\r\n    NEVER     :  'never',\r\n    ALWAYS    :   'wait'\r\n  };\r\n\r\n  /**\r\n   * notify when app sessions are ready\r\n   * when all planned sessions were created and ready\r\n   * @type {Subject}\r\n   */\r\n  private appSessionsReady = new Subject<boolean>();\r\n  sessionsAreReadyPromise = this.appSessionsReady.asObservable().toPromise();\r\n\r\n  /**\r\n   * notify device component to init\r\n   * @type {Subject}\r\n   */\r\n  private notifyDeviceComponentInit = new Subject();\r\n  notifyDeviceComponentInit$ = this.notifyDeviceComponentInit.asObservable();\r\n\r\n  /**\r\n   * notify recording phase changes\r\n   * @type {Subject}\r\n   */\r\n  private recordingPhaseUpdate = new Subject();\r\n  recordingPhaseUpdate$ = this.recordingPhaseUpdate.asObservable();\r\n  /**\r\n   * application main browser window state\r\n   */\r\n  private applicationWindowState = new BehaviorSubject<String>(this.WINDOW_STATE.VISIBLE);\r\n  public applicationWindowState$ = this.applicationWindowState.asObservable();\r\n  /**\r\n   * notify sessions status change\r\n   * @type {Subject}\r\n   */\r\n  private sessionStatusChange = new Subject();\r\n  sessionStatusChange$ = this.sessionStatusChange.asObservable();\r\n\r\n  /**\r\n   * pairs of sessionId and number of in progress calls\r\n   * @type {Array}\r\n   */\r\n  callsInProgress = [];\r\n  /**\r\n   * application state object contains:\r\n   * 1. application-state object:\r\n   *      contains a key value pairs of - sourceId : sessionState (indicates if app is in process or in stable mode)\r\n   *      main application state (recording state) will have the following pairs: rec-state : in_process / stable / disconnected\r\n   *      application sessions will have the following pairs: <sessionId> : in_process / stable\r\n   *      <sessionId> : in_process / stable\r\n   *      <rec-state> : in_process / stable / disconnected (in_process when recordingPhase !== 'initial')\r\n   */\r\n  private appState: Object = {};\r\n  /**\r\n   * current active sessions (sessions to record)\r\n   * @type {Array} of [sessionId] => {type: video/audio/screen}\r\n   */\r\n  private activeSessions = {};\r\n  /**\r\n   * current inactive sessions (sessions that tryied to load but failed)\r\n   * @type {Array} of [sessionId] => {type: video/audio/screen}\r\n   */\r\n  private inactiveSessions = {};\r\n  /**\r\n   * maintain all removed sessions ids\r\n   * @type {{}}\r\n   */\r\n  private removedSessions = {};\r\n  /**\r\n   * Sessions that are in loading process at the moment\r\n   */\r\n  private loadingSessionsCount = 0;\r\n  /**\r\n   * current app recording phase\r\n   * @type {string}\r\n   */\r\n  private _recordingPhase = 'initial';\r\n\r\n  private connectionStateChangeLock = false;\r\n\r\n  private liveConfigured = false;\r\n  private liveStreaming = false;\r\n\r\n  /**\r\n   * There are places in our app that we are shutting down our sessions without re-init them (before off cycle recovery process)\r\n   * Since there is no immediate re-init command, there is no need (actually we can't) to wait for our sessions to load before executing other commands\r\n   */\r\n  private waitForSessionsToLoad = this.SESSION_LOAD_WAIT_STATE.ALWAYS;\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private appConfig: AppConfigService)\r\n  {\r\n  }\r\n\r\n  set recordingPhase(recPhase: string)\r\n  {\r\n    if(this._recordingPhase !== recPhase) {\r\n      this.recordingPhaseUpdate.next(recPhase);\r\n    }\r\n    this._recordingPhase = recPhase;\r\n  }\r\n\r\n  get recordingPhase()\r\n  {\r\n    return this._recordingPhase;\r\n  }\r\n\r\n  public addSession(sessionId, sessionName, state)\r\n  {\r\n    this.log.info('AppState: addSession: ' + sessionId + ' - ' + sessionName + ' - ' + state);\r\n\r\n    if(this.removedSessions[sessionId]) {\r\n      this.log.info('AppState: tried to add removed session to added sessions: ' + sessionName + ' - ' + sessionId);\r\n      return;\r\n    }\r\n\r\n    if(state === this.SESSION_STATE.ACTIVE) {\r\n      this.activeSessions[sessionId] = {name: sessionName};\r\n      delete this.inactiveSessions[sessionId];\r\n      this.sessionStatusChange.next();\r\n    } else {\r\n      delete this.activeSessions[sessionId];\r\n      this.inactiveSessions[sessionId] = {name: sessionName};\r\n      this.sessionStatusChange.next();\r\n    }\r\n    this.removeLoadingSession();\r\n    this.checkIfAllSessionsAreReady(sessionName);\r\n  }\r\n\r\n  public removeActiveSession(sessionId)\r\n  {\r\n    this.log.info('AppState: ?: ' + sessionId);\r\n    if(this.activeSessions[sessionId]) {\r\n      this.inactiveSessions[sessionId] = this.activeSessions[sessionId];\r\n      delete this.activeSessions[sessionId];\r\n    } else {\r\n      this.log.warn('removeActiveSession. ' + sessionId + ' is not active. ');\r\n    }\r\n    this.removeLoadingSession();\r\n    this.sessionStatusChange.next();\r\n  }\r\n\r\n  public addLoadingSession()\r\n  {\r\n    this.loadingSessionsCount++;\r\n  }\r\n\r\n  public removeLoadingSession()\r\n  {\r\n    if(this.loadingSessionsCount > 0) {\r\n      this.loadingSessionsCount--;\r\n    }\r\n  }\r\n\r\n  public getLoadingSessionsCount()\r\n  {\r\n    return this.loadingSessionsCount;\r\n  }\r\n\r\n  public shutDownSessions(waitForSessions = this.SESSION_LOAD_WAIT_STATE.ALWAYS)\r\n  {\r\n    this.log.info('AppState: shutDownSessions');\r\n    this.waitForSessionsToLoad = waitForSessions;\r\n    let sessions = _.keys(_.merge(this.getActiveVisualSessions(), this.getInActiveVisualSessions(),\r\n      this.getActiveAudioSession(), this.getInActiveAudioSession()));\r\n    if(sessions && sessions.length > 0) {\r\n      this.onCallStarted('shutDown', JSON.stringify(sessions));\r\n      return ipcWrapper.sendIPC('shutDownSome',sessions)\r\n        .then(() => {\r\n          this.onCallEnded('shutDown - SUCCESS', JSON.stringify(sessions));\r\n          this.removeAllSessions();\r\n        })\r\n        .catch((err) => {\r\n          if(err === 'session ended') {\r\n            this.onCallEnded('shutDown - SUCCESS (sessions ended)', JSON.stringify(sessions));\r\n            this.removeAllSessions();\r\n          } else {\r\n            this.onCallEnded('shutDown - FAILURE', JSON.stringify(sessions), err);\r\n            return Promise.reject(err);\r\n          }\r\n        });\r\n    } else {\r\n      this.log.warn('No sessions to shutdown');\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  private removeAllSessions()\r\n  {\r\n    this.log.info('AppState: removeAllSessions');\r\n    this.appSessionsReady = new Subject<boolean>();\r\n    this.sessionsAreReadyPromise = this.appSessionsReady.asObservable().toPromise();\r\n    _.forEach(_.keys(this.activeSessions), (sessionId) => {\r\n      delete this.activeSessions[sessionId];\r\n      this.removedSessions[sessionId] = sessionId;\r\n      this.clearSessionFromAppState(sessionId);\r\n    });\r\n    _.forEach(_.keys(this.inactiveSessions), (sessionId) => {\r\n      delete this.inactiveSessions[sessionId];\r\n      this.clearSessionFromAppState(sessionId);\r\n    });\r\n  }\r\n\r\n  //remove all sessions related properties\r\n  private clearSessionFromAppState(sessionId)\r\n  {\r\n    _.forEach(this.appState, (value, key:string) => {\r\n      if(key.indexOf('rec-state') === -1) {\r\n        delete this.appState[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  public sendInitNotification()\r\n  {\r\n    this.notifyDeviceComponentInit.next();\r\n  }\r\n\r\n  public getActiveSessions()\r\n  {\r\n    return this.activeSessions;\r\n  }\r\n\r\n  public getInActiveSessions()\r\n  {\r\n    return this.inactiveSessions;\r\n  }\r\n\r\n  public getActiveVisualSessions()\r\n  {\r\n    let sessions = {};\r\n    _.forEach(this.activeSessions, (sessionObj, sessionId) => {\r\n      if(sessionObj['name'] && sessionObj['name'] !== 'audio') {\r\n        sessions[sessionId] = sessionObj;\r\n      }\r\n    });\r\n    return sessions;\r\n  }\r\n\r\n  public getInActiveVisualSessions()\r\n  {\r\n    let sessions = {};\r\n    _.forEach(this.inactiveSessions, (sessionObj, sessionId) => {\r\n      if(sessionObj['name'] && sessionObj['name'] !== 'audio') {\r\n        sessions[sessionId] = sessionObj;\r\n      }\r\n    });\r\n    return sessions;\r\n  }\r\n\r\n  public getActiveAudioSession()\r\n  {\r\n    let audioSession = {};\r\n    _.forEach(this.activeSessions, (sessionObj, sessionId) => {\r\n      if(sessionObj['name'] && sessionObj['name'] === 'audio') {\r\n        audioSession[sessionId] = sessionObj;\r\n        return false; //breaking for each loop\r\n      }\r\n    });\r\n    return audioSession;\r\n  }\r\n\r\n  private getInActiveAudioSession()\r\n  {\r\n    let audioSession = {};\r\n    _.forEach(this.inactiveSessions, (sessionObj, sessionId) => {\r\n      if(sessionObj['name'] && sessionObj['name'] === 'audio') {\r\n        audioSession[sessionId] = sessionObj;\r\n        return false; //breaking for each loop\r\n      }\r\n    });\r\n    return audioSession;\r\n  }\r\n\r\n  /**\r\n   * will return sessions ids for active visual sessions or if no active visual session exists and audio only mode\r\n   * is enabled - will return the active audio session\r\n   * @return {string[]}\r\n   */\r\n  public getActiveRecordableSessionsIds()\r\n  {\r\n    let activeSessions = _.keys(this.getActiveVisualSessions());\r\n    //if there a no visual session and audio only mode is on - try audio session\r\n    if((!activeSessions || _.isEmpty(activeSessions)) &&\r\n      this.appConfig.getConfigData('config.captureApp.audioOnlyRecording')) {\r\n      activeSessions = _.keys(this.getActiveAudioSession());\r\n    }\r\n    return activeSessions;\r\n  }\r\n\r\n  public getInActiveRecordableSessionsIds()\r\n  {\r\n    let inActiveSessions = _.keys(this.getInActiveVisualSessions());\r\n    //if there a no visual session and audio only mode is on - try audio session\r\n    if((!inActiveSessions || _.isEmpty(inActiveSessions)) &&\r\n      this.appConfig.getConfigData('config.captureApp.audioOnlyRecording')) {\r\n      inActiveSessions = _.keys(this.getInActiveAudioSession());\r\n    }\r\n    return inActiveSessions;\r\n  }\r\n  public getSessionsNames(isActive: boolean)\r\n  {\r\n    let sessions = isActive ? this.activeSessions : this.inactiveSessions;\r\n    let sessionsNames = [];\r\n    _.forEach(sessions, (session) => {\r\n      sessionsNames.push(session['name']);\r\n    });\r\n    return sessionsNames;\r\n  }\r\n\r\n  public getSessionIdByName(sessionName, active = true) {\r\n    let sessions = active ? this.getActiveSessions() : this.getInActiveSessions();\r\n    for (let key of Object.keys(sessions)) {\r\n      if (sessions[key][\"name\"] === sessionName)\r\n        return key;\r\n    }\r\n  }\r\n\r\n  public updateAppState(sourceId, state)\r\n  {\r\n    this.appState[sourceId] = state;\r\n  }\r\n\r\n  public setLiveConfigurationState(confState) {\r\n    this.liveConfigured = confState;\r\n  }\r\n\r\n  public setLiveStreamingState(streamingState) {\r\n    this.liveStreaming = streamingState;\r\n  }\r\n\r\n  public isAppLiveConfigured() {\r\n    return this.liveConfigured;\r\n  }\r\n\r\n  public isAppStreaming() {\r\n    return this.isAppRecording() && this.liveConfigured && this.liveStreaming;\r\n  }\r\n\r\n  /**\r\n   * all calls completed and app is not during a recording session\r\n   * @returns {boolean}\r\n   */\r\n  public isAppStable()\r\n  {\r\n    return _.every(_.values(this.appState), (state)=>{\r\n      return state === this.REC_STATE.STABLE;\r\n    });\r\n  }\r\n\r\n  public isAppRecording()\r\n  {\r\n    return (this.appState['rec-state'] && this.appState['rec-state'] === this.REC_STATE.IN_PROCESS) ||\r\n      (this.recordingPhase && this.recordingPhase !== 'initial'); //added to support app loading stage where rec-state wasn't initialized yet\r\n  }\r\n\r\n  public isSourceStable(sourceId, sourceOnly = false)\r\n  {\r\n    return ((this.appState[sourceId] && this.appState[sourceId] === this.REC_STATE.STABLE) || !(this.appState[sourceId])) &&\r\n      ((this.appState['rec-state'] && this.appState['rec-state'] === this.REC_STATE.STABLE) || sourceOnly);\r\n  }\r\n\r\n  /**\r\n   * Getting sessions names and default device type from persistent data file and user settings for app init phase\r\n   * For personal capture app - always make sure returned sessions count is a least the amount of sessions configured\r\n   * in the user localSettings 'defaultSessionsConfiguration'.\r\n   * For classroom capture - if sessions count from persistent data equals to 0. load sessions as configured in the\r\n   * user localSettings 'defaultSessionsConfiguration'. else - return the sessions from app persistent data file\r\n   *\r\n   * usage example: used during app sessions init in BL and UI\r\n   */\r\n  public getVisualSessionsNamesAndDefaultTypesForInit()\r\n  {\r\n    let captureSessionsToInit = {};\r\n    return this.getVisualSessionsFromPersistentData()\r\n      .then(sessions => {\r\n        let defaultSessionsTypeArray = this.appConfig.getConfigData('config.captureApp.defaultSessionsConfiguration');\r\n        _.forEach(_.keys(sessions).sort(), (sessionKey, index) => {\r\n          let defaultType = defaultSessionsTypeArray[index] ? defaultSessionsTypeArray[index] : this.DEFAULT_CAPTURE_TYPE;\r\n          captureSessionsToInit[sessionKey] = defaultType;\r\n        });\r\n        let appType = this.appConfig.getConfigData('config.shared.appType');\r\n        //for personal capture OR if there are no sessions to init - load defaults\r\n        if(appType === 'pc' || _.keys(captureSessionsToInit).length === 0) {\r\n          //making sure persistent sessions count is at least equal to default configured sessions\r\n          for (let count = _.keys(sessions).length; count < defaultSessionsTypeArray.length; count++) {\r\n            captureSessionsToInit['session' + count] = defaultSessionsTypeArray[count];\r\n          }\r\n        }\r\n        return captureSessionsToInit;\r\n      });\r\n  }\r\n\r\n  public getVisualSessionsFromPersistentData()\r\n  {\r\n    let sessions = {};\r\n    return this.persistencyService.get('')\r\n      .then((persistentDataObj) => {\r\n        _.forEach(persistentDataObj, (value, key) => {\r\n          if(key.startsWith('session')) {\r\n            sessions[key] = value;\r\n          }\r\n        });\r\n      }).catch((err) => {})\r\n      //works as finally block\r\n      .then(() => { return sessions });\r\n  }\r\n\r\n  private getNumberOfSessionsFromPersistentData()\r\n  {\r\n    //get all visual sessions count and add the 'audio' session\r\n    return this.getVisualSessionsFromPersistentData()\r\n      .then(sessions => {\r\n        return _.keys(sessions).length + 1;\r\n      });\r\n  }\r\n\r\n  private checkIfAllSessionsAreReady(sessionName: string)\r\n  {\r\n    this.getNumberOfSessionsFromPersistentData()\r\n      .then((sessionsToLoad) => {\r\n        let activeSessionsNumber = _.keys(this.getActiveSessions()).length;\r\n        let inActiveSessionsNumber = _.keys(this.getInActiveSessions()).length;\r\n        this.log.info('Session ' + sessionName + ' was added. number of current active sessions: ' + activeSessionsNumber +\r\n          '. Number of in active sessions: ' + inActiveSessionsNumber +\r\n          '. Number of loading sessions: ' + this.loadingSessionsCount + '. Number of sessions to load: ' + sessionsToLoad);\r\n        this.log.info('AppState: active sessions: ' + utils.stringifyMsg(this.activeSessions));\r\n        this.log.info('AppState: inactive sessions: ' + utils.stringifyMsg(this.inactiveSessions));\r\n        if(activeSessionsNumber + inActiveSessionsNumber >= sessionsToLoad && this.loadingSessionsCount === 0 || sessionsToLoad === 0) { //handling app persistency error when session number is 0\r\n          this.log.info('AppState: All sessions are ready');\r\n          this.log.info('AppState: free connection state lock');\r\n          this.setConnectionStateChangeLock('checkIfAllSessionsAreReady - ready', false);\r\n          this.appSessionsReady.next(true);\r\n          this.appSessionsReady.complete();\r\n        }\r\n      });\r\n  }\r\n\r\n  public onCallStarted(source, sessionId)\r\n  {\r\n    if(sessionId && sessionId !== '[]') {\r\n      let numOfCalls = this.callsInProgress[sessionId] ? this.callsInProgress[sessionId] : 0;\r\n      this.callsInProgress[sessionId] = ++numOfCalls;\r\n      this.updateAppState(sessionId, this.REC_STATE.IN_PROCESS);\r\n      this.log.info('call started: ' + source + ' id: ' + sessionId + ' number of current calls: ' + this.callsInProgress[sessionId]);\r\n    }\r\n  }\r\n\r\n  public onCallEnded(source, sessionId, data='')\r\n  {\r\n    if(sessionId && sessionId !== '[]') {\r\n      let numOfCalls = this.callsInProgress[sessionId];\r\n      this.callsInProgress[sessionId] = --numOfCalls;\r\n      this.updateAppState(sessionId, (this.callsInProgress[sessionId] === 0 ? this.REC_STATE.STABLE : this.REC_STATE.IN_PROCESS));\r\n      if(this.callsInProgress[sessionId] === 0) {\r\n        delete this.callsInProgress[sessionId];\r\n      }\r\n\r\n      this.log.info('call ended: ' + source + ' id: ' + sessionId + ' number of current calls: ' +\r\n        (_.isEmpty(this.callsInProgress[sessionId]) ? 0 : this.callsInProgress[sessionId]) +\r\n        (!_.isEmpty(data) ? (' ' + utils.stringifyMsg(data)) : '' ));\r\n    }\r\n  }\r\n\r\n  public setApplicationWindowState(state)\r\n  {\r\n    this.applicationWindowState.next(state);\r\n  }\r\n\r\n  public getApplicationWindowState()\r\n  {\r\n    return this.applicationWindowState.getValue();\r\n  }\r\n\r\n  public areSessionsReadyForRecording(caller)\r\n  {\r\n    //if there is no need to wait for loading sessions (@see this.waitForSessionsToLoad comment above...)\r\n    switch(this.waitForSessionsToLoad)\r\n    {\r\n      case this.SESSION_LOAD_WAIT_STATE.NEXT_TIME:\r\n        this.waitForSessionsToLoad = this.SESSION_LOAD_WAIT_STATE.ALWAYS;\r\n      case this.SESSION_LOAD_WAIT_STATE.NEVER:\r\n        this.log.info('AppState: ' + caller + ' there is no need to wait for loading sessions.');\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    let timeoutDelay = 30000;\r\n    //if function is stuck, there are probably some sessions issues, call to re-init.\r\n    let delayedTO = setTimeout(() => {\r\n      this.log.warn('AppState: for ' + caller + ' - Sessions are not ready for more than ' + timeoutDelay / 1000 + ' seconds, call to re-launch app');\r\n      return ipcWrapper.sendIPC('relaunch');\r\n    }, timeoutDelay);\r\n\r\n    this.log.info(caller + ' is waiting for sessions to be ready');\r\n\r\n    return this.getNumberOfSessionsFromPersistentData()\r\n      .then(sessionsCount => {\r\n        if(sessionsCount === 0) {\r\n          this.log.info('AppState: There are no sessions to wait for. App is ready');\r\n          clearTimeout(delayedTO);\r\n          return Promise.resolve(true);\r\n        } else {\r\n          return this.sessionsAreReadyPromise\r\n            .then((ready) => {\r\n              clearTimeout(delayedTO);\r\n              this.log.info('AppState: ' + caller + ' all sessions are in ready state: ' + ready);\r\n              return Promise.resolve(true);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  public setConnectionStateChangeLock(caller, lock)\r\n  {\r\n    this.log.info('AppState: ' + caller + ' set connection state lock to: ' + lock);\r\n    this.connectionStateChangeLock = lock;\r\n  }\r\n\r\n  public sessionsReturnedFromConnectionStateChange(caller)\r\n  {\r\n    this.log.info('AppState: waiting for session to be ready after connection state change');\r\n    return this.areSessionsReadyForRecording(caller)\r\n      .then(() => {\r\n        if(this.connectionStateChangeLock) {\r\n          this.log.info('AppState: sessions are still during connection state change process.');\r\n          return utils.delayPromise(2000).then(() => {\r\n            return this.sessionsReturnedFromConnectionStateChange(caller);\r\n          });\r\n        } else {\r\n          this.log.info('AppState: sessions finished connection state change process.');\r\n          return Promise.resolve(true);\r\n        }\r\n      })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/app-state.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {Http, Response} from '@angular/http';\r\nimport {Observable, Subject} from \"rxjs\";\r\nimport {AppConfigService} from \"./app-config.service\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppStateService} from \"./app-state.service\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  public static isAuthenticationEnabled = false;\r\n\r\n  /**\r\n   * emit event when user auth state updates,\r\n   * true - logged in\r\n   * false - logged out\r\n   */\r\n  private userAuthUpdate = new Subject<boolean>();\r\n  userAuthUpdate$ = this.userAuthUpdate.asObservable();\r\n\r\n  private _isLoggedIn:boolean = false;\r\n\r\n  set isLoggedIn(loggedIn: boolean) {\r\n    this._isLoggedIn = loggedIn;\r\n    this.userAuthUpdate.next(this._isLoggedIn);\r\n  }\r\n\r\n  get isLoggedIn()\r\n  {\r\n    return this._isLoggedIn;\r\n  }\r\n\r\n  private idleCounter;\r\n  private intervalSub;\r\n\r\n  constructor(private http: Http,\r\n              private log: AppLoggerService,\r\n              private config: AppConfigService,\r\n              private appState: AppStateService,\r\n              private appConfig: AppConfigService){}\r\n\r\n  public static getAuthenticationMode()\r\n  {\r\n    return ipcWrapper.sendIPC('isAuthEnabled')\r\n      .then((enabled) => {\r\n        this.isAuthenticationEnabled = enabled === 0 ? false : true;\r\n      });\r\n  }\r\n\r\n  public isUrlValid()\r\n  {\r\n    return this.http.get(this.appConfig.getConfigData('config.shared.authenticationUrl')).toPromise()\r\n      .then((res: any) => {\r\n        return true;\r\n      })\r\n      .catch((e:any) => {\r\n        return Promise.reject(false);\r\n      });\r\n  }\r\n\r\n  public isUserLoggedIn()\r\n  {\r\n    return this.isLoggedIn;\r\n  }\r\n\r\n  public logIn(userDate)\r\n  {\r\n    this.setUserLogInData(userDate);\r\n  }\r\n\r\n  public logOut()\r\n  {\r\n    this.restartLoginIdleInterval();\r\n\r\n    return this.logoutAndClearSessionData()\r\n      .then((response) => {\r\n        if (this.appState.isAppRecording()) return Promise.resolve(true);\r\n        //if not during recording\r\n        this.removeUserLogInData();\r\n        this.log.info('User was logged out');\r\n      })\r\n      .catch( (error: any)=> {\r\n        this.log.info('Failed to logout from external site, removing logged in user data');\r\n        this.removeUserLogInData();\r\n        return Promise.resolve(false);\r\n      });\r\n  }\r\n\r\n  public getAuthLoginUrl()\r\n  {\r\n    return this.isUrlValid()\r\n      .then((valid) => {\r\n        return this.appConfig.getConfigData('config.shared.authenticationUrl');\r\n      });\r\n  }\r\n\r\n  public getUserLogoutUrl()\r\n  {\r\n    return this.appConfig.getConfigData('config.shared.authenticationUrl') + '?logout=true';\r\n  }\r\n\r\n  public getLoggedInUserId()\r\n  {\r\n    if(this.isUserLoggedIn())\r\n      return this.config.getConfigData('config.shared.externalSettings.userId');\r\n    else return '';\r\n  }\r\n\r\n  private setUserLogInData(userData)\r\n  {\r\n    this.config.setConfigData('config.shared.externalSettings.appToken', userData.appToken);\r\n    this.config.setConfigData('config.shared.externalSettings.appTokenId', userData.appTokenId);\r\n    this.config.setConfigData('config.shared.externalSettings.hashType', userData.hashType);\r\n    this.config.setConfigData('config.shared.externalSettings.partnerId', userData.partnerId);\r\n    this.config.setConfigData('config.shared.externalSettings.serviceUrl', userData.serviceUrl);\r\n    this.config.setConfigData('config.shared.externalSettings.userId', userData.userId);\r\n    this.isLoggedIn = true;\r\n    this.startLoginIdleInterval();\r\n  }\r\n\r\n  private logoutAndClearSessionData()\r\n  {\r\n    return ipcWrapper.sendIPC('clearSessionData');\r\n  }\r\n\r\n  private removeUserLogInData()\r\n  {\r\n    this.isLoggedIn = false;\r\n    this.config.setConfigData('config.shared.externalSettings', {});\r\n    this.stopLoginIdleInterval();\r\n  }\r\n\r\n  private startLoginIdleInterval()\r\n  {\r\n    this.idleCounter = this.getBaseIdleTime();\r\n    this.intervalSub = Observable.timer(0, 1000).subscribe(t => {\r\n      if (this.idleCounter <= 0) this.logOut();\r\n      else this.idleCounter--;\r\n    });\r\n  }\r\n\r\n  public restartLoginIdleInterval() {\r\n    this.idleCounter = this.getBaseIdleTime();\r\n  }\r\n\r\n  private stopLoginIdleInterval()\r\n  {\r\n    if (this.intervalSub) {\r\n      this.intervalSub.unsubscribe();\r\n      this.intervalSub = null;\r\n    }\r\n  }\r\n\r\n  private getBaseIdleTime() {\r\n    let baseIdleTime = this.appConfig.getConfigData('config.shared.appLoginIdleMinutes');\r\n    return baseIdleTime ? baseIdleTime * 60 : 15 * 60;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/authentication.service.ts","import { NgModule } from '@angular/core';\r\nimport {AppConfigService} from \"./app-config.service\";\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {AppPersistentDataService} from \"./app-persistent-data.service\";\r\nimport {AppStateService} from \"./app-state.service\";\r\nimport {AppNotificationsService} from \"./app-notifications.service\";\r\nimport {KalturaApiService} from \"./kaltura-api.service\";\r\nimport {SystemDataService} from \"./system-data.service\";\r\nimport {SystemHealthService} from \"./system-health.service\";\r\nimport {PanelsService} from \"./panels.service\";\r\nimport {AccessibilityService} from \"./accessability.service\";\r\nimport {AuthenticationService} from \"./authentication.service\";\r\nimport {SessionStateService} from \"./session-state.service\";\r\n\r\n@NgModule({\r\n  providers: [\r\n    AppConfigService,\r\n    AppLoggerService,\r\n    AppPersistentDataService,\r\n    AppStateService,\r\n    AppNotificationsService,\r\n    KalturaApiService,\r\n    SystemDataService,\r\n    SystemHealthService,\r\n    PanelsService,\r\n    AccessibilityService,\r\n    AuthenticationService,\r\n    SessionStateService\r\n  ]\r\n})\r\nexport class InfraModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/infra.module.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Headers, Response} from '@angular/http';\r\nimport {AppConfigService} from \"./app-config.service\";\r\nimport * as _ from 'lodash';\r\nimport {utils} from '../../../utils/utils';\r\nimport 'rxjs/Rx';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {AppPersistentDataService} from \"./app-persistent-data.service\";\r\n\r\n@Injectable()\r\nexport class KalturaApiService {\r\n  _id: number = 0;\r\n  _ks: string ;\r\n  _config: any;\r\n  _ks_expiry: Date;\r\n\r\n  constructor(private http: Http,\r\n              private logger: AppLoggerService,\r\n              private appConfig:AppConfigService,\r\n              private appPersistency: AppPersistentDataService) {\r\n    /*\r\n     this.listUsers(\"web\").subscribe( res => {\r\n     console.warn(\"listUsers\",res);\r\n     });\r\n     */\r\n  }\r\n\r\n  public listUsers(startsWith:string) : Observable<any>\r\n  {\r\n    return this.apiRequest(\r\n      [{ service: 'user',\r\n        action: 'list',\r\n        \"filter:objectType\": \"KalturaUserFilter\",\r\n        \"filter:idOrScreenNameStartsWith\": startsWith,\r\n        'pager:pageSize': 10},\r\n        { service: 'user',\r\n          action: 'list',\r\n          \"filter:objectType\": \"KalturaUserFilter\",\r\n          \"filter:firstNameOrLastNameStartsWith\": startsWith,\r\n          'pager:pageSize': 10}])\r\n      .map( res => {\r\n        let userList = [];\r\n        _.each(res, (result, key) => {\r\n          userList = _.unionBy(userList, result['objects'], 'id');\r\n        });\r\n        return userList;\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} resourceId\r\n   * @param {string} eventType\r\n   * @param {any} data\r\n   * @param {boolean} shouldLog\r\n   * @param {boolean} rawData raw data or private data (image or text)\r\n   * @returns {Observable<any>}\r\n   */\r\n  public reportMonitoringData(resourceId: string, eventType: string, data: any, shouldLog: boolean, rawData: boolean) : Observable<any>\r\n  {\r\n    let reqObject = {\r\n      \"service\": 'beacon_beacon',\r\n      \"action\": 'add',\r\n      \"shouldLog\" : shouldLog ? 1 : 0,\r\n      \"beacon:objectType\": 'KalturaBeacon',\r\n      \"beacon:relatedObjectType\": \"1\",\r\n      \"beacon:eventType\": eventType,\r\n      \"beacon:objectId\": resourceId\r\n    };\r\n    if(rawData) {\r\n      reqObject['beacon:rawData'] = _.isObject(data) ? JSON.stringify(data) : data;\r\n    } else {\r\n      reqObject['beacon:privateData'] = _.isObject(data) ? JSON.stringify(data) : data;\r\n    }\r\n    return this.apiRequest(reqObject);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param startDate time in millis\r\n   * @param endDate time in millis\r\n   * @return {Observable<R>}\r\n   */\r\n  public getScheduledEvents(startDate: number, endDate: number, resourceId:string) : Observable<any>\r\n  {\r\n    this.logger.debug(\"Sending API get request scheduled event: \" + resourceId);\r\n    return this.apiRequest(\r\n      { service: 'schedule_scheduleevent',\r\n        action: 'list',\r\n        \"filter:objectType\": \"KalturaScheduleEventFilter\",\r\n        \"filter:endDateGreaterThanOrEqual\": startDate / 1000, //ms to sec (server units)\r\n        \"filter:startDateLessThanOrEqual\": endDate / 1000, // ms to sec (server units)\r\n        \"filter:orderBy\": \"+startDate,+createdAt\",\r\n        \"filter:resourceIdsLike\": resourceId,\r\n        \"filter:recurrenceTypeIn\": \"0,2\",\r\n        \"filter:statusEqual\": 2,//only Active events\r\n        'pager:pageSize': 1000})\r\n      .map( res => {\r\n        return res.objects;\r\n      });\r\n  }\r\n\r\n  public getEntry(entryId: string) : Observable<any>\r\n  {\r\n    this.logger.debug(\"Sending API get request for entry id: \" + entryId);\r\n    return this.apiRequest(\r\n      { service: 'baseentry',\r\n        action: 'get',\r\n        entryId: entryId\r\n      }\r\n    );\r\n  }\r\n\r\n  public updateRedirectEntryId(entryId: string, redirectEntryId: string)  : Observable<any> {\r\n    this.logger.debug(\"Sending API update request for entry id: \" + entryId + \" with redirectEntryId of: [\" + redirectEntryId + \"]\");\r\n    return this.apiRequest(\r\n      { service: 'baseentry',\r\n        action: 'update',\r\n        entryId: entryId,\r\n        \"baseEntry:objectType\" : \"KalturaBaseEntry\",\r\n        \"baseEntry:redirectEntryId\" : redirectEntryId\r\n      }\r\n    );\r\n  }\r\n\r\n  public updateAdminTags(entryId: string, adminTags: string)  : Observable<any> {\r\n    this.logger.debug(\"Sending API update request for entry id: \" + entryId + \" with AdminTags of: \" + adminTags);\r\n    return this.apiRequest(\r\n      { service: 'baseentry',\r\n        action: 'update',\r\n        entryId: entryId,\r\n        \"baseEntry:objectType\" : \"KalturaBaseEntry\",\r\n        \"baseEntry:adminTags\" : adminTags\r\n      }\r\n    );\r\n  }\r\n\r\n  public getFlavors(flavorIds: string) : Observable<any>\r\n  {\r\n    this.logger.debug(\"Sending API list request for flavors ids: \" + flavorIds);\r\n    return this.apiRequest(\r\n      { service: 'flavorparams',\r\n        action: 'list',\r\n        \"filter:objectType\": \"KalturaScheduleEventFilter\",\r\n        \"filter:idIn\": flavorIds\r\n      }\r\n    ).map( res => {\r\n      return res.objects;\r\n    });\r\n  }\r\n\r\n  public apiRequest(params:any) : Observable<any> {\r\n    let now=new Date();\r\n\r\n    if (this._ks_expiry && now>this._ks_expiry) {\r\n      this._ks=null;\r\n    }\r\n\r\n    if (this._ks) {\r\n      return this._apiRequest(params);\r\n    }\r\n\r\n    return this.login().flatMap( res=> {\r\n      return this._apiRequest(params);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * sets user suggested tags in persistent data file [last 10 tags]\r\n   * *** in future we might consider to use Kaltura api to fetch all relevant tags and remove this method ***\r\n   * @param tags\r\n     */\r\n  public setSuggestedTags(tags: string[])\r\n  {\r\n    return this.getSuggestedTags('').toPromise()\r\n      .then((oldTags) => {\r\n        let allTags = _.uniq(oldTags.concat(tags));\r\n        this.appPersistency.set('user.tags', _.takeRight(allTags, 10).join(','));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * gets user suggested tags [last 10 used tags] from app persistent data\r\n   * *** in future we might consider to use Kaltura api to fetch all relevant tags ***\r\n   * @param containedString\r\n   * @returns {Array}\r\n     */\r\n  public getSuggestedTags(containedString: string)\r\n  {\r\n    return Observable.fromPromise(this.appPersistency.get('user')\r\n      .then((userData) => {\r\n        let tags = [];\r\n        if(userData && !_.isEmpty(userData) && userData['tags']) {\r\n          let suggested = userData['tags'].split(',');\r\n          _.forEach(suggested, (suggestedTag) => {\r\n            if(suggestedTag.includes(containedString)) tags.push(suggestedTag);\r\n          })\r\n        }\r\n        return tags;\r\n      }));\r\n  }\r\n\r\n  private login (): Observable<any> {\r\n    this._config = this.appConfig.getConfigData(\"config.shared\");\r\n\r\n    return this._apiRequest({\r\n      service: \"session\",\r\n      action: \"startWidgetSession\",\r\n      \"widgetId\": '_' + this._config[\"partnerId\"]\r\n    }).flatMap((result) => {\r\n      return this._apiRequest({\r\n        service: \"apptoken\",\r\n        action: \"startSession\",\r\n        ks: result.ks,\r\n        tokenHash: utils.sha1(result.ks + this._config[\"appToken\"]),\r\n        id: this._config[\"appTokenId\"]\r\n      }).map((result) => {\r\n        this._ks = result.ks;\r\n        let now = new Date();\r\n        this._ks_expiry = new Date(now.getTime() + 1 * 60 * 60 * 1000);//1 hour\r\n        return result;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  private _apiRequest(requests:any): Observable<any> {\r\n\r\n    let body:any = {\r\n      ks: this._ks,\r\n      format: 1,\r\n      clientTag: \"CRA:\"+ this._config.app_version\r\n    };\r\n\r\n    if (_.isArray(requests)) {\r\n      body['service'] = \"multirequest\";\r\n      requests.forEach( (item,index) => {\r\n        _.each(item, (value,key)=> {\r\n          body[index + \":\" + key] = value;\r\n        });\r\n      });\r\n    } else {\r\n      body=_.assign(body,requests);\r\n    }\r\n    let requestJSON =  JSON.stringify(body);\r\n\r\n    this._id++;\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    this.logger.debug('API request [#'+this._id+'] for service '+ body['service'] + '::' + body['action']);\r\n    return this.http.post(this._config['serviceUrl']+ `/api_v3/index.php`,requestJSON, {\r\n      headers: headers\r\n    }).map( (response:Response) => {\r\n      let result=response.json();\r\n      let headers=response.headers;\r\n      this.logger.debug('API response for [#' + this._id + '] X-Me: [' + headers.get('X-Me') + '] X-Kaltura-Session: ' + headers.get('X-Kaltura-Session'));\r\n      if (result && result.objectType === \"KalturaAPIException\") {\r\n        throw Observable.throw ( result );\r\n      }\r\n      return result;\r\n    }).catch( (error: any)=> {\r\n        this.logger.warn('API response failed for #'+this._id + ' result.' +\r\n          ' Token Id: ' + this._config[\"appTokenId\"] +\r\n          ' KS: ' + this._ks +\r\n          ' KS expiry: ' + this._ks_expiry +\r\n          ' Error msg: ' + utils.stringifyMsg(error));\r\n        this._ks = null; //making sure we won't use the same KS in the next call\r\n        return Observable.throw(error);\r\n    });\r\n  }\r\n\r\n  public checkIsLive(entryId: string) : Observable<any>\r\n  {\r\n    let requestJSON = JSON.stringify({ service: 'livestream',\r\n      action: 'isLive',\r\n      \"id\": entryId,\r\n      \"protocol\": \"applehttp\",\r\n      \"format\": 1,\r\n    });\r\n\r\n    return this.http.post(this._config['serviceUrl']+ `/api_v3/index.php`,requestJSON, {\r\n      headers: new Headers({'Content-Type': 'application/json'})\r\n    }).map( (response:Response) => {\r\n      let result = response.json();\r\n      if (result && result.objectType === \"KalturaAPIException\") {\r\n        throw Observable.throw(result);\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/kaltura-api.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport * as _ from \"lodash\";\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\n\r\n@Injectable()\r\nexport class PanelsService {\r\n\r\n  /**\r\n   * contain an panel object:\r\n   * type: <the panel type f.e: 'recording-details-edit' / 'audio-device-settings' etc...>,\r\n   * active: true / false\r\n   * @type {BehaviorSubject<Object>}\r\n   */\r\n  private currentPanel = new BehaviorSubject<Object>({});\r\n  currentPanel$ = this.currentPanel.asObservable();\r\n\r\n  constructor(private log: AppLoggerService){}\r\n\r\n  /**\r\n   * update current panel state\r\n   * @param panel\r\n   * @param force if true, updating new panel although current panel is open\r\n   */\r\n  updateCurrentPanel(panel, force = false)\r\n  {\r\n    //if the app is trying to open two panels at the same time and not is force mode\r\n    if(!force && !_.isEmpty(this.getCurrentPanel()) && panel['active'] && this.getCurrentPanel()['active']) {\r\n      this.log.info('rejected open panel request');\r\n    } else {\r\n      this.currentPanel.next(panel);\r\n    }\r\n  }\r\n\r\n  getCurrentPanel()\r\n  {\r\n    return this.currentPanel.getValue();\r\n  }\r\n\r\n  /**\r\n   * is the current active panel is the provided panel\r\n   * @param panelType\r\n   * @returns {boolean}\r\n   */\r\n  isPanelActive(panelType) : boolean\r\n  {\r\n    return (this.getCurrentPanel() && this.getCurrentPanel()['type'] === panelType) ?\r\n      this.currentPanel.getValue()['active'] : false;\r\n  }\r\n\r\n  /**\r\n   * is there any active panel at the moment - displayed to the user\r\n   * @returns {boolean|any}\r\n   */\r\n  isCurrentPanelActive() : boolean {\r\n    return !_.isEmpty(this.getCurrentPanel()) && this.getCurrentPanel()['active'];\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/panels.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\n@Injectable()\r\nexport class SessionStateService {\r\n\r\n  /**\r\n   * fires event when all sessions finished initialization process\r\n   * @type {Subject}\r\n   */\r\n  sessionsInit = new Subject();\r\n  sessionsInit$ = this.sessionsInit.asObservable();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/session-state.service.ts","import { Injectable } from '@angular/core';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {utils} from  \"../../../utils/utils\";\r\n\r\n@Injectable()\r\nexport class SystemDataService {\r\n\r\n  private systemData : any = null;\r\n\r\n  constructor(private log: AppLoggerService)\r\n  {\r\n    ipcWrapper.sendIPC('getLocalizationData').then((data : any) => {\r\n      this.systemData = data;\r\n    }).catch((err) => {\r\n      this.log.error('Failed to getLocalizationData. ' + utils.stringifyMsg(err));\r\n    });\r\n  }\r\n\r\n  public getLang() : string {\r\n    if (this.systemData && this.systemData['lang']){\r\n      return this.systemData['lang'];\r\n    }\r\n    return navigator.language;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/system-data.service.ts","import {Injectable} from '@angular/core';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from 'lodash';\r\nimport {Observable, BehaviorSubject} from 'rxjs/Rx';\r\nimport {AppLoggerService} from \"./app-logger.service\";\r\nimport {utils} from  \"../../../utils/utils\";\r\nimport {AppConfigService} from \"./app-config.service\";\r\nimport {AppNotificationsService} from \"./app-notifications.service\";\r\nimport {AppStateService} from \"./app-state.service\";\r\n\r\n@Injectable()\r\nexport class SystemHealthService {\r\n\r\n  readonly SYS_HEALTH_ERROR = 'sys_health_error';\r\n  readonly HEALTH_STATUS = {\r\n    OK : 'ok',\r\n    ERROR: 'error'\r\n  }\r\n\r\n  readonly BYTES_IN_GB:number = 1073741824;\r\n  readonly SAMPLE_INTERVAL_SEC:number = 10;\r\n  readonly MAX_CPU_PERCENTAGE:number = 70;\r\n  readonly MIN_MEMORY_GB:number = 1;\r\n  readonly MIN_DISKSPACE_GB:number = 20;\r\n  readonly NUM_SAMPLES_TO_ALER_TAFTER = 3;\r\n\r\n  private systemHealthTimer: any = null;\r\n  private systemHealthTimerSub: any = null;\r\n  private systemHealthThresholds: any =\r\n  {\r\n    'sampleIntervalSec': this.SAMPLE_INTERVAL_SEC,\r\n    'maxCpuPercentage' : this.MAX_CPU_PERCENTAGE,\r\n    'minMemoryGB': this.MIN_MEMORY_GB,\r\n    'minDiskspaceGB' : this.MIN_DISKSPACE_GB,\r\n    'numSamplesToAlertAfter' : this.NUM_SAMPLES_TO_ALER_TAFTER\r\n  };\r\n  private exceedThresholdSet = new Set();\r\n\r\n  private systemNotHealthy = new BehaviorSubject<boolean>(false); // healthy state\r\n  public systemNotHealthy$ = this.systemNotHealthy.asObservable();\r\n  private cpuPercent_consecutive_violations = 0;\r\n  private memFree_consecutive_violations = 0;\r\n\r\n  /**\r\n   * system health notification is being started on app loading (see appModule).\r\n   */\r\n  constructor(private log: AppLoggerService,\r\n              private config: AppConfigService,\r\n              private notificationService: AppNotificationsService,\r\n              private appState: AppStateService) {\r\n  }\r\n\r\n  start()\r\n  {\r\n    this.log.info('Loading system health configurations');\r\n    let sysHealth = this.config.getConfigData('config.captureApp.systemHealth');\r\n    sysHealth = _.isEmpty(sysHealth) ? {} : sysHealth;\r\n    this.systemHealthThresholds = _.merge(this.systemHealthThresholds, sysHealth);\r\n    this.validateHealthParams();\r\n    this.systemHealthTimer = Observable.timer(1000, this.systemHealthThresholds['sampleIntervalSec']*1000);\r\n    this.startSystemHealthInterval();\r\n  }\r\n\r\n  private validateHealthParams(){\r\n    if (!Number.isInteger(this.systemHealthThresholds['sampleIntervalSec']) || this.systemHealthThresholds['sampleIntervalSec'] < 10 || this.systemHealthThresholds['sampleIntervalSec'] > 60){\r\n      this.systemHealthThresholds['sampleIntervalSec'] = 60;\r\n      this.log.warn('SystemHealthService: sampleIntervalSec should be a number between 10-60 seconds (default: 60)');\r\n    }\r\n    if (!Number.isInteger(this.systemHealthThresholds['minDiskspaceLeftMB']) || this.systemHealthThresholds['minDiskspaceLeftMB'] < 500){\r\n      this.systemHealthThresholds['minDiskspaceLeftMB'] = 500;\r\n      this.log.warn('SystemHealthService: minDiskspaceLeftMB should be a number more than 500 (default: 500)');\r\n    }\r\n  }\r\n\r\n  stop()\r\n  {\r\n    this.log.info('Stopping system health notifications');\r\n    if(this.systemHealthTimerSub) {\r\n      this.systemHealthTimerSub.unsubscribe();\r\n      this.systemHealthTimerSub = null;\r\n    }\r\n  }\r\n\r\n  private startSystemHealthInterval()\r\n  {\r\n    this.log.info('Starting system health notifications');\r\n    this.systemHealthTimer.subscribe(() => {\r\n      this.checkSystemHealth();\r\n    });\r\n  }\r\n\r\n  public checkSystemHealth(scheduled = true, forMonitoring = false): any {\r\n    return ipcWrapper.sendIPC('getPerformanceCounters')\r\n      .then((data : any) => {\r\n        if(!_.isEmpty(data)) {\r\n          if(data['cpuPercent'] && scheduled) this.notifyCpu(data['cpuPercent']);\r\n          if(data['diskFree']) this.notifyDiskspace(data['diskFree'] / this.BYTES_IN_GB , scheduled);\r\n          if(data['memFree'] && scheduled) this.notifyMemory(data['memFree'] / this.BYTES_IN_GB);\r\n        }\r\n        // send health status obj for checking manually (on StartRecording...)\r\n        // fist of all - check if DS is almost full - most critical\r\n        if (this.exceedThresholdSet.has('diskspaceAlmostFull')){\r\n          return {status: this.HEALTH_STATUS.ERROR , message: 'SYSTEM_HEALTH.diskspace-full', type: this.SYS_HEALTH_ERROR};\r\n          //just for monitoring and less critical than full DS\r\n        } else if (forMonitoring && this.exceedThresholdSet.has('diskspaceThresholdExceeded')) {\r\n          return {status: this.HEALTH_STATUS.ERROR , message: 'SYSTEM_HEALTH.diskspace',\r\n                  type: this.SYS_HEALTH_ERROR, params: {diskspace_value: this.systemHealthThresholds['minDiskspaceGB'] + 'GB'}};\r\n        } else {\r\n          return {status: this.HEALTH_STATUS.OK};\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        // if Performance data is not exits don't fail the recording (status: ok)\r\n        this.log.error('Failed to load system health data. ' + utils.stringifyMsg(err));\r\n        return {status: this.HEALTH_STATUS.OK};\r\n      });\r\n  }\r\n\r\n  private notifyCpu(cpuData)\r\n  {\r\n    this.log.debug('System health - CPU: ' + cpuData);\r\n    if(cpuData >= this.systemHealthThresholds['maxCpuPercentage']) {\r\n      this.cpuPercent_consecutive_violations++;\r\n      if( !this.exceedThresholdSet.has('cpuThresholdExceeded') &&\r\n        this.cpuPercent_consecutive_violations > this.systemHealthThresholds['numSamplesToAlertAfter'] &&\r\n        this.appState.isAppRecording())\r\n      {\r\n        this.notificationService.sendNotificationWithParams(\r\n          this.appState.isAppLiveConfigured() ? \"SYSTEM_HEALTH.cpu_inLive\" : \"SYSTEM_HEALTH.cpu\",\r\n          {cpu_value: this.systemHealthThresholds['maxCpuPercentage'] + '%'},\r\n          'warn');\r\n        this.exceedThresholdSet.add('cpuThresholdExceeded');\r\n      }\r\n    } else {\r\n      this.cpuPercent_consecutive_violations = 0;\r\n      this.exceedThresholdSet.delete('cpuThresholdExceeded');\r\n    }\r\n  }\r\n\r\n  private notifyMemory(memoryData)\r\n  {\r\n    this.log.debug('System health - Memory: ' + memoryData);\r\n    if(memoryData <= this.systemHealthThresholds['minMemoryGB']) {\r\n      this.memFree_consecutive_violations++\r\n      if( !this.exceedThresholdSet.has('memoryThresholdExceeded') &&\r\n        this.memFree_consecutive_violations > this.systemHealthThresholds['numSamplesToAlertAfter'] &&\r\n        this.appState.isAppRecording())\r\n      {\r\n        this.notificationService.sendNotificationWithParams(\r\n          this.appState.isAppLiveConfigured() ? \"SYSTEM_HEALTH.memory_inLive\" : \"SYSTEM_HEALTH.memory\",\r\n          {memory_value: this.systemHealthThresholds['minMemoryGB'] + 'GB'},\r\n          'warn');\r\n        this.exceedThresholdSet.add('memoryThresholdExceeded');\r\n      }\r\n    } else {\r\n      this.memFree_consecutive_violations = 0;\r\n      this.exceedThresholdSet.delete('memoryThresholdExceeded');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param diskspaceData\r\n   * @param scheduled if was called from a scheduled timer\r\n   */\r\n  private notifyDiskspace(diskspaceData, scheduled = true)\r\n  {\r\n    this.log.debug('System health - Diskspace: ' + diskspaceData);\r\n    if(diskspaceData <= this.systemHealthThresholds['minDiskspaceGB']) {\r\n      // on disk space we notify even when not recording & without numSamplesToAlertAfter since it's not something that changes often\r\n      if( !this.exceedThresholdSet.has('diskspaceThresholdExceeded'))\r\n      {\r\n        this.notificationService.sendNotificationWithParams(\r\n          'SYSTEM_HEALTH.diskspace',\r\n          {diskspace_value: this.systemHealthThresholds['minDiskspaceGB'] + 'GB'},\r\n          'warn');\r\n        this.exceedThresholdSet.add('diskspaceThresholdExceeded');\r\n      }\r\n    } else {\r\n      this.exceedThresholdSet.delete('diskspaceThresholdExceeded');\r\n    }\r\n\r\n    if (diskspaceData <= this.systemHealthThresholds['minDiskspaceLeftMB'] /1000){\r\n      // if not enough diskspace send notification at first time\r\n      if (!this.exceedThresholdSet.has('diskspaceAlmostFull')){\r\n        this.notificationService.sendNotification('SYSTEM_HEALTH.diskspace-full', 'error');\r\n        this.exceedThresholdSet.add('diskspaceAlmostFull');\r\n      }\r\n      // and fire the Not Health notifier\r\n      if (this.appState.isAppRecording() && scheduled){\r\n        this.systemNotHealthy.next(true);\r\n      }\r\n    }\r\n    else{\r\n      this.exceedThresholdSet.delete('diskspaceAlmostFull');\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/infra/system-health.service.ts","import * as _ from \"lodash\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppNotificationsService} from \"../infra/app-notifications.service\";\r\nimport {KalturaApiService} from \"../infra/kaltura-api.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class LiveManagerService {\r\n\r\n  constructor(private appState: AppStateService,\r\n              private log: AppLoggerService,\r\n              private config: AppConfigService,\r\n              private notificationService: AppNotificationsService,\r\n              private apiService: KalturaApiService) {\r\n    this.registerForSlideCapturingNotifications();\r\n    this.registerForLiveNotifications();\r\n  }\r\n\r\n  private currentLiveEntryId = null;\r\n  private streamingSessionId = null;\r\n  private subscribeIntervalForIsLiveCheck = null;\r\n\r\n  private checkIsLive() {\r\n    this.apiService.checkIsLive(this.currentLiveEntryId).toPromise().then((isLive) => {\r\n      this.log.debug(\"Setting isLive as: \" + isLive + \" for entry: \" + this.currentLiveEntryId);\r\n      this.appState.setLiveStreamingState(isLive);\r\n    }).catch((err) => {\r\n      this.log.warn('Failed to get isLive with error msg: ' + utils.stringifyMsg(err));\r\n      this.appState.setLiveStreamingState(false);\r\n    });\r\n  }\r\n\r\n  private startIsLiveInterval() { //need to start after configure live data and stop when done\r\n    let interval = this.config.getConfigData(\"config.captureApp.liveStreaming.checkIntervalForLive\");\r\n    interval = Math.min(interval ? interval*1000 : 10000, 10000); //convert to ms or set 10 sec as default\r\n    this.subscribeIntervalForIsLiveCheck = Observable.timer(0, interval)\r\n      .subscribe(() => {\r\n          this.checkIsLive();\r\n      });\r\n  }\r\n\r\n  public static buildStreamUrl(baseUrl, flavor) : string {\r\n    return baseUrl.slice(0, -2) + flavor['streamSuffix'];\r\n  }\r\n\r\n  public getStreamingSessionName(active = true) {\r\n    let sessions = active ? this.appState.getActiveSessions() : this.appState.getInActiveSessions();\r\n    for (let key of Object.keys(sessions)) {\r\n      if (this.streamingSessionId === key)\r\n        return sessions[key][\"name\"];\r\n    }\r\n  }\r\n\r\n  public removeLiveConfig() {\r\n    this.log.debug(\"Reset Live broadcast: setting the currentLiveEntryId as null. Currently is: \" + this.currentLiveEntryId);\r\n    this.currentLiveEntryId = null;\r\n    this.streamingSessionId = null;\r\n    this.appState.setLiveConfigurationState(false);\r\n    this.appState.setLiveStreamingState(false);\r\n    if (this.subscribeIntervalForIsLiveCheck)\r\n      this.subscribeIntervalForIsLiveCheck.unsubscribe();\r\n  }\r\n\r\n  private static getStreamUrl(baseUrl, flavors, tag)\r\n  {\r\n    let sourceFlavor = flavors.find(flavor => flavor['tags'].includes(tag));\r\n    if (sourceFlavor)\r\n      return LiveManagerService.buildStreamUrl(baseUrl, sourceFlavor);\r\n    return '';\r\n  }\r\n\r\n  public getLiveData(baseUrl:string, flavors:any) : any {\r\n\r\n    let flavorArray = [];\r\n    let primaryRtmp = LiveManagerService.getStreamUrl(baseUrl, flavors, 'source');\r\n    if (!this.config.getConfigData(\"config.captureApp.liveStreaming.enableLocalFlavorTranscoding\"))\r\n      return {primaryRtmp, flavorArray};\r\n\r\n    let flavorArrayFromConf = this.config.getConfigData(\"config.captureApp.liveStreaming.localFlavorTranscodingArray\");\r\n    if (flavorArrayFromConf)\r\n      return {primaryRtmp, flavorArray:flavorArrayFromConf};\r\n\r\n    // get all the flavors mark with the classroom tag\r\n    flavors.forEach(flavor => {\r\n        if (flavor['tags'].includes('classroom')) {\r\n          flavorArray.push({url:LiveManagerService.buildStreamUrl(baseUrl, flavor),\r\n            videoBitrate:flavor['videoBitrate'], width:flavor['width'], height:flavor['height'] });\r\n        }\r\n    });\r\n\r\n    if (flavorArray.length === 0) // if no flavors found set default as low\r\n      flavorArray.push({url:LiveManagerService.getStreamUrl(baseUrl, flavors, 'mbr'), videoBitrate:600000, width:640, height:480});\r\n\r\n    return {primaryRtmp, flavorArray};\r\n  }\r\n\r\n  private getLiveSessionIdForInputStream(sessionIdInRecovery = null) : string {\r\n    if (sessionIdInRecovery) // in recovery mode return the original session id\r\n      return sessionIdInRecovery;\r\n\r\n    let primarySessionName = this.config.getConfigData('config.captureApp.primarySessionName');\r\n    let sessionsNames = this.appState.getSessionsNames(true);\r\n    if (sessionsNames.includes(primarySessionName)) // primary session is default\r\n      return this.appState.getSessionIdByName(primarySessionName);\r\n\r\n    this.log.warn('Primary session is disable - fall-back to other inputs');\r\n    for (const sessionName of sessionsNames.sort()){\r\n      if (sessionName != \"audio\") { // as the names are sorted pick the first who is not audio\r\n        this.sendNotification(\"NOTIFICATIONS.warn_primaryInputDisableWhenLive\", null, \"warn\", true);\r\n        return this.appState.getSessionIdByName(sessionName);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public addLiveConfig(liveData, sessionIdInRecovery = null): Promise<any> {\r\n    if (liveData.hasOwnProperty(\"primaryRtmp\")) {\r\n      this.log.debug(\"@@DW - Start configuring live data\");\r\n      let sessionsId = this.getLiveSessionIdForInputStream(sessionIdInRecovery);\r\n      if (!sessionsId) {\r\n        this.log.warn(\"No sessions valid for live streaming: \" + sessionsId);\r\n        this.sendNotification(\"NOTIFICATIONS.warn_allVideoSessionDisableWhenLive\", null, \"warn\", true);\r\n        return Promise.resolve();\r\n      }\r\n\r\n      this.streamingSessionId = sessionsId;\r\n      this.currentLiveEntryId = liveData['templateEntryId'];\r\n      if (!this.currentLiveEntryId) // ensure there is entry which streaming to\r\n        this.currentLiveEntryId = liveData[\"primaryRtmp\"].split('/').pop().slice(0, -2);\r\n      liveData = _.pick(liveData, ['primaryRtmp', 'flavorArray', \"id\"]);\r\n      this.appState.setLiveConfigurationState(true);\r\n      this.startIsLiveInterval();\r\n      this.log.info(\"Event with id [\" + liveData[\"id\"] + \"] need to be stream to [\" + liveData[\"primaryRtmp\"] +  \"] for sessionId: \" + sessionsId);\r\n      return this.setLiveConfig(sessionsId, liveData);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private setLiveConfig(sessionId: string, liveData: any): Promise<any> {\r\n    this.appState.onCallStarted('setLiveConfig', sessionId);\r\n    return ipcWrapper.sendIPC(`${sessionId}-setLiveConfig`, liveData)\r\n      .then(() => {\r\n        this.appState.onCallEnded('setLiveConfig - SUCCESS', sessionId);\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('setLiveConfig - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  private registerForLiveNotifications () {\r\n    ipcWrapper.registerForNotification('live-notification', (data : any) => {\r\n      this.log.info('live-notification - got data: ' + utils.stringifyMsg(data));\r\n      try {\r\n        data = JSON.parse(data);\r\n        switch (data.errorReason) {\r\n          case \"connection\":\r\n            this.sendNotification(\"NOTIFICATIONS.error_LiveNetworkDisconnected\", null, data.severity, data.retriesNum == 1);\r\n            if (data.retriesNum == 1) {\r\n              this.stopLiveStreaming();\r\n            }\r\n            break;\r\n          case \"bufferOverflow\":\r\n            this.sendNotification(\"NOTIFICATIONS.error_LiveNetworkLowBandwidth\", {latencyInSeconds: data.latencyInSeconds}, data.severity, false);\r\n            break;\r\n        }\r\n      } catch (err) {\r\n        this.log.warn(\"Got Error while receiving live-notification: \" +  utils.stringifyMsg(err));\r\n      }\r\n    });\r\n  }\r\n\r\n  private sendNotification(msg, params, severity,  force = false) {\r\n    if (this.config.getConfigData(\"config.captureApp.notifications.level\") === \"verbose\" || force) {\r\n      this.notificationService.sendNotificationWithParams(msg , params, severity);\r\n    }\r\n  }\r\n\r\n  private registerForSlideCapturingNotifications()\r\n  {\r\n    ipcWrapper.registerForNotification('capture-ppt', (data: any) => {\r\n      if (!this.currentLiveEntryId)\r\n        return; // no live streaming - ignore\r\n\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (err) {\r\n        this.log.warn(\"Error while trying to upload slide to [\" + this.currentLiveEntryId + \"] with data: [\" + data + \"] got error: \" + err);\r\n      }\r\n      if (data) {\r\n        this.log.debug(\"Currently streaming to live entry of: \" + this.currentLiveEntryId);\r\n        return ipcWrapper.sendIPC(\"uploadSlide\", this.currentLiveEntryId, data['slide-path']);\r\n      }\r\n    });\r\n  }\r\n\r\n  public isInputLiveConfigured(sessionName) {\r\n    return this.appState.isAppLiveConfigured() && (this.appState.getSessionIdByName(sessionName) === this.streamingSessionId)\r\n      && this.isDevicePreviewing(sessionName);\r\n  }\r\n\r\n  private isDevicePreviewing(sessionName: string) : boolean\r\n  {\r\n    let sessionsNames = this.appState.getSessionsNames(true);\r\n    return sessionsNames.includes(sessionName);\r\n  }\r\n\r\n  public stopLiveStreaming() {\r\n    if (!this.currentLiveEntryId)\r\n      return Promise.resolve(); // currently no streaming\r\n\r\n    let sessionId = this.streamingSessionId;\r\n    this.log.debug(\"stop live streaming: for [\" + this.currentLiveEntryId + \"] and session: \" + sessionId);\r\n    this.removeLiveConfig();\r\n    this.appState.onCallStarted('stopLiveStreaming', sessionId);\r\n    return ipcWrapper.sendIPC(`${sessionId}-stopLiveStreaming`)\r\n      .then(() => {\r\n        this.appState.onCallEnded('stopLiveStreaming - SUCCESS', sessionId);\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('stopLiveStreaming - FAILURE', sessionId);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/live/live-manager.service.ts","import {NgModule} from '@angular/core';\r\nimport {InfraModule} from \"../infra/infra.module\";\r\nimport {LiveManagerService} from \"./live-manager.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    InfraModule,\r\n  ],\r\n  providers: [\r\n    LiveManagerService,\r\n  ]\r\n})\r\nexport class LiveModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/live/live.module.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport * as _ from \"lodash\";\r\nimport {utils} from '../../../utils/utils';\r\nimport {SystemHealthService} from \"../infra/system-health.service\";\r\nimport {TranslateService} from \"ng2-translate\";\r\nimport {Observable} from \"rxjs\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\n\r\nexport enum MONITOR_ERROR_TYPE {\r\n  DEVICE_ERROR = <any>'DEVICE_ERROR',\r\n  RECORDING_ERROR = <any>'RECORDING_ERROR',\r\n  SYS_HEALTH_ERROR = <any>'SYS_HEALTH_ERROR'\r\n}\r\n\r\nexport enum MONITORED_SOURCE_TYPE {\r\n  ALL = <any>'ALL', //if user wants to remove all sources errors\r\n  VIDEO = <any>'VIDEO',\r\n  SCREEN = <any>'SCREEN',\r\n  AUDIO = <any>'AUDIO',\r\n  START_RECORDING = <any>'START_RECORDING',\r\n  RESUME_RECORDING = <any>'RESUME_RECORDING',\r\n  STOP_RECORDING = <any>'STOP_RECORDING',\r\n  PAUSE_RECORDING = <any>'PAUSE_RECORDING',\r\n  CANCEL_RECORDING = <any>'CANCEL_RECORDING',\r\n  RECOVER_RECORDING = <any>'RECOVER_RECORDING',\r\n  DISKSPACE = <any>'DISKSPACE'\r\n}\r\n\r\n@Injectable()\r\nexport class AppMonitoringAgentErrorDataService {\r\n\r\n  private _ready: Promise<boolean>;\r\n\r\n  /**\r\n   * an object represents the application errors data for the monitoring agent\r\n   *  {\r\n   *      APP_STATUS: OK / ERROR,\r\n   *      DEVICE_ERROR: {\r\n   *       MONITORED_SOURCE_TYPE: {\r\n   *        text: error string,\r\n   *        time: time in millis\r\n   *       }\r\n   *       ....\r\n   *      },\r\n   *      RECORDING_ERROR: {\r\n   *        MONITORED_SOURCE_TYPE:  {\r\n   *        text: error string,\r\n   *        time: time in millis\r\n   *       }\r\n   *       ...\r\n   *      }\r\n   *      SYS_HEALTH_ERROR: {\r\n   *        MONITORED_SOURCE_TYPE:  {\r\n   *        text: error string,\r\n   *        time: time in millis\r\n   *       }\r\n   *       ...\r\n   *      }\r\n   *  }\r\n   * @type {{}}\r\n   */\r\n  private monitoringAgentErrorData = {};\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private translate: TranslateService,\r\n              private appConfig: AppConfigService,\r\n              private persistentData: AppPersistentDataService,\r\n              private systemHealthService: SystemHealthService)\r\n  {\r\n    let monitorConfig = this.appConfig.getConfigData('config.shared.monitoring');\r\n    if(monitorConfig && !_.isEmpty(monitorConfig) && monitorConfig['enabled']) {\r\n      this.ready()\r\n        .then(() => {\r\n          Observable.timer(0, 5000).subscribe(() => {\r\n            this.getMonitoringErrorData();\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  private ready() : Promise<boolean>\r\n  {\r\n    if(!this._ready) {\r\n      this._ready = this.persistentData.get('appMonitoringAgentErrorData')\r\n        .then((data) => {\r\n          if(data) {\r\n            this.monitoringAgentErrorData = data;\r\n          }\r\n          this.log.info('AppMonitoringAgentDataService: Ready()');\r\n          return Promise.resolve(true);\r\n        })\r\n        .catch((err) => {\r\n          this.log.error('AppMonitoringAgentErrorDataService: Failed to load app monitoring agent error data.' + utils.stringifyMsg(err));\r\n          this.monitoringAgentErrorData = {};\r\n          return Promise.resolve(false);\r\n        })\r\n    }\r\n    return this._ready;\r\n  }\r\n\r\n  public setError(errorType: MONITOR_ERROR_TYPE, source: MONITORED_SOURCE_TYPE, error: string, params = null)\r\n  {\r\n    Promise.all([this.ready(), this.getTranslationPromise(error, params)])\r\n      .then(([ready, errorMsg]) => {\r\n        if(_.isEmpty(this.monitoringAgentErrorData[errorType])) {\r\n          this.monitoringAgentErrorData[errorType] = {};\r\n        }\r\n\r\n        this.monitoringAgentErrorData[errorType][source] = {\r\n          'text': errorMsg,\r\n          'time': new Date().getTime()\r\n        };\r\n        this.updateAppStatusData();\r\n        this.updatePersistentData();\r\n      });\r\n  }\r\n\r\n  public clearError(errorType: MONITOR_ERROR_TYPE, source: MONITORED_SOURCE_TYPE)\r\n  {\r\n    this.ready()\r\n      .then(() => {\r\n        if(!_.isEmpty(this.monitoringAgentErrorData[errorType])) {\r\n          //remove all error type errors\r\n          if(source === MONITORED_SOURCE_TYPE.ALL) {\r\n            this.monitoringAgentErrorData[errorType] = {};\r\n            //remove specific source error if exists\r\n          } else if(this.monitoringAgentErrorData[errorType][source]) {\r\n            delete this.monitoringAgentErrorData[errorType][source];\r\n          }\r\n        }\r\n        this.updateAppStatusData();\r\n        this.updatePersistentData();\r\n      });\r\n  }\r\n\r\n  public getMonitoringErrorData()\r\n  {\r\n    return this.ready()\r\n      .then(() => {\r\n        return this.checkSysHealth();\r\n      })\r\n      .then(() => {\r\n        return this.monitoringAgentErrorData;\r\n      });\r\n  }\r\n\r\n  private checkSysHealth()\r\n  {\r\n    return this.systemHealthService.checkSystemHealth(false, true) //promise will never be rejected\r\n      .then((sysHealth) => {\r\n        if (_.isObject(sysHealth) && !_.isEmpty(sysHealth) &&\r\n          sysHealth['status'] === this.systemHealthService.HEALTH_STATUS.ERROR) {\r\n          let params = sysHealth['params'] ? sysHealth['params'] : null;\r\n          this.setError(MONITOR_ERROR_TYPE.SYS_HEALTH_ERROR, MONITORED_SOURCE_TYPE.DISKSPACE, sysHealth['message'], params);\r\n        } else {\r\n          this.clearError(MONITOR_ERROR_TYPE.SYS_HEALTH_ERROR, MONITORED_SOURCE_TYPE.DISKSPACE);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('AppMonitoringAgentErrorDataService: Failed to get sysHealth. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  private updateAppStatusData()\r\n  {\r\n    let appStatus =\r\n      _.isEmpty(this.monitoringAgentErrorData[MONITOR_ERROR_TYPE.DEVICE_ERROR]) &&\r\n      _.isEmpty(this.monitoringAgentErrorData[MONITOR_ERROR_TYPE.RECORDING_ERROR]) &&\r\n      _.isEmpty(this.monitoringAgentErrorData[MONITOR_ERROR_TYPE.SYS_HEALTH_ERROR]) ? 'OK' : 'ERROR';\r\n\r\n    this.monitoringAgentErrorData['APP_STATUS'] = appStatus;\r\n  }\r\n\r\n  private updatePersistentData()\r\n  {\r\n    let monitorConfig = this.appConfig.getConfigData('config.shared.monitoring');\r\n    if(monitorConfig && !_.isEmpty(monitorConfig) && monitorConfig['enabled']) {\r\n      this.log.info('AppMonitoringAgentErrorDataService: update monitoring agent error data in app persistent data file');\r\n      this.persistentData.set(\"appMonitoringAgentErrorData\", this.monitoringAgentErrorData);\r\n    }\r\n  }\r\n\r\n  private getTranslationPromise(msg, params = null)\r\n  {\r\n    return params ? this.translate.get(msg, params).toPromise() : this.translate.get(msg).toPromise();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/monitoring/app-monitoring-agent-error-data.service.ts","import {Injectable} from '@angular/core';\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from 'lodash';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {AppMonitoringAgentErrorDataService} from \"./app-monitoring-agent-error-data.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {KalturaApiService} from \"../infra/kaltura-api.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {ResourceIdService} from \"../resource-id/resource-id.service\";\r\n\r\nexport enum LiveInputStatus {\r\n  Not_Configured = <any>'Not_Configured',\r\n  Stopped = <any>'Stopped',\r\n  Broadcasting = <any>'Broadcasting', // app broadcasting - don't know if actually playable\r\n  Playing = <any>'Playing', // app broadcasting and live entry is playable\r\n  Error = <any>'Error'\r\n}\r\n\r\n@Injectable()\r\nexport class AppMonitoringAgentService {\r\n\r\n  /**\r\n   * an object represents the application monitoring agent data\r\n   *  {\r\n   *    Errors: {\r\n   *      APP_STATUS: OK / ERROR,\r\n   *      DEVICE_ERROR: {\r\n   *       MONITORED_SOURCE_TYPE: {\r\n   *        text: error string,\r\n   *        time: time in millis\r\n   *       }\r\n   *       ....\r\n   *      },\r\n   *      RECORDING_ERROR: {\r\n   *        MONITORED_SOURCE_TYPE:  {\r\n   *        text: error string,\r\n   *        time: time in millis\r\n   *       }\r\n   *       ...\r\n   *      }\r\n   *      SYS_HEALTH_ERROR: {\r\n   *        MONITORED_SOURCE_TYPE:  {\r\n   *        text: error string,\r\n   *        time: time in millis\r\n   *       }\r\n   *       ...\r\n   *      }\r\n   *    },\r\n   *    ResourceDetails: {\r\n   *      resourceId: resourceId\r\n   *      resourceName: resourceName,\r\n   *      appVersion: <app version>\r\n   *      activeSessions: {\r\n   *        'primary' : false,\r\n   *        'secondary': true,\r\n   *        ...\r\n   *      },\r\n   *      previewingSessions: {\r\n   *        'primary' : false,\r\n   *        'secondary': true,\r\n   *        ...\r\n   *      }\r\n   *    },\r\n   *    RecordingData: {\r\n   *      recordingPhase: recording / paused / idle\r\n   *      recordingTime: 02:00:23 / '' (if not recording)\r\n   *      isScheduledEvent: true / false\r\n   *      streamingInputObjects: {  // currently there will be only single input here (primaryInput,input2,input3,input4)\r\n   *          <session name>: {\r\n   *            templateEntryId: <templateEntryId>,\r\n   *            status: LiveInputStatus\r\n   *            duration: string (streaming duration)\r\n   *            updatedAt: timestamp\r\n   *          },\r\n   *          ...\r\n   *      }\r\n   *    },\r\n   *    Scheduling: {\r\n   *      NextScheduledEvent: {\r\n   *        id: next event id\r\n   *        summary: next event summary\r\n   *        description: next event description\r\n   *        organizer: next event organizer\r\n   *        startDate: next event startDate\r\n   *        endDate: next event endDate\r\n   *      },\r\n   *      currentScheduledEvent: {\r\n   *        id: currentEvent.id\r\n   *        summary: currentEvent.summary\r\n   *        isLiveEvent: currentEvent.primaryRtmp ? true : false\r\n   *        templateEntryId: currentEvent.templateEntryId\r\n   *      }\r\n   *    }\r\n   *  }\r\n   * @type {{}}\r\n   */\r\n  private monitoringAgentData = {};\r\n\r\n  private uploadPreviewIntervalSec = 120;\r\n  private dataReportingIntervalSec = 30;\r\n\r\n  private getImagesTimer: any = null;\r\n  private reportDataTimer: any = null;\r\n\r\n  readonly PRIMARY_SESSION_NAME_FALLBACK = 'session0';\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private config: AppConfigService,\r\n              private appState: AppStateService,\r\n              private monitoringAgentErrorData: AppMonitoringAgentErrorDataService,\r\n              private kalturaApi: KalturaApiService,\r\n              private resourceIdService: ResourceIdService,\r\n              private persistentData : AppPersistentDataService) {\r\n  }\r\n\r\n  start()\r\n  {\r\n    this.log.info('AppMonitoringAgentService: Starting app-monitoring-agent service');\r\n    this.setIntervalsValues();\r\n    this.startTimers();\r\n  }\r\n\r\n  stop()\r\n  {\r\n    this.log.info('AppMonitoringAgentService: Stopping app-monitoring-agent service');\r\n    if(this.getImagesTimer) {\r\n      this.getImagesTimer.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setIntervalsValues()\r\n  {\r\n    let monitoringConfig = this.config.getConfigData('config.shared.monitoring');\r\n    this.uploadPreviewIntervalSec = monitoringConfig['uploadPreviewIntervalSec'] || 60;\r\n    if (this.uploadPreviewIntervalSec < 60) this.uploadPreviewIntervalSec = 60;\r\n    this.log.info('AppMonitoringAgentService: Validate Config params - uploadPreviewIntervalSec is not a valid value. set to 60');\r\n    this.dataReportingIntervalSec = monitoringConfig['dataReportingIntervalSec'] || 30;\r\n    if (this.dataReportingIntervalSec < 30) this.dataReportingIntervalSec = 30;\r\n    this.log.info('AppMonitoringAgentService: Validate Config params - dataReportingIntervalSec is not a valid value. set to 30');\r\n  }\r\n\r\n  private startTimers()\r\n  {\r\n    this.getImagesTimer = Observable.timer(5000, this.uploadPreviewIntervalSec*1000)\r\n      .subscribe(() => {\r\n        this.getImagesAndUpload();\r\n      });\r\n    this.reportDataTimer = Observable.timer(5000, this.dataReportingIntervalSec*1000)\r\n      .subscribe(() => {\r\n        this.getMonitoringAgentData();\r\n      })\r\n  }\r\n\r\n\r\n  private getImagesAndUpload()\r\n  {\r\n    let sessions = this.appState.getActiveVisualSessions();\r\n    let sessionIds = _.keys(sessions);\r\n    if (sessionIds.length > 0){\r\n\r\n      let primarySession = this.config.getConfigData('config.captureApp.primarySessionName');\r\n\r\n      _.forEach(sessionIds, (sessionId) => {\r\n\r\n        let sessionIndex = parseInt(sessions[sessionId].name.split('session')[1]);\r\n        //will result previewImage_primary / previewImage_secondary / previewImage_secondary<n>\r\n        let sessionPostFix: string = (sessions[sessionId].name === primarySession) ?\r\n          'primary' : ('secondary' + (sessionIndex === 1 ? '' : (sessionIndex - 1)));\r\n\r\n        ipcWrapper.sendIPC(sessionId +'-getPreviewImage', sessionId)\r\n          .then((data): any => {\r\n            this.kalturaApi\r\n              .reportMonitoringData(this.resourceIdService.resourceId, 'previewImage_' + sessionPostFix, data, false, true)\r\n              .subscribe(\r\n                () => {\r\n                  this.log.debug('reported preview image to beacon service');\r\n                },\r\n                err => {\r\n                  this.log.debug('failed to upload beacon preview image to server ' + utils.stringifyMsg(err));\r\n                });\r\n          })\r\n          .catch((err) => {\r\n            this.log.debug('failed to get preview image from engine ' + utils.stringifyMsg(err));\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n  private getMonitoringAgentData()\r\n  {\r\n    Promise.all([this.monitoringAgentErrorData.getMonitoringErrorData(), this.setRecordingData(), this.setResourceDetails()])\r\n      .then(([errorData, recData, resDetails]) => { //recData is not to use in this method\r\n        this.monitoringAgentData['Errors'] = errorData;\r\n        this.kalturaApi.reportMonitoringData(this.resourceIdService.resourceId, 'monitoringAgentData', this.monitoringAgentData, true, false).subscribe(()=>{\r\n          this.log.debug('reported monitoringAgentData to beacon service');\r\n        });\r\n      });\r\n  }\r\n\r\n  private setRecordingData() : Promise<any>\r\n  {\r\n    let recordingPhase = this.appState.recordingPhase !== 'initial' ? this.appState.recordingPhase : 'idle';\r\n    // initial recordingData\r\n    this.monitoringAgentData['RecordingData'] = {\r\n      'recordingPhase' : recordingPhase,\r\n      'recordingTime' : '',\r\n      'streamingInputObjects': {}\r\n    };\r\n\r\n    //if there is no need to update recordingTime and live data\r\n    if(recordingPhase === 'idle') return Promise.resolve(true);\r\n\r\n    return this.persistentData.get(\"recording\")\r\n      .then((recording) => {\r\n\r\n        if(_.isEmpty(recording)) return;\r\n\r\n        this.monitoringAgentData['RecordingData']['recordingTime'] =\r\n          recording['recordingTime'] ? recording['recordingTime'] : 0;\r\n        this.updateLiveData(recording);\r\n      })\r\n      .catch((err) => {\r\n        return Promise.resolve(false); //not rejecting the promise because we would like to send monitor updates event even if app persistency will throw exception\r\n      });\r\n  }\r\n\r\n  /**\r\n   * update live data in recording data object in beacon\r\n   * @param recordingData persistent recording data\r\n   */\r\n  private updateLiveData(recordingData) {\r\n    // checking if live event\r\n    let currentScheduledEvent = !_.isEmpty(this.monitoringAgentData['Scheduling']['currentScheduledEvent'])\r\n      ? this.monitoringAgentData['Scheduling']['currentScheduledEvent']\r\n      : {};\r\n    // recording is live only during live scheduled event and the event has rtmp property\r\n    if(_.isEmpty(currentScheduledEvent) || !currentScheduledEvent.isLiveEvent) return;\r\n    // although event is live - application is not streaming live data\r\n    if(_.isEmpty(recordingData['details']) || _.isEmpty(recordingData['details']['liveData'])) return;\r\n\r\n    // live data object in persistency file\r\n    let liveData = recordingData['details']['liveData'];\r\n    // for current development phase - take the only input that streams live (first and only input in our object)\r\n    let streamingSessionName = Object.keys(liveData)[0];\r\n    let streamingSessionDisplayName = this.getLiveSessionDisplayName(streamingSessionName);\r\n    let streamingInputObjects = this.monitoringAgentData['RecordingData']['streamingInputObjects'];\r\n    // todo [david] add relevant inputs when support for multi input streaming will be developed\r\n    // set default live data properties for our only streaming input\r\n    streamingInputObjects[streamingSessionDisplayName] = {\r\n      templateEntryId: currentScheduledEvent.templateEntryId,\r\n      status: this.appState.isAppStreaming() ? LiveInputStatus.Playing : LiveInputStatus.Broadcasting,\r\n      duration: this.monitoringAgentData['RecordingData']['recordingTime'],\r\n      updatedAt: (new Date().getTime() / 1000)\r\n    };\r\n\r\n    // checking if live was actually stopped by the user\r\n\r\n    // if live streaming hasn't stopped (there won't be any duration in live data object)\r\n    // so there is nothing to update\r\n    if(_.isEmpty(liveData[streamingSessionName]) || !liveData[streamingSessionName]['duration']) return;\r\n    // primary input live streaming was stopped - update relevant live data properties\r\n    streamingInputObjects[streamingSessionDisplayName]['duration'] = liveData[streamingSessionName]['duration'];\r\n    streamingInputObjects[streamingSessionDisplayName]['updatedAt'] = liveData[streamingSessionName]['updatedAt'];\r\n    streamingInputObjects[streamingSessionDisplayName]['status'] = LiveInputStatus.Stopped;\r\n  }\r\n\r\n  private setResourceDetails()\r\n  {\r\n    return this.appState.getVisualSessionsFromPersistentData()\r\n      .then((sessions) => {\r\n        this.monitoringAgentData['ResourceDetails'] = {\r\n          'resourceId' : this.resourceIdService.resourceId,\r\n          'resourceName' : this.resourceIdService.resourceName,\r\n          'activeSessions': this.getActiveSessionsObject(sessions),\r\n          'previewingSessions': this.getPreviewEnabledSessionsObject(),\r\n          'appVersion' : this.config.getConfigData(\"config.shared\").app_version\r\n        };\r\n      })\r\n  }\r\n\r\n  private getActiveSessionsObject(sessions)\r\n  {\r\n    let activeSessions = {};\r\n    let primarySession = this.config.getConfigData('config.captureApp.primarySessionName');\r\n    _.each(_.keys(sessions), (sessionName: any)=> {\r\n      let sessionIndex = parseInt(sessionName.split('session')[1]);\r\n      let sessionOrder: string = sessionName === primarySession ?\r\n        'primary' : ('secondary' + (sessionIndex === 1 ? '' : (sessionIndex - 1)));\r\n      activeSessions[sessionOrder] = true;\r\n    });\r\n    return activeSessions;\r\n  }\r\n\r\n  private getPreviewEnabledSessionsObject()\r\n  {\r\n    let enabledSessions = {};\r\n    let primarySession = this.config.getConfigData('config.captureApp.primarySessionName');\r\n    _.each(this.appState.getActiveVisualSessions(), (s: any)=> {\r\n      let sessionIndex = parseInt(s.name.split('session')[1]);\r\n      let sessionOrder: string = s.name === primarySession ?\r\n        'primary' : ('secondary' + (sessionIndex === 1 ? '' : (sessionIndex - 1)));\r\n      enabledSessions[sessionOrder] = true;\r\n    });\r\n    return enabledSessions;\r\n  }\r\n\r\n  public setSchedulingDataNextEvent(nextEvent) : void\r\n  {\r\n    if(!this.shouldPopulateScheduledEvent('NextScheduledEvent', nextEvent)) return;\r\n\r\n    this.monitoringAgentData['Scheduling']['NextScheduledEvent'] = {\r\n      id: nextEvent.id,\r\n      summary: nextEvent.summary,\r\n      description: nextEvent.description,\r\n      organizer: nextEvent.organizer,\r\n      startDate: nextEvent.startDate,\r\n      endDate: nextEvent.endDate\r\n    }\r\n  }\r\n\r\n  public setSchedulingDataCurrentEvent(currentEvent) : void\r\n  {\r\n    if(!this.shouldPopulateScheduledEvent('currentScheduledEvent', currentEvent)) return;\r\n\r\n    this.monitoringAgentData['Scheduling']['currentScheduledEvent'] = {\r\n      id: currentEvent.id,\r\n      summary: currentEvent.summary,\r\n      isLiveEvent: currentEvent.primaryRtmp ? true : false,\r\n      templateEntryId: currentEvent.templateEntryId\r\n    }\r\n  }\r\n\r\n  private shouldPopulateScheduledEvent(eventType, event): boolean\r\n  {\r\n    if(_.isEmpty(this.monitoringAgentData['Scheduling']))\r\n      this.monitoringAgentData['Scheduling'] = {};\r\n\r\n    if(_.isEmpty(event)) {\r\n      this.monitoringAgentData['Scheduling'][eventType] = {};\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private getLiveSessionDisplayName(sessionName)\r\n  {\r\n    let primarySessionName = this.config.getConfigData('config.captureApp.primarySessionName') ?\r\n      this.config.getConfigData('config.captureApp.primarySessionName') : this.PRIMARY_SESSION_NAME_FALLBACK;\r\n\r\n    if(sessionName === primarySessionName) {\r\n      return 'primaryInput';\r\n    } else {\r\n      let sessionIndex = parseInt(sessionName.split('session')[1]);\r\n      return 'input' + ++sessionIndex;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/monitoring/app-monitoring-agent.service.ts","import {NgModule} from '@angular/core';\r\nimport {InfraModule} from \"../infra/infra.module\";\r\nimport {ResourceIdModule} from \"../resource-id/resource-id.module\";\r\nimport {AppMonitoringAgentService} from \"./app-monitoring-agent.service\";\r\nimport {AppMonitoringAgentErrorDataService} from \"./app-monitoring-agent-error-data.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    InfraModule,\r\n    ResourceIdModule\r\n  ],\r\n  providers: [\r\n    AppMonitoringAgentService,\r\n    AppMonitoringAgentErrorDataService\r\n  ]\r\n})\r\nexport class MonitoringModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/monitoring/monitoring.module.ts","import {Injectable} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from \"lodash\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {VideoDeviceSettingsService} from \"../capture-device/video-device-settings.service\";\r\n\r\n@Injectable()\r\nexport class MouseClickIndicationService {\r\n\r\n  constructor(private appConfig: AppConfigService,\r\n              private videoDeviceSettingsService: VideoDeviceSettingsService,\r\n              private log: AppLoggerService) {}\r\n\r\n  public startMouseClickIndication()\r\n  {\r\n    if(this.appConfig.getConfigData('config.captureApp.recording.mouseClickIndication') === true) {\r\n      let displaysBounds = [];\r\n      _.forEach(this.videoDeviceSettingsService.getAllActiveDevicesObjects(), device => {\r\n        if(device['bounds']) displaysBounds.push(device['bounds']);\r\n      });\r\n      if(_.isEmpty(displaysBounds)) {\r\n        this.log.info('there are no screens for current recording, mouse click indication is not needed');\r\n        return Promise.resolve({});\r\n      } else {\r\n        return ipcWrapper.sendIPC('create-mouse-click-indication-windows', displaysBounds);\r\n      }\r\n    } else {\r\n      this.log.info('There is no need in mouse click indication for current recording');\r\n      return Promise.resolve({});\r\n    }\r\n  }\r\n\r\n  public stopMouseClickIndication(){\r\n    return ipcWrapper.sendIPC('destroy-mouse-click-indication-windows');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/mouse-click-indication.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport * as _ from \"lodash\"\r\nimport * as moment from 'moment';\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {KalturaApiService} from \"../infra/kaltura-api.service\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {VideoDeviceSettingsService} from \"../capture-device/video-device-settings.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {AuthenticationService} from \"../infra/authentication.service\";\r\nimport {SystemDataService} from \"../infra/system-data.service\";\r\n\r\n@Injectable()\r\nexport class RecordingDetailsService {\r\n\r\n  /**\r\n   * indicates if recording details is read only or not (f.e. scheduled event will be read only)\r\n   * @type {boolean}\r\n   */\r\n  private readOnly = false;\r\n  /**\r\n   * templateEntryId: string\r\n   * liveStreamed: bool\r\n   * title: string\r\n   * description: string\r\n   * userName: string\r\n   * tags; array\r\n   * videoFile: string\r\n   * screenFile: string\r\n   * @type {{}}\r\n   */\r\n  private recordingDetailsObject = {};\r\n  /**\r\n   * users ids list subscription\r\n   * @type {any}\r\n   */\r\n  private userListSubscription$ = null;\r\n  /**\r\n   * indicates if it is possible to validate user name using api call\r\n   * @type {boolean}\r\n   */\r\n  private userListIsOffline = false;\r\n  /**\r\n   * current filtered users ids list\r\n   * @type {Array}\r\n   */\r\n  userList: any[] = null;\r\n  /**\r\n   * Current cuePoint index\r\n   * @type {number}\r\n   */\r\n  private currentCuePointIndex = 1;\r\n  /**\r\n   * indicates where recording detials service is ready\r\n   * @type {any}\r\n   */\r\n  isReady:Promise<void> = null;\r\n\r\n  constructor(private appConfig: AppConfigService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private log: AppLoggerService,\r\n              private kaltura: KalturaApiService,\r\n              private appState: AppStateService,\r\n              private systemData: SystemDataService,\r\n              private authService: AuthenticationService,\r\n              private videoDeviceSettingsService: VideoDeviceSettingsService)\r\n  {\r\n    this.isReady = this.loadInitialRecordingDetails();\r\n  }\r\n\r\n  /**\r\n   * loading initial rec details from persistent data\r\n   */\r\n  private loadInitialRecordingDetails()\r\n  {\r\n    return this.persistencyService.get('recording.details')\r\n      .then((details) => {\r\n        if(details) {\r\n          return this.setRecordingDetails(details);\r\n        } else {\r\n          return Promise.resolve();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        return Promise.reject(err);\r\n      })\r\n  }\r\n\r\n  getRecordingDetails()\r\n  {\r\n    return this.recordingDetailsObject;\r\n  }\r\n\r\n   get currentSlideIndex() : Number {\r\n     return _.size(this.recordingDetailsObject['slides']) + 1\r\n  }\r\n\r\n  setRecordingDetails(newRecordingDetails, reset = true)\r\n  {\r\n    this.setField(newRecordingDetails, 'title', reset, '');\r\n    this.setField(newRecordingDetails, 'description', reset, '');\r\n    this.setField(newRecordingDetails, 'userName', reset,'');\r\n    this.setField(newRecordingDetails, 'tags', reset,[]);\r\n    this.setField(newRecordingDetails, 'templateEntryId', false, '');\r\n    this.setField(newRecordingDetails, 'liveStreamed', false, '');\r\n    this.setField(newRecordingDetails, 'currentCuePointIndex', reset,1);\r\n    this.setField(newRecordingDetails, 'slides', reset,{});\r\n    this.setField(newRecordingDetails, 'annotationCuePoints', reset,{});\r\n    this.setField(newRecordingDetails, 'eventId', reset, '', true);\r\n\r\n    //if in authentication mode but not in a scheduled event recording\r\n    if(this.shouldSetAuthenticatedUserData()) {\r\n      this.recordingDetailsObject['appToken']   = newRecordingDetails['appToken'];\r\n      this.recordingDetailsObject['appTokenId'] = newRecordingDetails['appTokenId'];\r\n      this.recordingDetailsObject['hashType']   = newRecordingDetails['hashType'];\r\n      this.recordingDetailsObject['partnerId']  = newRecordingDetails['partnerId'];\r\n      this.recordingDetailsObject['serviceUrl'] = newRecordingDetails['serviceUrl'];\r\n    }\r\n    return this.saveToPersistentData();\r\n  }\r\n\r\n  private setField(newRecordingDetails, fieldName, resetValue, defaultValue, force = false) {\r\n    if (newRecordingDetails[fieldName] || force) {\r\n      this.recordingDetailsObject[fieldName] = newRecordingDetails[fieldName];\r\n    } else if (resetValue) {\r\n      this.recordingDetailsObject[fieldName] = defaultValue;\r\n    }\r\n  }\r\n\r\n  setRecordedFilePath(sessionName, filePath) {\r\n    if(_.isEmpty(this.recordingDetailsObject['files'])) {\r\n      this.recordingDetailsObject['files'] = {};\r\n    }\r\n    this.recordingDetailsObject['files'][sessionName] = filePath;\r\n    this.saveToPersistentData();\r\n  }\r\n\r\n  setRecordingLiveData(sessionName, liveData) {\r\n    if(_.isEmpty(this.recordingDetailsObject['liveData'])) {\r\n      this.recordingDetailsObject['liveData'] = {};\r\n    }\r\n    this.recordingDetailsObject['liveData'][sessionName] = liveData;\r\n    this.saveToPersistentData();\r\n  }\r\n\r\n  setDefaultRecDetails()\r\n  {\r\n    let config = this.appConfig.getConfigData('config.captureApp');\r\n    this.recordingDetailsObject['title'] = _.isEmpty(this.recordingDetailsObject['title']) ?\r\n    config['defaultRecordingName'] + ' - ' + moment().locale(this.systemData.getLang()).format('MMMM Do YYYY, h:mm:ss a') : this.recordingDetailsObject['title'];\r\n    this.recordingDetailsObject['recordingStartTime'] = moment().valueOf();\r\n    this.setAuthenticatedUserDetails();\r\n    this.setRecordingType();\r\n  }\r\n\r\n  /**\r\n   * mark this recording as audioOnly or not...\r\n   */\r\n  setRecordingType()\r\n  {\r\n    this.recordingDetailsObject['isAudioOnly'] =\r\n      this.appConfig.getConfigData('config.captureApp.audioOnlyRecording') && // check if audioOnly enabled\r\n      _.keys(this.appState.getActiveSessions()).length === 1 && !_.isEmpty(this.appState.getActiveAudioSession()); //there is only one session to record and it is an audio\r\n\r\n    this.saveToPersistentData();\r\n  }\r\n\r\n  addSlideCapturedFilePath(slideObject)\r\n  {\r\n    this.isReady //waiting for app persistency to load in order to determin current slide index\r\n      .then(() => {\r\n        if(_.isEmpty(this.recordingDetailsObject['slides'])) {\r\n          this.recordingDetailsObject['slides'] = {};\r\n        }\r\n        this.recordingDetailsObject['slides']['slide' + this.currentSlideIndex] = {\r\n          offset: slideObject['timestamp'],\r\n          filePath: slideObject['slide-path'],\r\n          title: this.removeInvalidXmlChars(slideObject['title']),\r\n          description: this.removeInvalidXmlChars(slideObject['description']),\r\n          status: 'pending'\r\n        };\r\n        this.saveToPersistentData();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to add slide to persistent data. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  addAnnotationCuePoint(cuePointObject)\r\n  {\r\n    this.isReady //waiting for app persistency to load in order to determin current slide index\r\n      .then(() => {\r\n        if(_.isEmpty(this.recordingDetailsObject['annotationCuePoints'])) {\r\n          this.recordingDetailsObject['annotationCuePoints'] = {};\r\n        }\r\n        let offset = moment(cuePointObject['timestamp']).diff(moment(this.recordingDetailsObject['recordingStartTime']));\r\n        offset = offset && offset > 0 ? offset : 0;\r\n        this.recordingDetailsObject['annotationCuePoints']['cuePoint' + this.currentCuePointIndex] = {\r\n          offset: offset,\r\n          title: this.removeInvalidXmlChars(cuePointObject['text']),\r\n          status: 'pending'\r\n        };\r\n        this.recordingDetailsObject['currentCuePointIndex'] = ++this.currentCuePointIndex;\r\n        this.saveToPersistentData();\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to add slide to persistent data. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  resetRecordingDetails()\r\n  {\r\n    this.log.info('resetting current recording details');\r\n    this.recordingDetailsObject = {};\r\n    this.currentCuePointIndex = 1;\r\n    this.readOnly = false;\r\n    return this.saveToPersistentData(true);\r\n  }\r\n\r\n  setReadOnly(readOnly)\r\n  {\r\n    this.readOnly = readOnly;\r\n  }\r\n\r\n  isReadOnly()\r\n  {\r\n    return this.readOnly;\r\n  }\r\n\r\n  saveRecordingDetailsJson()\r\n  {\r\n    let config = this.appConfig.getConfigData('config');\r\n\r\n    return this.getRecordingProperties(config)\r\n      .then(recordingProperties => {\r\n        let recJson = {};\r\n        let isPc = config['shared']['appType'].toLowerCase() === 'pc';\r\n        recJson = _.merge(recJson, recordingProperties, this.getUserDependentProperties(isPc, config));\r\n        this.addRecordedFilesToJson(recJson);\r\n        return Promise.all([ipcWrapper.sendIPC('saveRecJson', recJson), recJson]);\r\n      });\r\n  }\r\n\r\n  filterUserList(queryString)\r\n  {\r\n    if(queryString)\r\n    {\r\n      // abort previous request\r\n      if (this.userListSubscription$)\r\n      {\r\n        this.userListSubscription$.unsubscribe();\r\n        this.userListSubscription$ = null;\r\n        this.userList = null;\r\n      }\r\n\r\n      if (queryString.length >= 3){\r\n        this.log.info('filtering users: ' + queryString);\r\n\r\n        this.userListSubscription$ = this.kaltura.listUsers(queryString)\r\n          .subscribe(\r\n            res => {\r\n              this.userListSubscription$ = null;\r\n              this.userListIsOffline = false;\r\n              let users = [];\r\n              _.forEach(res, function (user) {\r\n                users.push({id: user.id, fullName: user.fullName, email: user.email});\r\n              });\r\n              this.userList = users;\r\n            },\r\n            err => {\r\n              this.userListSubscription$ = null;\r\n              this.userListIsOffline = true;\r\n            });\r\n      }\r\n      else{\r\n        this.userList = [];\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  isUserNameValid(selectedUser)\r\n  {\r\n    let userName = _.isObject(selectedUser) ? selectedUser['id'] : selectedUser;\r\n    let filterdUsers = _.filter(this.userList, { 'id': userName });\r\n    let isValid =  this.isUserListOffline() ||  // dont show error when offline -> valid\r\n      (userName && userName.length < 3) ||  // dont show eror when < 3\r\n      userName === \"\" ||                    // dont show eror when empty text\r\n      filterdUsers.length > 0 ||            // user found -> valid\r\n      userName === this.recordingDetailsObject['userName'] ||\r\n      this.userList === null;               // if null then we are before the request -> don't show error\r\n\r\n    return isValid;\r\n  }\r\n\r\n  isUserNameValidForSave(selectedUser)\r\n  {\r\n    let userName = _.isObject(selectedUser) ? selectedUser['id'] : selectedUser;\r\n    return this.isUserNameValid(userName) && (userName && userName.length >= 3) || _.isEmpty(userName);\r\n  }\r\n\r\n  isUserNameDisabled()\r\n  {\r\n    return this.isReadOnly() || this.isAuthEnabled();\r\n  }\r\n\r\n\r\n  isUserListOffline()\r\n  {\r\n    return this.userListIsOffline;\r\n  }\r\n\r\n  isAuthEnabled()\r\n  {\r\n    return AuthenticationService.isAuthenticationEnabled;\r\n  }\r\n\r\n  getAuthenticatedUserName()\r\n  {\r\n    return this.authService.getLoggedInUserId();\r\n  }\r\n\r\n  private addRecordedFilesToJson(recJson)\r\n  {\r\n    //if there are no files in our object - we have nothing to do\r\n    if(_.isEmpty(this.recordingDetailsObject['files'])){\r\n      this.log.info('RecordingDetailsService Error: there are no files in recordingDetails object');\r\n      return;\r\n    }\r\n    //gets the default primary session name as configured in our app configuration or the next input in line (if primary is disabled f.e)\r\n    let primaryFileSessionName = this.getPrimaryRecordedSessionName();\r\n    //set primary video file in recording json\r\n    if(!_.isEmpty(this.recordingDetailsObject['files'][primaryFileSessionName])) {\r\n      recJson['primaryMediaFile'] = this.recordingDetailsObject['files'][primaryFileSessionName];\r\n    }\r\n    //set all secondary sessions\r\n    let secondaryMediaIndex = 0;\r\n    _.forEach(_.keys(this.recordingDetailsObject['files']), (sessionName) => {\r\n      if(sessionName !== primaryFileSessionName) {\r\n        let mediaFileKey = secondaryMediaIndex === 0 ? 'secondaryMediaFile' : ('secondaryMediaFile' + secondaryMediaIndex);\r\n        recJson[mediaFileKey] = this.recordingDetailsObject['files'][sessionName];\r\n        secondaryMediaIndex++;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getPrimaryRecordedSessionName()\r\n  {\r\n    let primarySessionName = this.appConfig.getConfigData('config.captureApp.primarySessionName');\r\n    let recordedSessionsNames = utils.sortInputsNames(_.keys(this.recordingDetailsObject['files']));\r\n    //return default primarySession name and if doesn't exist - use the first enabled input name\r\n    return recordedSessionsNames.includes(primarySessionName) ? primarySessionName : recordedSessionsNames[0];\r\n  }\r\n\r\n  private saveToPersistentData(reset = false)\r\n  {\r\n    let that = this;\r\n    return that.persistencyService.get('recording.details')\r\n      .then((data) => {\r\n        if(!reset) {\r\n          that.recordingDetailsObject = _.extend(data, that.recordingDetailsObject);\r\n        }\r\n        return that.persistencyService.set('recording.details', that.recordingDetailsObject);\r\n      })\r\n      .catch((err) => {\r\n        that.log.error('Error. Failed to load and set persistent data. ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  public onAutoCompleteUserChange(text){\r\n    if (text && text.length >= 3) {\r\n      this.userList = null;\r\n    }\r\n  }\r\n\r\n  private getRecordingProperties(config)\r\n  {\r\n    let recDetails = {};\r\n\r\n    recDetails['summary'] = this.recordingDetailsObject['title'] ? this.recordingDetailsObject['title'] : config['captureApp']['defaultRecordingName'];\r\n    recDetails['description'] = this.recordingDetailsObject['description'];\r\n    recDetails['tags'] = this.recordingDetailsObject['tags'] ? _.join(this.recordingDetailsObject['tags']) : '';\r\n    recDetails['recordingStartTime'] = this.recordingDetailsObject['recordingStartTime'];\r\n    if(!_.isEmpty(this.recordingDetailsObject['templateEntryId'])) {\r\n      recDetails['templateEntryId'] = this.recordingDetailsObject['templateEntryId'];\r\n    }\r\n    if (_.has(this.recordingDetailsObject, 'liveStreamed')) {\r\n      recDetails['liveStreamed'] = this.recordingDetailsObject['liveStreamed'];\r\n    }\r\n    if(!_.isEmpty(this.recordingDetailsObject['slides'])) {\r\n      recDetails['slides'] = this.recordingDetailsObject['slides'];\r\n    }\r\n    if(!_.isEmpty(this.recordingDetailsObject['annotationCuePoints'])) {\r\n      recDetails['annotationCuePoints'] = this.recordingDetailsObject['annotationCuePoints'];\r\n    }\r\n    recDetails['isAudioOnly'] = this.recordingDetailsObject['isAudioOnly'];\r\n    recDetails['uploadStatus'] = config['captureApp']['manualUpload'] ? 'manual' : 'auto';\r\n    let filesObject = this.recordingDetailsObject['files'];\r\n    return ipcWrapper.sendIPC('getDurationFromFile', filesObject[Object.keys(filesObject)[0]]) //getting one of the recorded files name\r\n      .then(duration => {\r\n        recDetails['durationSec'] = duration;\r\n        return recDetails;\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to get duration from the engine. ' + utils.stringifyMsg(err));\r\n        recDetails['durationSec'] = 0;\r\n        return Promise.resolve(recDetails);\r\n      });\r\n  }\r\n\r\n  private getUserDependentProperties(isPc, config)\r\n  {\r\n    let userDetails = {};\r\n    if(this.shouldSetAuthenticatedUserData() && !isPc) {\r\n      userDetails['partnerId'] = this.recordingDetailsObject['partnerId'];\r\n      userDetails['ownerId']   = this.recordingDetailsObject['userName'];\r\n      userDetails['appToken']  = this.recordingDetailsObject['appToken'];\r\n      userDetails['appTokenId']= this.recordingDetailsObject['appTokenId'];\r\n      userDetails['serviceUrl']= this.recordingDetailsObject['serviceUrl'];\r\n      userDetails['hashType']  = this.recordingDetailsObject['hashType']\r\n    } else {\r\n      userDetails['partnerId'] = isPc ? config['shared']['externalSettings']['partnerId'] : config['shared']['partnerId'];\r\n      userDetails['ownerId'] = isPc ?  config['shared']['externalSettings']['userId'] :\r\n        (this.recordingDetailsObject['userName'] ? this.recordingDetailsObject['userName'] : config['captureApp']['userId']);\r\n      if(isPc) {\r\n        userDetails['appToken'] = config['shared']['externalSettings']['appToken'];\r\n        userDetails['appTokenId'] = config['shared']['externalSettings']['appTokenId'];\r\n        userDetails['serviceUrl'] = config['shared']['externalSettings']['serviceUrl'];\r\n        userDetails['hashType'] = config['shared']['externalSettings']['hashType'];\r\n      }\r\n    }\r\n    return userDetails;\r\n  }\r\n\r\n  private setAuthenticatedUserDetails()\r\n  {\r\n    //if in authentication mode but not in a scheduled event recording\r\n    if(this.shouldSetAuthenticatedUserData()) {\r\n      this.recordingDetailsObject['appToken']   = this.appConfig.getConfigData('config.shared.externalSettings.appToken');\r\n      this.recordingDetailsObject['appTokenId'] = this.appConfig.getConfigData('config.shared.externalSettings.appTokenId');\r\n      this.recordingDetailsObject['hashType']   = this.appConfig.getConfigData('config.shared.externalSettings.hashType');\r\n      this.recordingDetailsObject['partnerId']  = this.appConfig.getConfigData('config.shared.externalSettings.partnerId');\r\n      this.recordingDetailsObject['serviceUrl'] = this.appConfig.getConfigData('config.shared.externalSettings.serviceUrl');\r\n      this.recordingDetailsObject['userName']   = this.appConfig.getConfigData('config.shared.externalSettings.userId');\r\n    }\r\n  }\r\n\r\n  static makeVideoInputInfo(inputType){\r\n    return ['ar','width','height','interlaceMode','fps','colorspace'].reduce((ret,cur)=>{\r\n      ret[cur] = inputType[cur]\r\n      return ret\r\n    },{})\r\n  }\r\n\r\n  getMetaData(sessionId) {\r\n    return Promise.all([this.persistencyService.get(''), ipcWrapper.sendIPC('getOsData')])\r\n      .then(([persistentData, osInfo]) => {\r\n\r\n        let metadata = {};\r\n\r\n        if (!_.isEmpty(persistentData) && sessionId) {\r\n\r\n          const sessions = this.appState.getActiveSessions();\r\n          const session = sessions[sessionId];\r\n          const sessionName = session ? session['name']: null;\r\n\r\n          let videoEncoders = 'unavailable';\r\n          let selectedVideoEncoderId = 'unavailable';\r\n          let selectedVideoEncoder = 'unavailable';\r\n          let videoInputTypeInfo : any = 'unavailable';\r\n          let audioInputTypeInfo = 'unavailable';\r\n\r\n          if (sessionName === 'audio'){\r\n            const audioInputType = persistentData['audio'] ? persistentData['audio']['input_type_id'] : null;\r\n            if (audioInputType){\r\n              audioInputTypeInfo = `${audioInputType['channels']}, ${audioInputType['bitsPerSample']} Bit, ${audioInputType['samplesPerSec']}Hz ${audioInputType['subtype']}`;\r\n            }\r\n          } else {\r\n            // Encoder Info\r\n            videoEncoders = this.videoDeviceSettingsService.getDeviceEncoders(sessionName);\r\n            selectedVideoEncoderId = this.videoDeviceSettingsService.getSelectedEncoder(sessionName);\r\n            selectedVideoEncoder = _.find(videoEncoders, (encoder) => {\r\n              return encoder['encoder_id'] === selectedVideoEncoderId;\r\n            });\r\n\r\n            // Input type for screen\r\n            const screenInputType = persistentData[sessionName] ? persistentData[sessionName]['input_type_id']: null;\r\n            if(screenInputType){\r\n              videoInputTypeInfo = RecordingDetailsService.makeVideoInputInfo(screenInputType)\r\n            }\r\n          }\r\n\r\n          // config: for partnerId, userId\r\n          const recDetails = this.getRecordingDetails();\r\n          const config = this.appConfig.getConfigData(\"config\");\r\n\r\n          const recordingTime = persistentData['recording'] ? persistentData['recording']['recordingTime'] : '';\r\n\r\n          metadata = {\r\n            appVersion: config['shared']['app_version'],\r\n            appType: config['shared']['appType'],\r\n            resourceId: config['shared']['resourceId'],\r\n            partnerId: config['shared']['partnerId'],\r\n            userId: config['captureApp']['userId'],\r\n            isScheduledEvent: recDetails ? (recDetails['eventId'] ? true : false) : '',\r\n            scheduledEventId: recDetails ? recDetails['eventId']: '',\r\n            videoInputTypeInfo: videoInputTypeInfo,\r\n            audioInputTypeInfo: audioInputTypeInfo,\r\n            videoEncoder: selectedVideoEncoder ? selectedVideoEncoder['friendly_name']: '',\r\n            recordingTime: recordingTime\r\n          };\r\n\r\n        }\r\n        if (!_.isEmpty(osInfo)){\r\n          metadata['os'] = `${osInfo['platform']}, osVersion: ${osInfo['osVersion']}`;\r\n        }\r\n\r\n        return [metadata];\r\n      });\r\n  }\r\n\r\n  private removeInvalidXmlChars(str)\r\n  {\r\n    let NOT_SAFE_IN_XML_1_0 = /[^\\x09\\x0A\\x0D\\x20-\\xFF\\x85\\xA0-\\uD7FF\\uE000-\\uFDCF\\uFDE0-\\uFFFD]/gm;\r\n    return str.replace(NOT_SAFE_IN_XML_1_0, ' ');\r\n  }\r\n\r\n  private shouldSetAuthenticatedUserData()\r\n  {\r\n    return AuthenticationService.isAuthenticationEnabled && !this.recordingDetailsObject['eventId'];\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording-details.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport * as _ from \"lodash\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport {DeviceRecoveryService} from \"../capture-device/device-recovery.service\";\r\n\r\n@Injectable()\r\nexport class RecordingRecoveryService {\r\n\r\n  constructor(private log: AppLoggerService,\r\n              private persistencyService: AppPersistentDataService,\r\n              private deviceRecoveryService: DeviceRecoveryService)\r\n  {\r\n  }\r\n\r\n  /**\r\n   * return a persistent recording data if there is one. null if not.\r\n   * checking for existing recorded files\r\n   */\r\n  shouldRecoverRecordingSession()\r\n  {\r\n    return this.persistencyService.get('recording')\r\n      .then((recData) => {\r\n        if(!_.isEmpty(recData) && !_.isEmpty(recData['details']) && !_.isEmpty(recData['details']['files'])) {\r\n          return recData;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to read recovery persistent data. ' + utils.stringifyMsg(err));\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  canRecoverRecordingSession(): any\r\n  {\r\n    this.log.info('canRecoverRecordingSession()');\r\n    let canRecover = true;\r\n    return this.persistencyService.get('recording.details')\r\n      .then((details) => {\r\n        _.forEach(this.deviceRecoveryService.recoverySessions, function (sessionObj) {\r\n          canRecover = canRecover && (_.isEmpty(details['files'][sessionObj['name']]) || sessionObj['recoveryReady']);\r\n        });\r\n        return canRecover;\r\n      })\r\n      .catch((err) => {\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * at the moment just checks for disconnection or not\r\n   * @return {string}\r\n   */\r\n  getRecoveryFailureReason(): string\r\n  {\r\n    if(_.isEmpty(this.deviceRecoveryService.recoverySessions)) {\r\n      return this.deviceRecoveryService.DEVICE_STATE.NONE;\r\n    } else {\r\n      let failureReason = this.deviceRecoveryService.DEVICE_STATE.FAILED;\r\n      _.forEach(this.deviceRecoveryService.recoverySessions, (obj) => {\r\n        if(obj && !_.isEmpty(obj['reason']) &&\r\n          (obj['reason'] === this.deviceRecoveryService.DEVICE_STATE.DISCONNECTED || obj['reason'] === 'AUDIO-' + this.deviceRecoveryService.DEVICE_STATE.DISCONNECTED ||\r\n          obj['reason'] === 'NO_VIDEO_DEVICES' || obj['reason'] === 'NO_SCREEN_DEVICES' || obj['reason'] === 'NO_AUDIO_DEVICES')) {\r\n          failureReason = this.deviceRecoveryService.DEVICE_STATE.DISCONNECTED;\r\n        }\r\n      });\r\n      return failureReason;\r\n    }\r\n  }\r\n\r\n  resetRecoverySessions()\r\n  {\r\n    this.deviceRecoveryService.resetRecoverySessions();\r\n  }\r\n\r\n  getRecoverySessionsReadyPromise()\r\n  {\r\n    return this.deviceRecoveryService.recoverySessionsReadyPromise;\r\n  }\r\n\r\n  getRecoveryDisconnectionState()\r\n  {\r\n    return this.deviceRecoveryService.DEVICE_STATE.DISCONNECTED;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording-recovery.service.ts","import {Injectable} from \"@angular/core\";\r\nimport {utils} from \"../../../utils/utils\";\r\nimport * as _ from \"lodash\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport {AppPersistentDataService} from \"../infra/app-persistent-data.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {RecordingDetailsService} from \"./recording-details.service\";\r\nimport {AudioDeviceSettingsService} from \"../capture-device/audio-device-settings.service\";\r\nimport {VideoDeviceService} from \"../capture-device/video-device.service\";\r\n\r\n\r\n\r\nexport type engineFileObject = {\r\n  id: string,\r\n  path: string,\r\n  slides?:string,\r\n  state?:string,\r\n  type?:string\r\n}\r\n\r\n@Injectable()\r\nexport class RecordingUtilsService {\r\n\r\n  //mp4 files suffix\r\n  readonly metadataFileSuffix = \".metadata\";\r\n  readonly mediatypesFileSuffix = \".mediatypes\";\r\n\r\n  constructor(\r\n    private log: AppLoggerService,\r\n    private persistencyService: AppPersistentDataService,\r\n    private appState: AppStateService,\r\n    private recordingDetailsService: RecordingDetailsService,\r\n    private videoDeviceService: VideoDeviceService,\r\n    private audioSettingsService: AudioDeviceSettingsService){}\r\n\r\n  public getRecordingFilesForDeletion(filesFromEngine: engineFileObject[] = [])\r\n  {\r\n    let filesToDelete = [];\r\n    _.forEach(filesFromEngine, (file) => {\r\n      if(file) {\r\n        filesToDelete.push(file.path);\r\n        if (file.slides) {\r\n          filesToDelete.push(file.slides);\r\n        }\r\n      }\r\n    });\r\n    // check that files for deletion got from the engine equals to the files we have in our persistent data\r\n    // (inactive sessions files won't return from the engine)\r\n    return this.getFilesToDeletionFromPersistency(filesToDelete);\r\n\r\n  }\r\n\r\n  public removeRecordedFiles(files)\r\n  {\r\n    this.log.info('removing recorded files: ' + JSON.stringify(files));\r\n    return ipcWrapper.sendIPC('removeFiles', files)\r\n      .catch((err) => {\r\n        this.log.error('failed to remove recorded files: ' + JSON.stringify(files) + '. Error: ' + utils.stringifyMsg(err));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Using this function during cancel recording flow. since we don't know if the engine will return all relevant files\r\n   * for deletion (disconnection for example) we are adding relevant files from our persistency file.\r\n   * @param filesToDelete\r\n   */\r\n  private getFilesToDeletionFromPersistency(filesToDelete)\r\n  {\r\n    return this.persistencyService.get('recording.details.files')\r\n      .then((files) => {\r\n        let slidesFoldersPromises = [];\r\n        if(files && !_.isEmpty(files)) {\r\n          _.forEach(files, mp4File => {\r\n            filesToDelete.push(mp4File);\r\n            filesToDelete.push(mp4File + this.mediatypesFileSuffix);\r\n            filesToDelete.push(mp4File + this.metadataFileSuffix);\r\n            //in case there are some slides related to this session - remove them\r\n            slidesFoldersPromises.push(this.getRecordingFileRelatedSlidesDir(mp4File.replace(/^.*[\\\\\\/]/, '')));\r\n          });\r\n        }\r\n        return Promise.all(slidesFoldersPromises);\r\n      })\r\n      .then((slidesFolders) => {\r\n        _.forEach(slidesFolders, slideFolder => {\r\n          filesToDelete.push(slideFolder);\r\n        });\r\n        return _.uniq(filesToDelete);\r\n      })\r\n      .catch((err) => {\r\n        this.log.error('Failed to get recording files from our persistency file: ' + utils.stringifyMsg(err));\r\n        return filesToDelete;\r\n      });\r\n  }\r\n\r\n  private getRecordingFileRelatedSlidesDir(mp4File)\r\n  {\r\n    let slideDirName = mp4File.substr(0, mp4File.lastIndexOf('.'));\r\n    return ipcWrapper.sendIPC('getSlidesFolderForCaptureFileName', slideDirName);\r\n  }\r\n\r\n  public isProcessing()\r\n  { //will be ready only if all main sessions devices are in stable state\r\n    let sessionsIds = _.keys(this.appState.getActiveSessions());\r\n    let stable = true;\r\n    _.forEach(sessionsIds,  (sessionId) => {\r\n      stable = stable && this.appState.isSourceStable(sessionId, true);\r\n    });\r\n    return !stable;\r\n  }\r\n\r\n  public updateRecState(state)\r\n  {\r\n    this.log.info('update recording state to: ' + state);\r\n    this.appState.updateAppState('rec-state', state);\r\n  }\r\n\r\n  public getSessionActionArgs(action, sessionId?): any\r\n  {\r\n    if (action === 'stopRecord' || action === 'recoverMP4File'){\r\n      return this.recordingDetailsService.getMetaData(sessionId);\r\n    }\r\n    return Promise.resolve(); //no prams is needed\r\n  }\r\n\r\n  public finalizeRecordingFileOffCycle(files)\r\n  {\r\n    this.log.info('finalizeRecordingFileOffCycle()');\r\n    let strAction;\r\n    return this.getSessionActionArgs('recoverMP4File')\r\n      .then((recordingActionArgs) => {\r\n        let finalizeCalls = [];\r\n        _.forEach(files, function (file) {\r\n          finalizeCalls.push(ipcWrapper.sendIPC('recoverMP4File', file, ...recordingActionArgs));\r\n        });\r\n        strAction = JSON.stringify(this.appState.getActiveRecordableSessionsIds());\r\n        this.appState.onCallStarted('recoverMP4File', strAction);\r\n\r\n        return Promise.all(finalizeCalls);\r\n      }).then((res) => {\r\n        this.appState.onCallEnded('recoverMP4File - SUCCESS', strAction);\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        this.appState.onCallEnded('recoverMP4File - FAILURE', strAction);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  public updateRecordingFiles(files)\r\n  {\r\n    _.forEach(files, file => {\r\n      if(!_.isEmpty(this.appState.getActiveSessions()) && !_.isEmpty(this.appState.getActiveSessions()[file['id']])) {\r\n        let sessionName = this.videoDeviceService.getSessionNameById(file['id']) ?\r\n          this.videoDeviceService.getSessionNameById(file['id']) :\r\n          this.audioSettingsService.getSessionNameById(file['id']) ;\r\n        this.recordingDetailsService.setRecordedFilePath(sessionName, file['path']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording-utils.service.ts","import {NgModule} from '@angular/core';\r\nimport {InfraModule} from \"../infra/infra.module\";\r\nimport {RecordingDetailsService} from \"./recording-details.service\";\r\nimport {RecordingRecoveryService} from \"./recording-recovery.service\";\r\nimport {SlideService} from \"./slides.service\";\r\nimport {MonitoringModule} from \"../monitoring/monitoring.module\";\r\nimport {CaptureDeviceModule} from \"../capture-device/capture-device.module\";\r\nimport {MouseClickIndicationService} from \"./mouse-click-indication.service\";\r\nimport {RecordingUtilsService} from \"./recording-utils.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    InfraModule,\r\n    MonitoringModule,\r\n    CaptureDeviceModule\r\n  ],\r\n  providers: [\r\n    RecordingDetailsService,\r\n    RecordingRecoveryService,\r\n    SlideService,\r\n    MouseClickIndicationService,\r\n    RecordingUtilsService\r\n  ]\r\n})\r\nexport class RecordingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/recording.module.ts","import {Injectable} from \"@angular/core\";\r\nimport {ipcWrapper} from \"../../../utils/ipcWrapper\";\r\nimport * as _ from \"lodash\";\r\nimport {RecordingDetailsService} from \"./recording-details.service\";\r\nimport {AppNotificationsService} from \"../infra/app-notifications.service\";\r\nimport {AppStateService} from \"../infra/app-state.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {VideoDeviceService} from \"../capture-device/video-device.service\";\r\n\r\n@Injectable()\r\nexport class SlideService {\r\n\r\n  constructor(private appState: AppStateService,\r\n              private appConfig: AppConfigService,\r\n              private recordingDetails: RecordingDetailsService,\r\n              private notificationService: AppNotificationsService,\r\n              private videoService: VideoDeviceService)\r\n  {\r\n    this.registerForSlideCapturingNotifications();\r\n  }\r\n\r\n  public shouldCaptureSlides(): Promise<any>\r\n  {\r\n    let screenSession = _.find(this.appState.getActiveRecordableSessionsIds(), (sessionId) => {\r\n      return this.videoService.getCaptureDeviceTypeBySessionId(sessionId) === 'screen';\r\n    });\r\n    return this.appConfig.setConfigData('config.captureEngine.capturePowerPoint', //config path\r\n      this.appConfig.getConfigData('config.captureEngine.capturePowerPoint') && !_.isEmpty(screenSession), //new captureSlide value\r\n      true, //reload engine with new slide capture value\r\n      false //don't save this dynamic value to disc (of even save to app config object) - only current engine action will use this new value\r\n    );\r\n  }\r\n\r\n  private registerForSlideCapturingNotifications()\r\n  {\r\n    ipcWrapper.registerForNotification('capture-ppt', (data: any) => {\r\n      if (_.isString(data)) {\r\n        data = JSON.parse(data)\r\n      }\r\n      this.recordingDetails.addSlideCapturedFilePath(data);\r\n    });\r\n\r\n    ipcWrapper.registerForNotification('capture-ppt-error', (data: any) => {\r\n      if (_.isString(data)) {\r\n        data = JSON.parse(data)\r\n        if (data.code !== \"EngineError_UnspecifiedError\") // no need to show this to the user as he has nothing to do\r\n          this.notificationService.sendNotification('NOTIFICATIONS.' + data.code, \"error\");\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/recording/slides.service.ts","import {NgModule} from '@angular/core';\r\nimport {InfraModule} from \"../infra/infra.module\";\r\nimport {ResourceIdService} from \"./resource-id.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    InfraModule\r\n  ],\r\n  providers: [\r\n    ResourceIdService\r\n  ]\r\n})\r\nexport class ResourceIdModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/resource-id/resource-id.module.ts","import {Injectable, OnInit} from '@angular/core';\r\nimport {KalturaApiService} from \"../infra/kaltura-api.service\";\r\nimport {AppConfigService} from \"../infra/app-config.service\";\r\nimport {AppLoggerService} from \"../infra/app-logger.service\";\r\nimport * as _ from 'lodash';\r\nimport {utils} from \"utils/utils\";\r\nimport {AppNotificationsService} from \"../infra/app-notifications.service\";\r\n\r\n\r\n@Injectable()\r\nexport class ResourceIdService {\r\n\r\n  _ready: Promise<boolean>;\r\n  _resourceId: string;\r\n  _resourceName: string;\r\n\r\n  constructor(private kalturaAPI: KalturaApiService,\r\n              private log: AppLoggerService,\r\n              private appNotificationService: AppNotificationsService,\r\n              private appConfig: AppConfigService) {\r\n\r\n  }\r\n\r\n  public get resourceId() {\r\n    return this._resourceId;\r\n  }\r\n  public get resourceName() {\r\n    return this._resourceName;\r\n  }\r\n\r\n  public ready() : Promise<boolean> {\r\n    //called after the constructor and called  after the first ngOnChanges()\r\n\r\n    if (!this._ready) {\r\n      let sharedConfig = this.appConfig.getConfigData('config.shared');\r\n      this._resourceName=sharedConfig.resourceName;\r\n\r\n      this._ready = this.getResourceId(sharedConfig)\r\n        .then (resourceId=> {\r\n          this._resourceId=resourceId;\r\n          //check if resourceName has changed from last time\r\n          return this.refreshResourceNameFromServer().then( ()=>{\r\n            return Promise.resolve(true);\r\n          }).catch( err=> {\r\n            //not API response, we don't really care\r\n            return Promise.resolve(true);\r\n          })\r\n        })\r\n        .catch(err=>{\r\n          let error = utils.getAPIErrorMessage(err)\r\n\r\n          this.appNotificationService.sendNotification(error, 'error');\r\n\r\n          return Promise.resolve(false);\r\n        })\r\n    }\r\n    return this._ready;\r\n  }\r\n\r\n  public refreshResourceNameFromServer() {\r\n    return this.getResourceFromId(this.resourceId).then( (res)=> {\r\n      if (this._resourceName != res.name) {\r\n        this._resourceName = res.name;\r\n        this.appConfig.setConfigData('config.shared.resourceName', this._resourceName);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getResourceId(sharedConfig: any)\r\n  {\r\n    if (!sharedConfig.resourceId) {\r\n      return this.createResourceId(this._resourceName);\r\n    }\r\n    return Promise.resolve(sharedConfig.resourceId);\r\n  }\r\n\r\n  private createResourceId(resourceName:string) {\r\n    this.log.info(\"creating new resourceId with resourceName = \"+resourceName);\r\n\r\n    return this.getResourceIdFromName(resourceName).then( resourceId => {\r\n\r\n      if (!resourceId) { //we didn't find resourceid with same name...\r\n        return this.kalturaAPI.apiRequest({\r\n          \"service\": \"schedule_scheduleresource\",\r\n          \"action\": \"add\",\r\n          \"scheduleResource:objectType\": \"KalturaCameraScheduleResource\",\r\n          \"scheduleResource:name\": resourceName\r\n        }).toPromise().then((res) => {\r\n\r\n          this.log.info(\"created new resourceId with resourceName = \" + resourceName + \" obj= \" + JSON.stringify(res));\r\n\r\n          this.appConfig.setConfigData('config.shared.resourceId', res.id)\r\n\r\n          return res.id;\r\n        });\r\n      }\r\n\r\n      this.appConfig.setConfigData('config.shared.resourceId', resourceId);\r\n      return resourceId;\r\n    });\r\n  }\r\n\r\n  private getResourceIdFromName(resourceName:string) {\r\n    this.log.info(\"getting  resourceId for resourceName = \"+resourceName);\r\n\r\n    return this.kalturaAPI.apiRequest( {\r\n      \"service\": \"schedule_scheduleresource\",\r\n      \"action\": \"list\",\r\n      \"filter:objectType\": \"KalturaCameraScheduleResourceFilter\",\r\n      \"filter:statusEqual\": 2,\r\n      \"filter:nameEqual\": resourceName\r\n    }).toPromise().then( (res) => {\r\n      if (res.objects && res.objects.length>0) {\r\n          this.log.info(\"got  resource \" + JSON.stringify(res.objects[0]) + \" for resourceName = \" + resourceName);\r\n          return res.objects[0].id;\r\n      }\r\n      this.log.warn(\"didn't found resourceId for resourceName = \"+resourceName);\r\n      return null;\r\n    })\r\n  }\r\n  private getResourceFromId(resourceId:string) {\r\n    this.log.info(\"getting  resourceName for resourceId = \"+resourceId);\r\n\r\n    //todo: move to schedule_scheduleresource:get\r\n    /*\r\n     return this.kalturaAPI.apiRequest( {\r\n     \"service\": \"schedule_scheduleresource\",\r\n     \"action\": \"get\",\r\n     \"scheduleResourceId\": resourceId,\r\n     }).toPromise();\r\n     */\r\n\r\n    return this.kalturaAPI.apiRequest( {\r\n      \"service\": \"schedule_scheduleresource\",\r\n      \"action\": \"list\",\r\n      \"filter:objectType\": \"KalturaCameraScheduleResourceFilter\",\r\n      \"filter:idEqual\": resourceId\r\n    }).toPromise().then( res=> {\r\n      if (res.objects && res.objects.length>0) {\r\n        return res.objects[0];\r\n      }\r\n      return Promise.reject(null);\r\n    })\r\n  }\r\n\r\n  public renameResourceName(newResourceName:string) {\r\n    this.log.info(\"Renaming resourceName to  \"+newResourceName+ \" for id \"+this._resourceId);\r\n\r\n    return this.getResourceIdFromName(newResourceName).then( resId=> {\r\n\r\n      if (!resId) {\r\n        return this.kalturaAPI.apiRequest( {\r\n          \"service\": \"schedule_scheduleresource\",\r\n          \"action\": \"update\",\r\n          \"scheduleResourceId\": this._resourceId,\r\n          \"scheduleResource:objectType\": \"KalturaCameraScheduleResource\",\r\n          \"scheduleResource:name\": newResourceName\r\n        }).toPromise().then( (res) => {\r\n          this.log.info(\"Renamed resourceName  \"+newResourceName);\r\n          this.appConfig.setConfigData('config.shared.resourceName',newResourceName);\r\n          this._resourceName=newResourceName;\r\n          return res.id;\r\n        }).catch(err=>{\r\n          this.log.warn(\"Couldn't rename resourceName to  \"+newResourceName+ \" for id \"+this._resourceId+ \" err=\"+utils.stringifyMsg(err));\r\n\r\n          return Promise.reject(err);\r\n        })\r\n      }\r\n      if (resId==this._resourceId) { //same resource&same value, no problem here\r\n        return Promise.resolve(resId);\r\n      }\r\n\r\n      this.log.warn(\"Couldn't rename resourceName to  \"+newResourceName+ \" for id \"+this._resourceId+ \" name already exists\");\r\n\r\n\r\n      //simulate API error\r\n      return Promise.reject({ error:{ code: 'SYSTEM_NAME_ALREADY_EXISTS'}});\r\n    });\r\n\r\n  };\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/shared/services/resource-id/resource-id.service.ts","import { Injectable } from '@angular/core';\r\nimport { UUID } from \"angular2-uuid\";\r\nimport * as _ from \"lodash\";\r\n\r\ndeclare var electron: any;\r\n\r\nconst COMMON_EVENT_NAME = 'ipc-promise-common-event';\r\nconst COMMON_REPEAT_EVENT_NAME = 'ipc-promise-common-repeat-event';\r\nconst UNREGISTER_COMMON_REPEAT_EVENT_NAME = 'ipc-promise-common-repeat-event-unregister';\r\nconst SUCCESS_EVENT_SUFFIX = '-success';\r\nconst FAILURE_EVENT_SUFFIX = '-failure';\r\nconst COMMON_SUCCESS_EVENT_NAME = COMMON_EVENT_NAME + SUCCESS_EVENT_SUFFIX;\r\nconst COMMON_FAILURE_EVENT_NAME = COMMON_EVENT_NAME + FAILURE_EVENT_SUFFIX;\r\n\r\n\r\n@Injectable()\r\nexport class ipcWrapper {\r\n\r\n  static counter = 0;\r\n\r\n  /**\r\n   * key: eventName + uuid\r\n   * value: event listener\r\n   * @type {Map<any, any>}\r\n   */\r\n  static listenersMap = new Map();\r\n\r\n  static keyboardShortcuts:Map<string,any>=new Map<string,any>();\r\n\r\n  constructor(){\r\n\r\n\r\n  }\r\n\r\n  static sendSystemCommand(systemCommand, ...args) {\r\n    electron.ipcRenderer.send(systemCommand, args);\r\n  }\r\n\r\n  static popCallParams(id) : any {\r\n    let params=ipcWrapper.map.get(id)\r\n    ipcWrapper.map.delete(id);\r\n\r\n    return params;\r\n  }\r\n  static map: Map<string,any> = new Map<string,any>();\r\n  static sendIPC(eventName, ...data) {\r\n\r\n    if (_.isArray(data) && data.length > 0) {\r\n      data = _.without(data, undefined)\r\n    }\r\n\r\n    if (ipcWrapper.counter===0) {\r\n\r\n      electron.ipcRenderer.on(COMMON_SUCCESS_EVENT_NAME, (event, resParams)=> {\r\n        let callParams = ipcWrapper.popCallParams(resParams.id);\r\n        if (callParams) {\r\n          callParams.resolve(resParams.data);\r\n        }\r\n      });\r\n\r\n      electron.ipcRenderer.on(COMMON_FAILURE_EVENT_NAME, (event, resParams) => {\r\n        let callParams =ipcWrapper.popCallParams(resParams.id);\r\n        if (callParams) {\r\n          callParams.reject(resParams.data);\r\n        }\r\n      });\r\n    }\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      let id = eventName + new Date().getTime() + ++ipcWrapper.counter;\r\n\r\n      let params = {\r\n        data: data,\r\n        eventName: eventName,\r\n        id: id,\r\n        resolve: resolve,\r\n        reject: reject\r\n      };\r\n\r\n      ipcWrapper.map.set(id,params);\r\n\r\n      electron.ipcRenderer.send(COMMON_EVENT_NAME, params);\r\n    });\r\n  }\r\n\r\n  static registerForNotification(eventName, callback, ... data) {\r\n\r\n    let uuid = UUID.UUID();\r\n\r\n    let handleEvent = (event, params) => {\r\n      if (callback) {\r\n        callback(...params.data);\r\n      }\r\n    };\r\n\r\n    electron.ipcRenderer.on(COMMON_REPEAT_EVENT_NAME + '_' + eventName, handleEvent);\r\n\r\n    ipcWrapper.listenersMap.set(eventName + uuid, handleEvent);\r\n\r\n    let params = {\r\n      data: data,\r\n      eventName: eventName\r\n    }\r\n\r\n    electron.ipcRenderer.send(COMMON_REPEAT_EVENT_NAME, params);\r\n\r\n    return uuid;\r\n  }\r\n\r\n  // stop getting notifications for the channel named COMMON_REPEAT_EVENT_NAME + '_' + eventName\r\n  static unregisterForNotification(eventName, id = '') {\r\n    //remove specific listener from channel\r\n    let listenerKey = eventName + id;\r\n    if(ipcWrapper.listenersMap.has(listenerKey)) {\r\n      electron.ipcRenderer.removeListener(COMMON_REPEAT_EVENT_NAME + '_' + eventName, ipcWrapper.listenersMap.get(listenerKey));\r\n      ipcWrapper.listenersMap.delete(listenerKey);\r\n    } else {\r\n      electron.ipcRenderer.removeAllListeners(COMMON_REPEAT_EVENT_NAME + '_' + eventName);\r\n      ipcWrapper.clearListenersMapByEventName(eventName);\r\n    }\r\n  }\r\n\r\n  private static clearListenersMapByEventName(eventName) {\r\n    _.forEach(\r\n      _.filter([...ipcWrapper.listenersMap.keys()], (mapKey) => { return mapKey.indexOf(eventName) > -1 }), (rmKey) => {\r\n        ipcWrapper.listenersMap.delete(rmKey);\r\n      });\r\n  }\r\n\r\n  private static registerShortcutCB(shortcutData:any) {\r\n    let shortcut=shortcutData['shortcut'];\r\n    let cb=ipcWrapper.keyboardShortcuts.get(shortcut);\r\n    if (cb) {\r\n      cb();\r\n    }\r\n  }\r\n\r\n  static registerShortcut(shortcut:string,cb:any){\r\n\r\n    //we need to register to the callback only once!\r\n    let callback = ipcWrapper.keyboardShortcuts.size>0 ? null : ipcWrapper.registerShortcutCB;\r\n    ipcWrapper.keyboardShortcuts.set(shortcut,cb);\r\n    return ipcWrapper.registerForNotification(\"registerGlobalShortcut\",callback,shortcut)\r\n  }\r\n\r\n  static unRegisterShortcut(shortcut:string, id = '')\r\n  {\r\n    ipcWrapper.keyboardShortcuts.delete(shortcut);\r\n    ipcWrapper.unregisterForNotification(\"registerGlobalShortcut\", id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/utils/ipcWrapper.ts","import {Injectable} from \"@angular/core\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class MinimizeService {\r\n  private minimizeRecording$ = null;\r\n\r\n  public minimizeToTray(delaySec: number){\r\n    this.cancelTrayMinimizationSubscription();\r\n    this.minimizeRecording$ = Observable.timer(delaySec * 1000).subscribe(() => {\r\n      window.close();\r\n    });\r\n  }\r\n\r\n  public cancelTrayMinimizationSubscription(){\r\n    if (this.minimizeRecording$){\r\n      this.minimizeRecording$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/utils/minimize.service.ts","import {Injectable} from '@angular/core';\r\nimport {SelectItem} from \"primeng/components/common/api\";\r\nimport * as _ from \"lodash\";\r\n\r\n\r\nlet errorCodes= {\r\n  'INVALID_WIDGET_ID': 'NOTIFICATIONS.error_invalid_partner_id',\r\n  \"SYSTEM_NAME_ALREADY_EXISTS\": 'SETTINGS.SYSTEM_NAME_ALREADY_EXISTS'\r\n}\r\n\r\nexport type promiseState = {\r\n  status: string,\r\n  value?: any,\r\n  reason?: any\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class utils {\r\n\r\n  static STRING_LIMIT = 28;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  static sortResolutionArray(resArray: SelectItem[]) {\r\n    resArray.sort((a, b) => {\r\n      return b.value[0] * b.value[1] - a.value[0] * a.value[1];\r\n    });\r\n  }\r\n\r\n  static getAPIErrorMessage(err:any) {\r\n    let error = 'NOTIFICATIONS.error_server_not_reachable';\r\n\r\n    if (err && _.isObject(err.error) && err.error.code){\r\n\r\n\r\n      error = errorCodes[err.error.code]\r\n\r\n      if (!error) {\r\n        error = err.error.message;\r\n      }\r\n    }\r\n\r\n    return error;\r\n\r\n  }\r\n  static stringifyMsg(msg) {\r\n    if (_.isError(msg)) {\r\n      return msg.message + \" \" + msg.stack;\r\n    }\r\n    if (_.isString(msg))\r\n      return msg;\r\n\r\n    return JSON.stringify(msg)\r\n  }\r\n\r\n  static delayPromise(milis) {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, milis);\r\n    })\r\n  }\r\n\r\n  static colorspace_weight = {\r\n    'NV12': 100,\r\n    'YV12': 99,\r\n    'YUY2': 98,\r\n    'UYVY': 97\r\n  };\r\n\r\n  static filterAndSortInputs(inputTypes: any, limits) {\r\n    let ret = _.filter(_.castArray(inputTypes), (input) => {\r\n      let fps = input['fps'];\r\n      return  (fps >= limits.minFPS &&  fps <= limits.maxFPS  );\r\n    });\r\n\r\n\r\n    ret = _.orderBy(ret, [\r\n        (input) => {\r\n          if (limits.defaultHeight) {\r\n            return Math.abs(input['height'] - limits.defaultHeight);\r\n          } else {\r\n            return 1; //ignore height\r\n          }\r\n        },\r\n        (input) => {\r\n          return Math.abs(input['fps'] - limits.defaultFPS);\r\n        },\r\n        function(input) {\r\n          return input.interlaceMode==='progressive' ? 1 : 0;\r\n        },\r\n        function(input) {\r\n          return input['width']*input['height']\r\n        },\r\n        (input) => {\r\n          let weight = utils.colorspace_weight[input['colorspace'].toUpperCase()]\r\n          if (weight) {\r\n            return weight;\r\n          }\r\n          return 0;\r\n\r\n        }],\r\n      [\"asec\", \"asec\", \"desc\",\"desc\", \"desc\"]);\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  static sha1(msg) {\r\n    function rotate_left(n, s) {\r\n      var t4 = ( n << s ) | (n >>> (32 - s));\r\n      return t4;\r\n    };\r\n    function lsb_hex(val) {\r\n      var str = \"\";\r\n      var i;\r\n      var vh;\r\n      var vl;\r\n      for (i = 0; i <= 6; i += 2) {\r\n        vh = (val >>> (i * 4 + 4)) & 0x0f;\r\n        vl = (val >>> (i * 4)) & 0x0f;\r\n        str += vh.toString(16) + vl.toString(16);\r\n      }\r\n      return str;\r\n    };\r\n    function cvt_hex(val) {\r\n      var str = \"\";\r\n      var i;\r\n      var v;\r\n      for (i = 7; i >= 0; i--) {\r\n        v = (val >>> (i * 4)) & 0x0f;\r\n        str += v.toString(16);\r\n      }\r\n      return str;\r\n    };\r\n    function Utf8Encode(string) {\r\n      string = string.replace(/\\r\\n/g, \"\\n\");\r\n      var utftext = \"\";\r\n      for (var n = 0; n < string.length; n++) {\r\n        var c = string.charCodeAt(n);\r\n        if (c < 128) {\r\n          utftext += String.fromCharCode(c);\r\n        }\r\n        else if ((c > 127) && (c < 2048)) {\r\n          utftext += String.fromCharCode((c >> 6) | 192);\r\n          utftext += String.fromCharCode((c & 63) | 128);\r\n        }\r\n        else {\r\n          utftext += String.fromCharCode((c >> 12) | 224);\r\n          utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n          utftext += String.fromCharCode((c & 63) | 128);\r\n        }\r\n      }\r\n      return utftext;\r\n    };\r\n    var blockstart;\r\n    var i, j;\r\n    var W = new Array(80);\r\n    var H0 = 0x67452301;\r\n    var H1 = 0xEFCDAB89;\r\n    var H2 = 0x98BADCFE;\r\n    var H3 = 0x10325476;\r\n    var H4 = 0xC3D2E1F0;\r\n    var A, B, C, D, E;\r\n    var temp;\r\n    msg = Utf8Encode(msg);\r\n    var msg_len = msg.length;\r\n    var word_array = new Array();\r\n    for (i = 0; i < msg_len - 3; i += 4) {\r\n      j = msg.charCodeAt(i) << 24 | msg.charCodeAt(i + 1) << 16 |\r\n        msg.charCodeAt(i + 2) << 8 | msg.charCodeAt(i + 3);\r\n      word_array.push(j);\r\n    }\r\n    switch (msg_len % 4) {\r\n      case 0:\r\n        i = 0x080000000;\r\n        break;\r\n      case 1:\r\n        i = msg.charCodeAt(msg_len - 1) << 24 | 0x0800000;\r\n        break;\r\n      case 2:\r\n        i = msg.charCodeAt(msg_len - 2) << 24 | msg.charCodeAt(msg_len - 1) << 16 | 0x08000;\r\n        break;\r\n      case 3:\r\n        i = msg.charCodeAt(msg_len - 3) << 24 | msg.charCodeAt(msg_len - 2) << 16 | msg.charCodeAt(msg_len - 1) << 8 | 0x80;\r\n        break;\r\n    }\r\n    word_array.push(i);\r\n    while ((word_array.length % 16) != 14) word_array.push(0);\r\n    word_array.push(msg_len >>> 29);\r\n    word_array.push((msg_len << 3) & 0x0ffffffff);\r\n    for (blockstart = 0; blockstart < word_array.length; blockstart += 16) {\r\n      for (i = 0; i < 16; i++) W[i] = word_array[blockstart + i];\r\n      for (i = 16; i <= 79; i++) W[i] = rotate_left(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\r\n      A = H0;\r\n      B = H1;\r\n      C = H2;\r\n      D = H3;\r\n      E = H4;\r\n      for (i = 0; i <= 19; i++) {\r\n        temp = (rotate_left(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\r\n        E = D;\r\n        D = C;\r\n        C = rotate_left(B, 30);\r\n        B = A;\r\n        A = temp;\r\n      }\r\n      for (i = 20; i <= 39; i++) {\r\n        temp = (rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\r\n        E = D;\r\n        D = C;\r\n        C = rotate_left(B, 30);\r\n        B = A;\r\n        A = temp;\r\n      }\r\n      for (i = 40; i <= 59; i++) {\r\n        temp = (rotate_left(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\r\n        E = D;\r\n        D = C;\r\n        C = rotate_left(B, 30);\r\n        B = A;\r\n        A = temp;\r\n      }\r\n      for (i = 60; i <= 79; i++) {\r\n        temp = (rotate_left(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\r\n        E = D;\r\n        D = C;\r\n        C = rotate_left(B, 30);\r\n        B = A;\r\n        A = temp;\r\n      }\r\n      H0 = (H0 + A) & 0x0ffffffff;\r\n      H1 = (H1 + B) & 0x0ffffffff;\r\n      H2 = (H2 + C) & 0x0ffffffff;\r\n      H3 = (H3 + D) & 0x0ffffffff;\r\n      H4 = (H4 + E) & 0x0ffffffff;\r\n    }\r\n    let str_temp: string = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);\r\n\r\n    return str_temp.toLowerCase();\r\n  };\r\n\r\n  public static areEventsEqual(eventA, eventB) {\r\n    // if both not exits => equal\r\n    // if both exits with the same properties => equal\r\n    return ((_.isEmpty(eventA) && _.isEmpty(eventB))\r\n    || (!_.isEmpty(eventA)\r\n    && !_.isEmpty(eventB)\r\n    && eventA['id'] === eventB['id']\r\n    && eventA['startDate'] === eventB['startDate']\r\n    && eventA['endDate'] === eventB['endDate']\r\n    && eventA['summary'] === eventB['summary']\r\n    && eventA['description'] === eventB['description']\r\n    && eventA['organizer'] === eventB['organizer']\r\n    && eventA['tags'] === eventB['tags']));\r\n  }\r\n\r\n  /**\r\n   * Concat url and prevent double slash and redundant spaces - no handling for params.\r\n   * @param input: a collected array of url parts to be concat.\r\n   */\r\n  static urlBuilder(...input) {\r\n    let url;\r\n\r\n    if (input.length && input[0].startsWith('file:')) {\r\n      // join all except the file string with /\r\n      url = [].slice.call(input, 1).join('/');\r\n\r\n      // remove double splash\r\n      url = url.replace(/([^:\\s])\\/+/g, '$1/');\r\n\r\n      // add the file:///\r\n      url = [input[0], url].join('/');\r\n\r\n      // make sure max / is 3\r\n      return url.replace(/(\\/{0,3})\\/*/g, '$1');\r\n    }\r\n    else {\r\n      // join all with /\r\n      url = [].slice.call(input, 0).join('/');\r\n\r\n      // remove double splash\r\n      return url.replace(/([^:\\s])\\/+/g, '$1/');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * sort inputs names alphabetically when audio input is the last one\r\n   * f.e: ['session0', 'session1'..., 'audio']\r\n   * @param inputsNames\r\n   */\r\n  public static sortInputsNames(inputsNames)\r\n  {\r\n    inputsNames.sort((a, b) => {\r\n      //audio should be last\r\n      if(a === 'audio') return 1;\r\n      if(b === 'audio') return -1;\r\n      //alphabetical order\r\n      return a < b ? -1 : 1;\r\n    });\r\n    return inputsNames;\r\n  }\r\n\r\n  /**\r\n   * each sessionName has it's own display name\r\n   * After classroom app multiple inputs impl. our pc and cc app started to use different sessions display name...\r\n   * returned string are translation placeholders under COMMON category (f.e COMMON.primary in en.json locale)\r\n   */\r\n  public static getDisplayNameForSessionName(appType, defaultPrimarySession, sessionName)\r\n  {\r\n    if(appType === 'cc') {\r\n      switch (sessionName) {\r\n        case 'audio':\r\n          return 'audio';\r\n        case 'session0':\r\n          return 'primary_input';\r\n        default:\r\n          let sessionIndex = parseInt(sessionName.split('session')[1]);\r\n          return 'input' + ++sessionIndex;\r\n      }\r\n    } else {\r\n      return sessionName === 'audio' ? 'audio' : (sessionName === defaultPrimarySession ? 'primary' : 'secondary');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * implementing Promise.allSettled behaviour (currently a stage 3 proposal: https://github.com/tc39/proposal-promise-allSettled)\r\n   *\r\n   * Returning an array of completed promises, some can be rejected and some fulfilled\r\n   * Usage example after returned:\r\n   *    const successfulPromises = results.filter(p => p.status === 'fulfilled');\r\n   * @param promises array of promises\r\n   * @return an array of promiseState objects\r\n   */\r\n\r\n  public static promiseAllSettled(promises: Promise<any>[]): Promise<promiseState[]>\r\n  {\r\n    function reflect(promise) {\r\n      return promise.then(\r\n        (v) => {\r\n          return <promiseState>{ status: 'fulfilled', value: v };\r\n        },\r\n        (error) => {\r\n          return <promiseState>{ status: 'rejected', reason: error };\r\n        }\r\n      );\r\n    }\r\n    return Promise.all(promises.map(reflect));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/src/utils/utils.ts","var map = {\n\t\"./af\": \"../../../../moment/locale/af.js\",\n\t\"./af.js\": \"../../../../moment/locale/af.js\",\n\t\"./ar\": \"../../../../moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../../../moment/locale/ar.js\",\n\t\"./az\": \"../../../../moment/locale/az.js\",\n\t\"./az.js\": \"../../../../moment/locale/az.js\",\n\t\"./be\": \"../../../../moment/locale/be.js\",\n\t\"./be.js\": \"../../../../moment/locale/be.js\",\n\t\"./bg\": \"../../../../moment/locale/bg.js\",\n\t\"./bg.js\": \"../../../../moment/locale/bg.js\",\n\t\"./bn\": \"../../../../moment/locale/bn.js\",\n\t\"./bn.js\": \"../../../../moment/locale/bn.js\",\n\t\"./bo\": \"../../../../moment/locale/bo.js\",\n\t\"./bo.js\": \"../../../../moment/locale/bo.js\",\n\t\"./br\": \"../../../../moment/locale/br.js\",\n\t\"./br.js\": \"../../../../moment/locale/br.js\",\n\t\"./bs\": \"../../../../moment/locale/bs.js\",\n\t\"./bs.js\": \"../../../../moment/locale/bs.js\",\n\t\"./ca\": \"../../../../moment/locale/ca.js\",\n\t\"./ca.js\": \"../../../../moment/locale/ca.js\",\n\t\"./cs\": \"../../../../moment/locale/cs.js\",\n\t\"./cs.js\": \"../../../../moment/locale/cs.js\",\n\t\"./cv\": \"../../../../moment/locale/cv.js\",\n\t\"./cv.js\": \"../../../../moment/locale/cv.js\",\n\t\"./cy\": \"../../../../moment/locale/cy.js\",\n\t\"./cy.js\": \"../../../../moment/locale/cy.js\",\n\t\"./da\": \"../../../../moment/locale/da.js\",\n\t\"./da.js\": \"../../../../moment/locale/da.js\",\n\t\"./de\": \"../../../../moment/locale/de.js\",\n\t\"./de-at\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../../../moment/locale/de.js\",\n\t\"./dv\": \"../../../../moment/locale/dv.js\",\n\t\"./dv.js\": \"../../../../moment/locale/dv.js\",\n\t\"./el\": \"../../../../moment/locale/el.js\",\n\t\"./el.js\": \"../../../../moment/locale/el.js\",\n\t\"./en-au\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-nz\": \"../../../../moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../../../moment/locale/en-nz.js\",\n\t\"./eo\": \"../../../../moment/locale/eo.js\",\n\t\"./eo.js\": \"../../../../moment/locale/eo.js\",\n\t\"./es\": \"../../../../moment/locale/es.js\",\n\t\"./es-do\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../../../moment/locale/es-do.js\",\n\t\"./es.js\": \"../../../../moment/locale/es.js\",\n\t\"./et\": \"../../../../moment/locale/et.js\",\n\t\"./et.js\": \"../../../../moment/locale/et.js\",\n\t\"./eu\": \"../../../../moment/locale/eu.js\",\n\t\"./eu.js\": \"../../../../moment/locale/eu.js\",\n\t\"./fa\": \"../../../../moment/locale/fa.js\",\n\t\"./fa.js\": \"../../../../moment/locale/fa.js\",\n\t\"./fi\": \"../../../../moment/locale/fi.js\",\n\t\"./fi.js\": \"../../../../moment/locale/fi.js\",\n\t\"./fo\": \"../../../../moment/locale/fo.js\",\n\t\"./fo.js\": \"../../../../moment/locale/fo.js\",\n\t\"./fr\": \"../../../../moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../../../moment/locale/fr.js\",\n\t\"./fy\": \"../../../../moment/locale/fy.js\",\n\t\"./fy.js\": \"../../../../moment/locale/fy.js\",\n\t\"./gd\": \"../../../../moment/locale/gd.js\",\n\t\"./gd.js\": \"../../../../moment/locale/gd.js\",\n\t\"./gl\": \"../../../../moment/locale/gl.js\",\n\t\"./gl.js\": \"../../../../moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./he\": \"../../../../moment/locale/he.js\",\n\t\"./he.js\": \"../../../../moment/locale/he.js\",\n\t\"./hi\": \"../../../../moment/locale/hi.js\",\n\t\"./hi.js\": \"../../../../moment/locale/hi.js\",\n\t\"./hr\": \"../../../../moment/locale/hr.js\",\n\t\"./hr.js\": \"../../../../moment/locale/hr.js\",\n\t\"./hu\": \"../../../../moment/locale/hu.js\",\n\t\"./hu.js\": \"../../../../moment/locale/hu.js\",\n\t\"./hy-am\": \"../../../../moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../../../moment/locale/hy-am.js\",\n\t\"./id\": \"../../../../moment/locale/id.js\",\n\t\"./id.js\": \"../../../../moment/locale/id.js\",\n\t\"./is\": \"../../../../moment/locale/is.js\",\n\t\"./is.js\": \"../../../../moment/locale/is.js\",\n\t\"./it\": \"../../../../moment/locale/it.js\",\n\t\"./it.js\": \"../../../../moment/locale/it.js\",\n\t\"./ja\": \"../../../../moment/locale/ja.js\",\n\t\"./ja.js\": \"../../../../moment/locale/ja.js\",\n\t\"./jv\": \"../../../../moment/locale/jv.js\",\n\t\"./jv.js\": \"../../../../moment/locale/jv.js\",\n\t\"./ka\": \"../../../../moment/locale/ka.js\",\n\t\"./ka.js\": \"../../../../moment/locale/ka.js\",\n\t\"./kk\": \"../../../../moment/locale/kk.js\",\n\t\"./kk.js\": \"../../../../moment/locale/kk.js\",\n\t\"./km\": \"../../../../moment/locale/km.js\",\n\t\"./km.js\": \"../../../../moment/locale/km.js\",\n\t\"./kn\": \"../../../../moment/locale/kn.js\",\n\t\"./kn.js\": \"../../../../moment/locale/kn.js\",\n\t\"./ko\": \"../../../../moment/locale/ko.js\",\n\t\"./ko.js\": \"../../../../moment/locale/ko.js\",\n\t\"./ky\": \"../../../../moment/locale/ky.js\",\n\t\"./ky.js\": \"../../../../moment/locale/ky.js\",\n\t\"./lb\": \"../../../../moment/locale/lb.js\",\n\t\"./lb.js\": \"../../../../moment/locale/lb.js\",\n\t\"./lo\": \"../../../../moment/locale/lo.js\",\n\t\"./lo.js\": \"../../../../moment/locale/lo.js\",\n\t\"./lt\": \"../../../../moment/locale/lt.js\",\n\t\"./lt.js\": \"../../../../moment/locale/lt.js\",\n\t\"./lv\": \"../../../../moment/locale/lv.js\",\n\t\"./lv.js\": \"../../../../moment/locale/lv.js\",\n\t\"./me\": \"../../../../moment/locale/me.js\",\n\t\"./me.js\": \"../../../../moment/locale/me.js\",\n\t\"./mi\": \"../../../../moment/locale/mi.js\",\n\t\"./mi.js\": \"../../../../moment/locale/mi.js\",\n\t\"./mk\": \"../../../../moment/locale/mk.js\",\n\t\"./mk.js\": \"../../../../moment/locale/mk.js\",\n\t\"./ml\": \"../../../../moment/locale/ml.js\",\n\t\"./ml.js\": \"../../../../moment/locale/ml.js\",\n\t\"./mr\": \"../../../../moment/locale/mr.js\",\n\t\"./mr.js\": \"../../../../moment/locale/mr.js\",\n\t\"./ms\": \"../../../../moment/locale/ms.js\",\n\t\"./ms-my\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../../../moment/locale/ms.js\",\n\t\"./my\": \"../../../../moment/locale/my.js\",\n\t\"./my.js\": \"../../../../moment/locale/my.js\",\n\t\"./nb\": \"../../../../moment/locale/nb.js\",\n\t\"./nb.js\": \"../../../../moment/locale/nb.js\",\n\t\"./ne\": \"../../../../moment/locale/ne.js\",\n\t\"./ne.js\": \"../../../../moment/locale/ne.js\",\n\t\"./nl\": \"../../../../moment/locale/nl.js\",\n\t\"./nl-be\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../../../moment/locale/nl.js\",\n\t\"./nn\": \"../../../../moment/locale/nn.js\",\n\t\"./nn.js\": \"../../../../moment/locale/nn.js\",\n\t\"./pa-in\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pl\": \"../../../../moment/locale/pl.js\",\n\t\"./pl.js\": \"../../../../moment/locale/pl.js\",\n\t\"./pt\": \"../../../../moment/locale/pt.js\",\n\t\"./pt-br\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../../../moment/locale/pt.js\",\n\t\"./ro\": \"../../../../moment/locale/ro.js\",\n\t\"./ro.js\": \"../../../../moment/locale/ro.js\",\n\t\"./ru\": \"../../../../moment/locale/ru.js\",\n\t\"./ru.js\": \"../../../../moment/locale/ru.js\",\n\t\"./sd\": \"../../../../moment/locale/sd.js\",\n\t\"./sd.js\": \"../../../../moment/locale/sd.js\",\n\t\"./se\": \"../../../../moment/locale/se.js\",\n\t\"./se.js\": \"../../../../moment/locale/se.js\",\n\t\"./si\": \"../../../../moment/locale/si.js\",\n\t\"./si.js\": \"../../../../moment/locale/si.js\",\n\t\"./sk\": \"../../../../moment/locale/sk.js\",\n\t\"./sk.js\": \"../../../../moment/locale/sk.js\",\n\t\"./sl\": \"../../../../moment/locale/sl.js\",\n\t\"./sl.js\": \"../../../../moment/locale/sl.js\",\n\t\"./sq\": \"../../../../moment/locale/sq.js\",\n\t\"./sq.js\": \"../../../../moment/locale/sq.js\",\n\t\"./sr\": \"../../../../moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../../../moment/locale/sr.js\",\n\t\"./ss\": \"../../../../moment/locale/ss.js\",\n\t\"./ss.js\": \"../../../../moment/locale/ss.js\",\n\t\"./sv\": \"../../../../moment/locale/sv.js\",\n\t\"./sv.js\": \"../../../../moment/locale/sv.js\",\n\t\"./sw\": \"../../../../moment/locale/sw.js\",\n\t\"./sw.js\": \"../../../../moment/locale/sw.js\",\n\t\"./ta\": \"../../../../moment/locale/ta.js\",\n\t\"./ta.js\": \"../../../../moment/locale/ta.js\",\n\t\"./te\": \"../../../../moment/locale/te.js\",\n\t\"./te.js\": \"../../../../moment/locale/te.js\",\n\t\"./tet\": \"../../../../moment/locale/tet.js\",\n\t\"./tet.js\": \"../../../../moment/locale/tet.js\",\n\t\"./th\": \"../../../../moment/locale/th.js\",\n\t\"./th.js\": \"../../../../moment/locale/th.js\",\n\t\"./tl-ph\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../../../moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../../../moment/locale/tlh.js\",\n\t\"./tr\": \"../../../../moment/locale/tr.js\",\n\t\"./tr.js\": \"../../../../moment/locale/tr.js\",\n\t\"./tzl\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzm\": \"../../../../moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../../../moment/locale/tzm.js\",\n\t\"./uk\": \"../../../../moment/locale/uk.js\",\n\t\"./uk.js\": \"../../../../moment/locale/uk.js\",\n\t\"./ur\": \"../../../../moment/locale/ur.js\",\n\t\"./ur.js\": \"../../../../moment/locale/ur.js\",\n\t\"./uz\": \"../../../../moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../../../moment/locale/uz.js\",\n\t\"./vi\": \"../../../../moment/locale/vi.js\",\n\t\"./vi.js\": \"../../../../moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../../../moment/locale/yo.js\",\n\t\"./yo.js\": \"../../../../moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../../../moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../../../moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../../../moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/BuildAgentUItestsAgent/work/1716201729f5df63/lecture-capture-app/~/moment/locale ^\\.\\/.*$\n// module id = ../../../../moment/locale recursive ^\\.\\/.*$\n// module chunks = 0"],"sourceRoot":"webpack:///"}